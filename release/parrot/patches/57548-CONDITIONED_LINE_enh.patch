Index: parrot-svn/config/gen/makefiles/bcg.in
===================================================================
--- parrot-svn.orig/config/gen/makefiles/bcg.in
+++ parrot-svn/config/gen/makefiles/bcg.in
@@ -1,8 +1,8 @@
 RM_F		= @rm_f@
 PERL		= @perl@
 PARROT	    	= @build_dir@/parrot@exe@
-#CONDITIONED_LINE(win32):LIBPARROT = @build_dir@/libparrot@a@
-#INVERSE_CONDITIONED_LINE(win32):LIBPARROT = @build_dir@/@blib_dir@/libparrot@a@
+#IF(win32):LIBPARROT = @build_dir@/libparrot@a@
+#ELSE:LIBPARROT = @build_dir@/@blib_dir@/libparrot@a@
 O		= @o@
 LOAD_EXT	= @load_ext@
 CC         	= @cc@
@@ -14,8 +14,8 @@ LINK_DYNAMIC  	= @link_dynamic@
 LINK       	= @link@
 LINKFLAGS  	= @linkflags@ @link_debug@ @ld_debug@
 LD         	= @ld@
-#CONDITIONED_LINE(win32):LDFLAGS = @ldflags@ @ld_debug@ $(LIBPARROT)
-#INVERSE_CONDITIONED_LINE(win32):LDFLAGS = @ldflags@ @ld_debug@ -L@build_dir@/blib/lib/ -lparrot
+#IF(win32):LDFLAGS = @ldflags@ @ld_debug@ $(LIBPARROT)
+#ELSE:LDFLAGS = @ldflags@ @ld_debug@ -L@build_dir@/blib/lib/ -lparrot
 SHARE_EXT       = @share_ext@
 LD_SHARE_FLAGS  = @ld_share_flags@
 BUILD_PMC   	= $(PERL) @build_dir@/tools/build/dynpmc.pl
Index: parrot-svn/config/gen/makefiles/docs.in
===================================================================
--- parrot-svn.orig/config/gen/makefiles/docs.in
+++ parrot-svn/config/gen/makefiles/docs.in
@@ -2,10 +2,10 @@
 # $Id: docs.in 28693 2008-06-25 13:54:06Z particle $
 
 # Setup of some commands
-PERL   = @perl@
-RM_F   = @rm_f@
-MKPATH = @mkpath@
-CHMOD  = @chmod@
+PERL      = @perl@
+RM_F      = @rm_f@
+MKPATH    = @mkpath@
+CHMOD     = @chmod@
 PERLDOC   = @perldoc@
 BUILD_DIR = @build_dir@
 RECONFIGURE = $(PERL) tools/dev/reconfigure.pl
@@ -41,8 +41,8 @@ doc-prep:
 	$(MKPATH) ops
 
 packfile-c.pod: ../src/packfile.c
-#CONDITIONED_LINE(new_perldoc):	perldoc -ud packfile-c.pod ../src/packfile.c 
-#INVERSE_CONDITIONED_LINE(new_perldoc):	perldoc -u ../src/packfile.c > packfile-c.pod
+#IF(new_perldoc):	perldoc -ud packfile-c.pod ../src/packfile.c
+#ELSE:	perldoc -u ../src/packfile.c > packfile-c.pod
 
 clean:
 	$(RM_F) packfile-c.pod $(POD)
@@ -53,3 +53,8 @@ html:
 html-clean:
 	$(PERL) -I../lib -MParrot::Distribution -e "Parrot::Distribution->new()->delete_html_docs()"
 
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/config/gen/makefiles/dynoplibs_pl.in
===================================================================
--- parrot-svn.orig/config/gen/makefiles/dynoplibs_pl.in
+++ parrot-svn/config/gen/makefiles/dynoplibs_pl.in
@@ -32,7 +32,7 @@ our $O = q[@o@];
 our $CFLAGS = q[@ccflags@ @cc_shared@ @cc_debug@ @ccwarn@ @cc_hasjit@ @cg_flag@ @gc_flag@];
 
 our $LIBPARROT = q[];
-#CONDITIONED_LINE(parrot_is_shared):$LIBPARROT = q[@libparrot_ldflags@];
+#IF(parrot_is_shared):$LIBPARROT = q[@libparrot_ldflags@];
 
 # Here comes some stuff for Win32.
 our $PATHQUOTE = q[];
@@ -53,8 +53,8 @@ our $OPS2C = "$PERL -I $PATHQUOTE" .
              $PATHQUOTE;
 our %cores = (
     C       => q[],
-#CONDITIONED_LINE(cg_flag):   CGP     => '_cgp',
-#CONDITIONED_LINE(cg_flag):   CGoto   => '_cg',
+#IF(cg_flag):   CGP     => '_cgp',
+#IF(cg_flag):   CGoto   => '_cg',
     CSwitch => '_switch'
 );
 
Index: parrot-svn/config/gen/makefiles/dynpmc.in
===================================================================
--- parrot-svn.orig/config/gen/makefiles/dynpmc.in
+++ parrot-svn/config/gen/makefiles/dynpmc.in
@@ -14,30 +14,30 @@ PMCS = \
   dynlexpad \
   foo \
   rotest \
-#CONDITIONED_LINE(has_gdbm):  gdbmhash \
+#IF(has_gdbm):  gdbmhash \
   rational \
-#CONDITIONED_LINE(has_crypto):  md2 \
-#CONDITIONED_LINE(has_crypto):  md4 \
-#CONDITIONED_LINE(has_crypto):  md5 \
-#CONDITIONED_LINE(has_crypto):  ripemd160 \
-#CONDITIONED_LINE(has_crypto):  sha \
-#CONDITIONED_LINE(has_crypto):  sha1 \
-#CONDITIONED_LINE(has_crypto):  sha256 \
-#CONDITIONED_LINE(has_crypto):  sha512 \
+#IF(has_crypto):  md2 \
+#IF(has_crypto):  md4 \
+#IF(has_crypto):  md5 \
+#IF(has_crypto):  ripemd160 \
+#IF(has_crypto):  sha \
+#IF(has_crypto):  sha1 \
+#IF(has_crypto):  sha256 \
+#IF(has_crypto):  sha512 \
   subproxy 
 
 BUILD = $(PERL) @build_dir@/tools/build/dynpmc.pl
 
 # some *.pmc file are generated
 GEN_PMC_DEFINITIONS = \
-#CONDITIONED_LINE(has_crypto):  md2.pmc \
-#CONDITIONED_LINE(has_crypto):  md4.pmc \
-#CONDITIONED_LINE(has_crypto):  md5.pmc \
-#CONDITIONED_LINE(has_crypto):  ripemd160.pmc \
-#CONDITIONED_LINE(has_crypto):  sha.pmc \
-#CONDITIONED_LINE(has_crypto):  sha1.pmc \
-#CONDITIONED_LINE(has_crypto):  sha256.pmc \
-#CONDITIONED_LINE(has_crypto):  sha512.pmc
+#IF(has_crypto):  md2.pmc \
+#IF(has_crypto):  md4.pmc \
+#IF(has_crypto):  md5.pmc \
+#IF(has_crypto):  ripemd160.pmc \
+#IF(has_crypto):  sha.pmc \
+#IF(has_crypto):  sha1.pmc \
+#IF(has_crypto):  sha256.pmc \
+#IF(has_crypto):  sha512.pmc
 
 all :
 	@$(BUILD) generate $(PMCS)
Index: parrot-svn/config/gen/makefiles/dynpmc_pl.in
===================================================================
--- parrot-svn.orig/config/gen/makefiles/dynpmc_pl.in
+++ parrot-svn/config/gen/makefiles/dynpmc_pl.in
@@ -36,7 +36,7 @@ our $O = q[@o@];
 our $CFLAGS = q[@ccflags@ @cc_shared@ @cc_debug@ @ccwarn@ @cc_hasjit@ @cg_flag@ @gc_flag@];
 
 our $LIBPARROT = q[];
-#CONDITIONED_LINE(parrot_is_shared):$LIBPARROT = q[@libparrot_ldflags@];
+#IF(parrot_is_shared):$LIBPARROT = q[@libparrot_ldflags@];
 
 # Here comes some stuff for Win32.
 our $PATHQUOTE = '';
Index: parrot-svn/config/gen/makefiles/ext.in
===================================================================
--- parrot-svn.orig/config/gen/makefiles/ext.in
+++ parrot-svn/config/gen/makefiles/ext.in
@@ -69,12 +69,12 @@ clean: \
 Parrot-Embed : Parrot-Embed.dummy
 
 Parrot-Embed.dummy:
-#CONDITIONED_LINE(win32):	- cd Parrot-Embed && $(PERL) Makefile.PL && nmake
-#INVERSE_CONDITIONED_LINE(win32):	- cd Parrot-Embed && $(PERL) Makefile.PL && $(MAKE)
+#IF(win32):	- cd Parrot-Embed && $(PERL) Makefile.PL && nmake
+#UNLESS(win32):	- cd Parrot-Embed && $(PERL) Makefile.PL && $(MAKE)
 
 Parrot-Embed.clean:
-#CONDITIONED_LINE(win32):	- cd Parrot-Embed && nmake clean
-#INVERSE_CONDITIONED_LINE(win32):	- cd Parrot-Embed && $(MAKE) clean
+#IF(win32):	- cd Parrot-Embed && nmake clean
+#UNLESS(win32):	- cd Parrot-Embed && $(MAKE) clean
 
 #
 # Local variables:
Index: parrot-svn/config/gen/makefiles/json.in
===================================================================
--- parrot-svn.orig/config/gen/makefiles/json.in
+++ parrot-svn/config/gen/makefiles/json.in
@@ -4,8 +4,8 @@ PERL     = @perl@
 RM_F     = @rm_f@
 PARROT   = ../../parrot@exe@
 RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH=@build_dir@/blib/lib
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(!win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
 
 TOOL_DIR = ../..
 PGE_DIR  = ../../compilers/pge
Index: parrot-svn/config/gen/makefiles/nqp.in
===================================================================
--- parrot-svn.orig/config/gen/makefiles/nqp.in
+++ parrot-svn/config/gen/makefiles/nqp.in
@@ -5,8 +5,8 @@ PERL     = @perl@
 RM_F     = @rm_f@
 PARROT   = ../../parrot@exe@
 RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(cygchkdll): SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll): SHRPENV  = env LD_RUN_PATH=@build_dir@/blib/lib
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(!win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
 
 PARROT_LIBRARY = @build_dir@/runtime/parrot/library
 PGE_LIBRARY  = @build_dir@/runtime/parrot/library/PGE
Index: parrot-svn/config/gen/makefiles/parrot_embed.in
===================================================================
--- parrot-svn.orig/config/gen/makefiles/parrot_embed.in
+++ parrot-svn/config/gen/makefiles/parrot_embed.in
@@ -15,7 +15,7 @@ $config{PARROTDIR}       = '../..';
 $config{PARROT}          = '..@slash@..@slash@parrot@exe@';
 $config{C_LIBS}          = '@libs@';
 $config{INCLUDE}         = "$config{PARROTDIR}/include";
-#INVERSE_CONDITIONED_LINE(win32):$config{ALL_PARROT_LIBS} = "@libparrot_ldflags@ $config{C_LIBS}";
+#UNLESS(win32):$config{ALL_PARROT_LIBS} = "@libparrot_ldflags@ $config{C_LIBS}";
 $config{ABS_PARROTDIR}   = Cwd::realpath(
                                File::Spec->rel2abs( $config{PARROTDIR} ) );
 $config{LDDLFLAGS}       = $Config{lddlflags};
@@ -30,9 +30,9 @@ WriteMakefile(
     'NAME'         => 'Parrot::Embed',
     'VERSION_FROM' => 'lib/Parrot/Embed.pm',
     'PREREQ_PM'    => { 'ExtUtils::CBuilder' => 0 },
-#CONDITIONED_LINE(win32):    'LIBS'         => [ $config{C_LIBS} ],
-#CONDITIONED_LINE(win32):    'OBJECT'       => "@libparrot_ldflags@ Embed@o@",
-#INVERSE_CONDITIONED_LINE(win32):    'LIBS'         => [ $config{ALL_PARROT_LIBS} ],
+#IF(win32):    'LIBS'         => [ $config{C_LIBS} ],
+#IF(win32):    'OBJECT'       => "@libparrot_ldflags@ Embed@o@",
+#UNLESS(win32):    'LIBS'         => [ $config{ALL_PARROT_LIBS} ],
     'INC'          => "-I$config{INCLUDE}",
     'PM'           => { map { $_ => "blib/$_" } <lib/Parrot/*pm> },
     'clean'        => { FILES => '*.xs t/greet.pbc' },
Index: parrot-svn/config/gen/makefiles/pct.in
===================================================================
--- parrot-svn.orig/config/gen/makefiles/pct.in
+++ parrot-svn/config/gen/makefiles/pct.in
@@ -10,8 +10,8 @@ PGE_DIR  = ../../compilers/pge
 TEST_DIR = ../../t/compilers/pct
 CP       = @cp@
 RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH=@build_dir@/blib/lib
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(!win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
 
 # Where to put things
 PARROT_LIBRARY    = ../../runtime/parrot/library
Index: parrot-svn/config/gen/makefiles/pge.in
===================================================================
--- parrot-svn.orig/config/gen/makefiles/pge.in
+++ parrot-svn/config/gen/makefiles/pge.in
@@ -8,8 +8,8 @@ PARROT   = ../../parrot@exe@
 TOOL_DIR = ../..
 CP       = @cp@
 RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH=@build_dir@/blib/lib
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(!win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
 
 # Where to put things
 PARROT_LIBRARY    = ../../runtime/parrot/library
Index: parrot-svn/config/gen/makefiles/root.in
===================================================================
--- parrot-svn.orig/config/gen/makefiles/root.in
+++ parrot-svn/config/gen/makefiles/root.in
@@ -106,9 +106,11 @@ LDFLAGS          = @ldflags@ @ld_debug@
 RECONFIGURE      = $(PERL) tools/dev/reconfigure.pl
 INNO_SETUP       = iscc
 JIT_BUILD_TOOL   = $(BUILD_TOOLS_DIR)/jit2c.pl
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(!win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
 
 ###############################################################################
 #
@@ -141,7 +143,7 @@ NONGEN_HEADERS   = @TEMP_nongen_headers@
 
 GEN_MAKEFILES = \
     Makefile \
-#CONDITIONED_LINE(has_perldoc):    docs/Makefile \
+#IF(has_perldoc):    docs/Makefile \
     compilers/bcg/Makefile \
     compilers/json/Makefile \
     compilers/ncigen/Makefile \
@@ -167,9 +169,9 @@ GEN_CONFIGS = \
     lib/Parrot/PMC.pm \
     runtime/parrot/include/config.fpmc \
     $(SRC_DIR)/platform.c \
-#CONDITIONED_LINE(platform_asm):    $(SRC_DIR)/platform_asm.s \
-#CONDITIONED_LINE(has_opengl):    config/gen/call_list/opengl.in \
-#CONDITIONED_LINE(has_glut):    $(SRC_DIR)/glut_callbacks.c \
+#IF(platform_asm):    $(SRC_DIR)/platform_asm.s \
+#IF(has_opengl):    config/gen/call_list/opengl.in \
+#IF(has_glut):    $(SRC_DIR)/glut_callbacks.c \
     $(SRC_DIR)/core_pmcs.c \
     CFLAGS \
     $(IMCC_DIR)/CFLAGS \
@@ -186,8 +188,8 @@ GEN_CONFIGS = \
 
 GEN_PASM_INCLUDES = \
     runtime/parrot/include/signal.pasm \
-#CONDITIONED_LINE(has_opengl):    runtime/parrot/include/opengl_defines.pasm \
-#CONDITIONED_LINE(has_opengl):    runtime/parrot/library/OpenGL_funcs.pir \
+#IF(has_opengl):    runtime/parrot/include/opengl_defines.pasm \
+#IF(has_opengl):    runtime/parrot/library/OpenGL_funcs.pir \
     @TEMP_gen_pasm_includes@
 
 CONFIGURE_GENERATED_FILES = \
@@ -255,7 +257,7 @@ GEN_LIBRARY = \
     $(LIBRARY_DIR)/MIME/Base64.pbc \
     $(LIBRARY_DIR)/NCI/call_toolkit_init.pbc \
     $(LIBRARY_DIR)/ncurses.pbc \
-#CONDITIONED_LINE(has_opengl):    $(LIBRARY_DIR)/OpenGL.pbc \
+#IF(has_opengl):    $(LIBRARY_DIR)/OpenGL.pbc \
     $(LIBRARY_DIR)/P6object.pbc \
     $(LIBRARY_DIR)/parrotlib.pbc \
     $(LIBRARY_DIR)/pcre.pbc \
@@ -373,7 +375,7 @@ INTERP_O_FILES = \
     $(OPS_DIR)/core_ops$(O) \
     $(OPS_DIR)/core_ops_switch$(O) \
     \
-#CONDITIONED_LINE(i386_has_gcc_cmpxchg):    $(SRC_DIR)/atomic/gcc_x86$(O) \
+#IF(i386_has_gcc_cmpxchg):    $(SRC_DIR)/atomic/gcc_x86$(O) \
     $(SRC_DIR)/byteorder$(O) \
     $(SRC_DIR)/charset$(O) \
     $(SRC_DIR)/core_pmcs$(O) \
@@ -445,7 +447,7 @@ INTERP_O_FILES = \
     @TEMP_atomic_o@ \
     @TEMP_jit_o@ \
     @TEMP_gc_o@ \
-#CONDITIONED_LINE(platform_asm):    $(SRC_DIR)/platform_asm$(O) \
+#IF(platform_asm):    $(SRC_DIR)/platform_asm$(O) \
 
 O_FILES = \
     $(INTERP_O_FILES) \
@@ -488,14 +490,14 @@ INSTALLABLECONFIG   = $(CUR_DIR)/install
 
 # Libraries
 LIBPARROT_STATIC    = @blib_dir@/@libparrot_static@
-#CONDITIONED_LINE(darwin):export DYLD_LIBRARY_PATH := @blib_dir@:$(DYLD_LIBRARY_PATH)
-#CONDITIONED_LINE(win32):LIBPARROT_SHARED  = @libparrot_shared@
-#INVERSE_CONDITIONED_LINE(win32):LIBPARROT_SHARED  = @blib_dir@/@libparrot_shared@
+#IF(darwin):export DYLD_LIBRARY_PATH := @blib_dir@:$(DYLD_LIBRARY_PATH)
+#IF(win32):LIBPARROT_SHARED  = @libparrot_shared@
+#UNLESS(win32):LIBPARROT_SHARED  = @blib_dir@/@libparrot_shared@
 
 # This line controls whether a static or shared library is built
 LIBPARROT           = @libparrot@
 
-#CONDITIONED_LINE(has_icu):ICU_SHARED  = @icu_shared@
+#IF(has_icu):ICU_SHARED  = @icu_shared@
 ALL_PARROT_LIBS     = @libparrot_ldflags@ $(ICU_SHARED) $(C_LIBS)
 
 # dynamic extensions
@@ -558,7 +560,7 @@ all : \
     runtime/parrot/include/config.fpmc \
     docs \
     $(LIBNCI_TEST_SO) \
-#CONDITIONED_LINE(has_glut):    $(LIBGLUTCB_SO) \
+#IF(has_glut):    $(LIBGLUTCB_SO) \
     $(GEN_LIBRARY) \
     dynpmc \
     dynoplibs \
@@ -773,7 +775,7 @@ runtime/parrot/include/parrotlib.pbc: ru
 	$(SHRPENV) $(PARROT) -o $@ runtime/parrot/library/parrotlib.pir
 
 runtime/parrot/include/config.fpmc : myconfig config_lib.pasm $(MINIPARROT)
-#CONDITIONED_LINE(cygchkdll):	$(SHRPENV) @cygchkdll@
+#IF(cygchkdll):	$(SHRPENV) @cygchkdll@
 	@echo Invoking Parrot to generate runtime/parrot/include/config.fpmc --cross your fingers
 	$(SHRPENV) $(MINIPARROT) config_lib.pasm > $@
 
@@ -783,7 +785,7 @@ $(PARROT) : $(SRC_DIR)/main$(O) $(GEN_HE
 	$(LINK) @ld_out@$@ \
 	$(SRC_DIR)/main$(O) $(SRC_DIR)/parrot_config$(O) \
 	@rpath_blib@ $(ALL_PARROT_LIBS) $(LINKFLAGS) $(LINK_DYNAMIC)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
+#IF(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
 
 pbc_to_exe.pir : $(PARROT) tools/dev/pbc_to_exe_gen.pl
 	$(PERL) tools/dev/pbc_to_exe_gen.pl \
@@ -798,7 +800,7 @@ $(PARROT_CONFIG) : tools/util/parrot-con
 	$(SHRPENV) $(PARROT) pbc_to_exe.pir parrot_config.pbc
 
 # HLL Executable targets
-#CONDITIONED_LINE(win32):perl6 : $(PERL6)
+#IF(win32|cygwin):perl6 : $(PERL6)
 
 $(PERL6) : compilers $(PBC_TO_EXE)
 	$(MAKE) languages/perl6 perl6$(EXE)
@@ -812,7 +814,7 @@ $(MINIPARROT) : $(SRC_DIR)/main$(O) $(GE
     lib/Parrot/OpLib/core.pm $(SRC_DIR)/null_config$(O)
 	$(LINK) @ld_out@$@ $(SRC_DIR)/main$(O) $(SRC_DIR)/null_config$(O) \
 	@rpath_blib@ $(ALL_PARROT_LIBS) $(LINKFLAGS)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
+#IF(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
 
 $(INSTALLABLEPARROT) : $(SRC_DIR)/main$(O) $(GEN_HEADERS) $(LIBPARROT) \
     lib/Parrot/OpLib/core.pm $(SRC_DIR)/install_config$(O) \
@@ -820,7 +822,7 @@ $(INSTALLABLEPARROT) : $(SRC_DIR)/main$(
 	$(LINK) @ld_out@$@ \
     $(SRC_DIR)/main$(O) $(SRC_DIR)/install_config$(O) \
     $(ALL_PARROT_LIBS) $(LINKFLAGS)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
+#IF(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
 
 $(INC_DIR)/parrot.h : $(INC_DIR)/pbcversion.h $(INC_DIR)/vtable.h
 
@@ -878,22 +880,22 @@ check_source : $(GENERAL_H_FILES)
 # so always delete the lib -leo
 
 PARROT_LIBS: \
-#CONDITIONED_LINE(has_static_linking):  $(LIBPARROT_STATIC) \
-#CONDITIONED_LINE(has_dynamic_linking): $(LIBPARROT_SHARED)
+#IF(has_static_linking):  $(LIBPARROT_STATIC) \
+#IF(has_dynamic_linking): $(LIBPARROT_SHARED)
 
 $(LIBPARROT_STATIC) : $(O_FILES)
 	$(MKPATH) @blib_dir@
 	$(AR_CR) @ar_out@$@ @ar_extra@ $(O_FILES)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;2
+#IF(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;2
 	$(RANLIB) $@
 
 $(LIBPARROT_SHARED) : $(O_FILES)
 	$(MKPATH) @blib_dir@
 	$(LD) $(LD_SHARE_FLAGS) $(LDFLAGS) @ld_out@$@ @libparrot_soname@ \
-#CONDITIONED_LINE(cygchkdll):		-Wl,--out-implib=blib/lib/libparrot.dll.a \
+#IF(cygwin):		-Wl,--out-implib=blib/lib/libparrot.dll.a \
 		$(O_FILES) $(C_LIBS) $(ICU_SHARED)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;2
-#CONDITIONED_LINE(libparrot_shared_alias):	( cd @blib_dir@ ; ln -sf @libparrot_shared@ @libparrot_shared_alias@ )
+#IF(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;2
+#IF(libparrot_shared_alias):	( cd @blib_dir@ ; ln -sf @libparrot_shared@ @libparrot_shared_alias@ )
 
 
 $(INSTALLABLECONFIG) : $(SRC_DIR)/install_config$(O) $(PARROT_CONFIG) $(PBC_TO_EXE)
@@ -911,14 +913,14 @@ $(PDB) : $(SRC_DIR)/parrot_debugger$(O) 
     $(SRC_DIR)/parrot_debugger$(O) \
     $(SRC_DIR)/parrot_config$(O) \
     @rpath_blib@ $(ALL_PARROT_LIBS) $(LINKFLAGS)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
+#IF(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
 
 $(INSTALLABLEPDB) : $(SRC_DIR)/parrot_debugger$(O) $(LIBPARROT)
 	$(LINK) @ld_out@$@ \
     $(SRC_DIR)/parrot_debugger$(O) \
     $(SRC_DIR)/parrot_config$(O) \
     $(ALL_PARROT_LIBS) $(LINKFLAGS)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
+#IF(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
 
 #
 # Parrot Disassembler
@@ -930,13 +932,13 @@ $(DIS) : $(SRC_DIR)/pbc_disassemble$(O) 
 	$(LINK) @ld_out@$@ \
     $(SRC_DIR)/pbc_disassemble$(O) \
     @rpath_blib@ $(ALL_PARROT_LIBS) $(LINKFLAGS)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
+#IF(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
 
 $(INSTALLABLEDIS) : $(SRC_DIR)/pbc_disassemble$(O) $(LIBPARROT)
 	$(LINK) @ld_out@$@ \
     $(SRC_DIR)/pbc_disassemble$(O) \
     $(ALL_PARROT_LIBS) $(LINKFLAGS)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
+#IF(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
 
 #
 # Parrot Dump
@@ -946,7 +948,7 @@ $(PDUMP) : $(SRC_DIR)/pdump$(O) $(SRC_DI
 	$(LINK) @ld_out@$@ \
     $(SRC_DIR)/pdump$(O) \
     $(SRC_DIR)/packdump$(O) @rpath_blib@ $(ALL_PARROT_LIBS) $(LINKFLAGS)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
+#IF(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
 
 $(SRC_DIR)/pdump$(O) : $(GEN_HEADERS)
 
@@ -954,7 +956,7 @@ $(INSTALLABLEPDUMP) : $(SRC_DIR)/pdump$(
 	$(LINK) @ld_out@$@ \
     $(SRC_DIR)/pdump$(O) \
     $(SRC_DIR)/packdump$(O) $(ALL_PARROT_LIBS) $(LINKFLAGS)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
+#IF(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
 
 
 # pbc_info
@@ -962,7 +964,7 @@ $(PINFO) : $(SRC_DIR)/pbc_info$(O) $(LIB
 	$(LINK) @ld_out@$@ \
     $(SRC_DIR)/pbc_info$(O) \
     @rpath_blib@ $(ALL_PARROT_LIBS) $(LINKFLAGS)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
+#IF(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
 
 $(SRC_DIR)/pbc_info$(O) : $(GEN_HEADERS)
 
@@ -970,7 +972,7 @@ $(INSTALLABLEPINFO) : $(SRC_DIR)/pbc_inf
 	$(LINK) @ld_out@$@ \
     $(SRC_DIR)/pbc_info$(O) \
     $(ALL_PARROT_LIBS) $(LINKFLAGS)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
+#IF(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
 
 #
 # Parrot Bytecode File Merger
@@ -981,14 +983,14 @@ $(PBCMERGE) : $(SRC_DIR)/pbc_merge$(O) $
     $(SRC_DIR)/pbc_merge$(O) \
     $(SRC_DIR)/parrot_config$(O) \
     @rpath_blib@ $(ALL_PARROT_LIBS) $(LINK_DYNAMIC) $(LINKFLAGS)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
+#IF(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
 
 $(INSTALLABLEPBCMERGE) : $(SRC_DIR)/pbc_merge$(O) $(LIBPARROT)
 	$(LINK) @ld_out@$@ \
     $(SRC_DIR)/pbc_merge$(O) \
     $(SRC_DIR)/install_config$(O) \
     $(ALL_PARROT_LIBS) $(LINKFLAGS)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
+#IF(win32):	if exist $@.manifest mt.exe -nologo -manifest $@.manifest -outputresource:$@;1
 
 
 ###############################################################################
@@ -1003,20 +1005,6 @@ $(INC_DIR)/oplib/ops.h lib/Parrot/OpLib/
     lib/Parrot/OpsFile.pm lib/Parrot/Op.pm $(OPS_DIR)/ops.num $(OPS_DIR)/ops.skip
 	$(PERL) $(BUILD_TOOLS_DIR)/ops2pm.pl $(OPS_FILES)
 
-# FIXME: This creates a cycle sometimes
-#lib/Parrot/Config/Generated.pm \
-#    $(SRC_DIR)/platform.c \
-##CONDITIONED_LINE(platform_asm):    $(SRC_DIR)/platform_asm.s \
-##CONDITIONED_LINE(has_opengl):    config/gen/call_list/opengl.in \
-##CONDITIONED_LINE(has_glut):    $(SRC_DIR)/glut_callbacks.c \
-#    config_lib.pasm \
-#    $(BUILD_TOOLS_DIR)/dynpmc.pl \
-#    $(BUILD_TOOLS_DIR)/dynoplibs.pl \
-# : Configure.pl lib/Parrot/Configure.pm \
-#   lib/Parrot/Configure/Step/List.pm lib/Parrot/Configure/Step/Methods.pm
-#	@echo "  Makefile out-of-date: reconfigure"
-#	$(PERL) Configure.pl $(CONFIG_ARGS)
-
 ###############################################################################
 #
 # Examples (Assembly):
@@ -1109,8 +1097,8 @@ $(SRC_DIR)/hll$(O) : $(GENERAL_H_FILES) 
 
 $(SRC_DIR)/platform$(O) : $(GENERAL_H_FILES)
 
-#CONDITIONED_LINE(platform_asm):$(SRC_DIR)/platform_asm$(O) : $(GENERAL_H_FILES)
-#CONDITIONED_LINE(platform_asm):
+#IF(platform_asm):$(SRC_DIR)/platform_asm$(O) : $(GENERAL_H_FILES)
+#IF(platform_asm):
 $(SRC_DIR)/core_pmcs$(O) : $(GENERAL_H_FILES)
 
 $(SRC_DIR)/trace$(O) : $(GENERAL_H_FILES)
@@ -1299,11 +1287,11 @@ $(IMCC_O_FILES) : $(IMCC_H_FILES) $(ALL_
 #
 ###############################################################################
 
-#CONDITIONED_LINE(has_perldoc):docs : docs.dummy
-#INVERSE_CONDITIONED_LINE(has_perldoc):docs : docs.stub
+#IF(has_perldoc):docs : docs.dummy
+#UNLESS(has_perldoc):docs : docs.stub
 
-#CONDITIONED_LINE(has_perldoc):html : html.dummy
-#INVERSE_CONDITIONED_LINE(has_perldoc):html : html.stub
+#IF(has_perldoc):html : html.dummy
+#UNLESS(has_perldoc):html : html.stub
 
 html.stub:
 	@echo "Perldoc is required, but not detected."
@@ -1499,10 +1487,10 @@ check : test
 # when the needed runcores are available
 fulltest :
 	-@make@ testb
-#CONDITIONED_LINE(cg_flag):	-@make@ testC
+#IF(cg_flag):	-@make@ testC
 	-@make@ testf
-#CONDITIONED_LINE(cg_flag):	-@make@ testg
-#CONDITIONED_LINE(cg_flag):	-@make@ testj
+#IF(cg_flag):	-@make@ testg
+#IF(cg_flag):	-@make@ testj
 	-@make@ testr
 	-@make@ testS
 	-@make@ src_tests
@@ -1614,15 +1602,15 @@ clean : \
     prog-clean \
     dynext-clean \
     languages-clean \
-#CONDITIONED_LINE(has_perldoc):    docs-clean \
-#CONDITIONED_LINE(has_perldoc):    html-clean \
+#IF(has_perldoc):    docs-clean \
+#IF(has_perldoc):    html-clean \
     dynpmc-clean \
     dynoplibs-clean \
     examples-clean \
     imcc-clean \
     compilers-clean \
     smoke-clean \
-#INVERSE_CONDITIONED_LINE(win32):    cover-clean \
+#UNLESS(win32):    cover-clean \
     editor-clean
 	@TEMP_cg_r@
 	$(RM_F) chartypes "*.s" "*~"
@@ -2083,10 +2071,10 @@ COVER_DIRS = \
 cover: \
     cover.dummy \
     cover-testb \
-#CONDITIONED_LINE(cg_flag):    cover-testC \
+#IF(cg_flag):    cover-testC \
     cover-testf \
-#CONDITIONED_LINE(cg_flag):    cover-testg \
-#CONDITIONED_LINE(jitcapable):    cover-testj \
+#IF(cg_flag):    cover-testg \
+#IF(jitcapable):    cover-testj \
     cover-testr \
     cover-testS \
     cover-src \
Index: parrot-svn/config/gen/makefiles/tge.in
===================================================================
--- parrot-svn.orig/config/gen/makefiles/tge.in
+++ parrot-svn/config/gen/makefiles/tge.in
@@ -7,8 +7,8 @@ PERL     = @perl@
 RM_F     = @rm_f@
 PARROT   = ../../parrot@exe@
 RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH=@build_dir@/blib/lib
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(!win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
 
 # Where to put things
 PARROT_LIBRARY    = ../../runtime/parrot/library
Index: parrot-svn/languages/APL/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/APL/config/makefiles/root.in
+++ parrot-svn/languages/APL/config/makefiles/root.in
@@ -20,16 +20,16 @@ RM_F          = @rm_f@
 CP            = @cp@
 MKPATH        = @mkpath@
 POD2MAN       = pod2man
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
 PARROT        = $(SHRPENV) ../../parrot@exe@
 PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 ## places to look for things
 PARROT_DYNEXT = $(BUILD_DIR)/runtime/parrot/dynext
@@ -55,7 +55,7 @@ PMC_SOURCES = $(PMC_DIR)/aplvector.pmc
 DOCS = MAINTAINER README STATUS
 
 # the default target
-APL.pbc:  $(SOURCES) $(APL_GROUP)
+APL.pbc: $(SOURCES) $(APL_GROUP)
 	$(PARROT) $(PARROT_ARGS) -o APL.pbc APL.pir
 
 $(HLLNAME)@exe@: $(HLLNAME).pbc
@@ -74,7 +74,7 @@ src/gen_actions.pir: $(NQP) $(PCT) src/p
 src/gen_builtins.pir: tools/gen_operator_defs.pl
 	$(PERL) tools/gen_operator_defs.pl >src/gen_builtins.pir
 
-$(APL_GROUP):  $(PMC_SOURCES)
+$(APL_GROUP): $(PMC_SOURCES)
 	cd $(PMC_DIR) && $(BUILD_DYNPMC) generate $(PMCS)
 	cd $(PMC_DIR) && $(BUILD_DYNPMC) compile $(PMCS)
 	cd $(PMC_DIR) && $(BUILD_DYNPMC) linklibs $(PMCS)
Index: parrot-svn/languages/PIR/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/PIR/config/makefiles/root.in
+++ parrot-svn/languages/PIR/config/makefiles/root.in
@@ -15,16 +15,16 @@ RM_RF         = @rm_rf@
 CP            = @cp@
 MKPATH        = @mkpath@
 POD2MAN       = pod2man
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+PARROT        = $(SHRPENV) ../../parrot@exe@
+PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
-PARROT        = $(SHRPENV) ../../parrot@exe@
-PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 ## places to look for things
 PARROT_DYNEXT = $(BUILD_DIR)/runtime/parrot/dynext
@@ -57,7 +57,7 @@ PASMGRAMMAR = src/pasm/gen_pasm.pbc \
   src/pasm/gen_pasm_core.pbc
 
 # the default target
-pirc.pbc:  $(SOURCES) $(PASMGRAMMAR)
+pirc.pbc: $(SOURCES) $(PASMGRAMMAR)
 	$(PARROT) $(PARROT_ARGS) -o pirc.pbc pirc.pir
 
 src/gen_grammar.pir: $(PERL6GRAMMAR) src/pir.pg
Index: parrot-svn/languages/WMLScript/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/WMLScript/config/makefiles/root.in
+++ parrot-svn/languages/WMLScript/config/makefiles/root.in
@@ -4,8 +4,6 @@
 HLLNAME = WMLScript
 RM_F    = @rm_f@
 PERL    = @perl@
-CP      = @cp@
-MKPATH  = @mkpath@
 
 PMCBUILD = $(PERL) @build_dir@/tools/build/dynpmc.pl
 OPSBUILD = $(PERL) @build_dir@/tools/build/dynoplibs.pl
@@ -20,16 +18,14 @@ LIB_DIR       = @lib_dir@
 DOC_DIR       = @doc_dir@
 MANDIR	      = @mandir@
 PARROT_DYNEXT = @build_dir@/runtime/parrot/dynext
-PARROT_LIBPATH = @build_dir@/runtime/parrot/library
-PARROT_RUNTIME = @build_dir@/runtime/parrot/library/WMLScript
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
 PARROT        = $(SHRPENV) ../../parrot@exe@
 PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
 RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 SRM=Stack
 
@@ -54,10 +50,10 @@ OPS_FILES = $(OPSDIR)/wmls.ops
 OPSLIB    = wmls
 
 PBCS = \
- $(PARROT_RUNTIME)/wmlslang.pbc \
- $(PARROT_RUNTIME)/wmlsfloat.pbc \
- $(PARROT_RUNTIME)/wmlsstring.pbc \
- $(PARROT_RUNTIME)/wmlsconsole.pbc
+ $(LIBPATH)/wmlslang.pbc \
+ $(LIBPATH)/wmlsfloat.pbc \
+ $(LIBPATH)/wmlsstring.pbc \
+ $(LIBPATH)/wmlsconsole.pbc
 
 GEN_PIR = \
  src/opcode.pir \
@@ -67,10 +63,9 @@ DOCS = \
  MAINTAINER doc/running.pod doc/status.pod
 
 all: \
- Makefile \
  pmc/wmls_group$(LOAD_EXT) \
  ops/wmls_ops$(LOAD_EXT) \
- $(PARROT_LIBPATH)/WMLScript.pbc \
+ src/WMLScript.pbc \
  $(PBCS)
 
 pmc/wmls_group$(LOAD_EXT) : $(PMC_FILES)
@@ -85,9 +80,9 @@ ops/wmls_ops$(LOAD_EXT) : $(OPS_FILES)
 	@cd $(OPSDIR) && $(OPSBUILD) linklibs $(OPSLIB)
 	@cd $(OPSDIR) && $(OPSBUILD) copy "--destination=$(PARROT_DYNEXT)" $(OPSLIB)
 
-$(PARROT_LIBPATH)/WMLScript.pbc: src/WMLScript.pir \
+src/WMLScript.pbc: src/WMLScript.pir \
  src/script.pir src/wmlsstdlibs.pir $(GEN_PIR)
-	$(PARROT) -o $@ src/WMLScript.pir
+	$(PARROT) -o src/WMLScript.pbc src/WMLScript.pir
 
 src/opcode.pir: src/translation.rules build/translator.pl \
  build/SRM/Stack.pm build/SRM/Register.pm
@@ -97,18 +92,17 @@ src/opcode.pir: src/translation.rules bu
 src/stdlibs.pir: src/wmlslibs.cfg build/stdlibs.pl
 	$(PERL) build/stdlibs.pl --output src/stdlibs.pir src/wmlslibs.cfg
 
-$(PARROT_RUNTIME)/wmlslang.pbc: $(LIBPATH)/wmlslang.pir
-	-$(MKPATH) $(PARROT_RUNTIME)
-	$(PARROT) --output=$@ $(LIBPATH)/wmlslang.pir
+$(LIBPATH)/wmlslang.pbc: $(LIBPATH)/wmlslang.pir
+	$(PARROT) --output=$(LIBPATH)/wmlslang.pbc $(LIBPATH)/wmlslang.pir
 
-$(PARROT_RUNTIME)/wmlsfloat.pbc: $(LIBPATH)/wmlsfloat.pir
-	$(PARROT) --output=$@ $(LIBPATH)/wmlsfloat.pir
+$(LIBPATH)/wmlsfloat.pbc: $(LIBPATH)/wmlsfloat.pir
+	$(PARROT) --output=$(LIBPATH)/wmlsfloat.pbc $(LIBPATH)/wmlsfloat.pir
 
-$(PARROT_RUNTIME)/wmlsstring.pbc: $(LIBPATH)/wmlsstring.pir
-	$(PARROT) --output=$@ $(LIBPATH)/wmlsstring.pir
+$(LIBPATH)/wmlsstring.pbc: $(LIBPATH)/wmlsstring.pir
+	$(PARROT) --output=$(LIBPATH)/wmlsstring.pbc $(LIBPATH)/wmlsstring.pir
 
-$(PARROT_RUNTIME)/wmlsconsole.pbc: $(LIBPATH)/wmlsconsole.pir
-	$(PARROT) --output=$@ $(LIBPATH)/wmlsconsole.pir
+$(LIBPATH)/wmlsconsole.pbc: $(LIBPATH)/wmlsconsole.pir
+	$(PARROT) --output=$(LIBPATH)/wmlsconsole.pbc $(LIBPATH)/wmlsconsole.pir
 
 wmls2pir@exe@: wmls2pir.pbc
 	$(PBC_TO_EXE) wmls2pir.pbc
@@ -122,16 +116,16 @@ wmlsd@exe@: wmlsd.pbc
 wmlsi@exe@: wmlsi.pbc
 	$(PBC_TO_EXE) wmlsi.pbc
 
-installable_wmls2pir@exe@: $(RUNTIMES) wmls2pir.pbc
+installable_wmls2pir@exe@: wmls2pir.pbc
 	$(PBC_TO_EXE) wmls2pir.pbc --install
 
-installable_wmls2pbc@exe@: $(RUNTIMES) wmls2pbc.pbc
+installable_wmls2pbc@exe@: wmls2pbc.pbc
 	$(PBC_TO_EXE) wmls2pbc.pbc --install
 
-installable_wmlsd@exe@: $(RUNTIMES) wmlsd.pbc
+installable_wmlsd@exe@: wmlsd.pbc
 	$(PBC_TO_EXE) wmlsd.pbc --install
 
-installable_wmlsi@exe@: $(RUNTIMES) wmlsi.pbc
+installable_wmlsi@exe@: wmlsi.pbc
 	$(PBC_TO_EXE) wmlsi.pbc --install
 
 install : installable
@@ -145,11 +139,7 @@ install : installable
 	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(HLLNAME)
 	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(HLLNAME)
 
-# regenerate the Makefile
-Makefile: config/makefiles/root.in
-	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=$(HLLNAME)
-
-installable: $(RUNTIMES) installable_wmls2pir@exe@ installable_wmls2pbc@exe@ \
+installable: installable_wmls2pir@exe@ installable_wmls2pbc@exe@ \
              installable_wmlsd@exe@ installable_wmlsi@exe@
 
 help:
Index: parrot-svn/languages/Zcode/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/Zcode/config/makefiles/root.in
+++ parrot-svn/languages/Zcode/config/makefiles/root.in
@@ -4,16 +4,17 @@
 HLLNAME	      = Zcode
 
 # Setup of some commands
-BUILD_DIR  = @build_dir@
-PERL       = @perl@
-RM_F       = @rm_f@
-RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+BUILD_DIR     = @build_dir@
+PERL          = @perl@
+RM_F          = @rm_f@
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
 PARROT        = $(SHRPENV) ../../parrot@exe@
+PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
+RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 EXAMPLES = examples/small.z3 examples/hello.z3
 
Index: parrot-svn/languages/abc/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/abc/config/makefiles/root.in
+++ parrot-svn/languages/abc/config/makefiles/root.in
@@ -20,16 +20,16 @@ RM_RF         = @rm_rf@
 CP            = @cp@
 MKPATH        = @mkpath@
 POD2MAN       = pod2man
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
 PARROT        = $(SHRPENV) ../../parrot@exe@
 PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 ## places to look for things
 PARROT_DYNEXT = $(BUILD_DIR)/runtime/parrot/dynext
@@ -51,7 +51,7 @@ BUILTINS_PIR = \
 DOCS = MAINTAINER README TODO
 
 # the default target
-abc.pbc:  $(SOURCES)
+abc.pbc: $(SOURCES)
 	$(PARROT) $(PARROT_ARGS) -o abc.pbc abc.pir
 
 $(HLLNAME)@exe@: $(HLLNAME).pbc
Index: parrot-svn/languages/befunge/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/befunge/config/makefiles/root.in
+++ parrot-svn/languages/befunge/config/makefiles/root.in
@@ -1,7 +1,7 @@
 # $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 # Makefile for languages/befunge
-HLLNAME       = befunge
+HLLNAME = befunge
 
 ## configuration settings
 BUILD_DIR     = @build_dir@
@@ -16,18 +16,18 @@ RM_F          = @rm_f@
 CP            = @cp@
 MKPATH        = @mkpath@
 POD2MAN	      = pod2man
-RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
 PARROT        = $(SHRPENV) ../../parrot@exe@
 PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
+RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 DOCS = MAINTAINER README Changes
 
-default: all
+build: befunge.pbc
 
 help :
 	@echo ""
@@ -50,16 +50,13 @@ help :
 	@echo "  help:              Print this help message"
 
 
-all: build
-
-build: befunge.pbc
+all: befunge.pbc befunge@exe@
 
 befunge.pbc: befunge.pasm debug.pasm flow.pasm io.pasm load.pasm maths.pasm stack.pasm
 	$(PARROT) -o befunge.pbc befunge.pasm
 
-# regenerate the Makefile
-Makefile: config/makefiles/root.in
-	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=$(HLLNAME)
+$(HLLNAME)@exe@: $(HLLNAME).pbc
+	$(PBC_TO_EXE) $(HLLNAME).pbc
 
 installable_$(HLLNAME)@exe@: $(HLLNAME).pbc
 	$(PBC_TO_EXE) $(HLLNAME).pbc --install
@@ -80,6 +77,10 @@ install : installable
 	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(HLLNAME)
 	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(HLLNAME)
 
+# regenerate the Makefile
+Makefile: config/makefiles/root.in
+	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=$(HLLNAME)
+
 clean:
 	$(RM_F) core \
     "*.pbc" \
Index: parrot-svn/languages/bf/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/bf/config/makefiles/root.in
+++ parrot-svn/languages/bf/config/makefiles/root.in
@@ -1,5 +1,5 @@
 # $Id: root.in 30600 2008-08-27 19:51:44Z moritz $
-HLLNAME       = bf
+HLLNAME = bf
 BIN_DIR       = @bin_dir@
 LIB_DIR       = @lib_dir@
 DOC_DIR       = @doc_dir@
@@ -10,13 +10,13 @@ PERL          = @perl@
 CP            = @cp@
 MKPATH        = @mkpath@
 POD2MAN       = pod2man
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
 PARROT        = $(SHRPENV) ../../parrot@exe@
 PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 DOCS = MAINTAINER README
 
Index: parrot-svn/languages/c99/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/c99/config/makefiles/root.in
+++ parrot-svn/languages/c99/config/makefiles/root.in
@@ -20,17 +20,17 @@ RM_RF         = @rm_rf@
 CP            = @cp@
 MKPATH        = @mkpath@
 POD2MAN       = pod2man
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+PARROT        = $(SHRPENV) ../../parrot@exe@
+PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
 POD2MAN       = pod2man
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
-PARROT        = $(SHRPENV) $(BUILD_DIR)/parrot@exe@
-PBC_TO_EXE    = $(SHRPENV) $(BUILD_DIR)/pbc_to_exe@exe@
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 ## places to look for things
 PARROT_DYNEXT = $(BUILD_DIR)/runtime/parrot/dynext
@@ -55,7 +55,7 @@ BUILTINS_PIR = \
   src/builtins/say.pir \
 
 # the default target
-c99.pbc:  $(SOURCES)
+c99.pbc: $(SOURCES)
 	$(PARROT) $(PARROT_ARGS) -o c99.pbc c99.pir
 	cd src/cpp; $(MAKE)
 
Index: parrot-svn/languages/cardinal/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/cardinal/config/makefiles/root.in
+++ parrot-svn/languages/cardinal/config/makefiles/root.in
@@ -1,4 +1,4 @@
-## $Id: root.in 30649 2008-08-30 04:38:30Z tene $
+## $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 ## arguments we want to run parrot with
 PARROT_ARGS =
@@ -20,16 +20,16 @@ RM_RF         = @rm_rf@
 CP            = @cp@
 MKPATH        = @mkpath@
 POD2MAN       = pod2man
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
 PARROT        = $(SHRPENV) ../../parrot@exe@
 PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 ## places to look for things
 PARROT_DYNEXT = $(BUILD_DIR)/runtime/parrot/dynext
@@ -63,7 +63,7 @@ BUILTINS_PIR = \
 DOCS          = README
 
 # the default target
-cardinal.pbc:  $(SOURCES)
+cardinal.pbc: $(SOURCES)
 	$(PARROT) $(PARROT_ARGS) -o cardinal.pbc cardinal.pir
 
 cardinal@exe@: cardinal.pbc
@@ -118,12 +118,6 @@ help:
 test: all
 	$(PERL) t/harness
 
-arraytest: all
-	$(PERL) t/harness --tests-from-dir=array
-
-hashtest: all
-	$(PERL) t/harness --tests-from-dir=hash
-
 # this target has nothing to do
 testclean:
 
Index: parrot-svn/languages/chitchat/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/chitchat/config/makefiles/root.in
+++ parrot-svn/languages/chitchat/config/makefiles/root.in
@@ -4,7 +4,7 @@
 PARROT_ARGS =
 
 ## configuration settings
-HLLNAME          = chitchat
+HLLNAME       = chitchat
 BUILD_DIR     = @build_dir@
 LOAD_EXT      = @load_ext@
 O             = @o@
@@ -20,16 +20,16 @@ RM_RF         = @rm_rf@
 CP            = @cp@
 MKPATH        = @mkpath@
 POD2MAN       = pod2man
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+PARROT        = $(SHRPENV) ../../parrot@exe@
+PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
-PARROT        = $(SHRPENV) ../../parrot@exe@
-PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 ## places to look for things
 PARROT_DYNEXT = $(BUILD_DIR)/runtime/parrot/dynext
@@ -51,7 +51,7 @@ BUILTINS_PIR = \
   src/builtins/say.pir \
 
 # the default target
-chitchat.pbc:  $(SOURCES)
+chitchat.pbc: $(SOURCES)
 	$(PARROT) $(PARROT_ARGS) -o chitchat.pbc chitchat.pir
 
 src/gen_grammar.pir: $(PERL6GRAMMAR) src/parser/grammar.pg
Index: parrot-svn/languages/cola/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/cola/config/makefiles/root.in
+++ parrot-svn/languages/cola/config/makefiles/root.in
@@ -16,17 +16,15 @@ MANDIR	      = @mandir@
 PERL          = @perl@
 RM_F          = @rm_f@
 CHMOD         = @chmod@
-CP            = @cp@
-MKPATH        = @mkpath@
 CC            = @cc@
 DEBUG         = @cc_debug@
 YACC          = @yacc@
 LEX           = @lex@
 RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
 POD2MAN	      = pod2man
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 # Libraries:  Ordinarily, no special libraries are needed
 # for cola, but one of the following settings might be helpful
Index: parrot-svn/languages/eclectus/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/eclectus/config/makefiles/root.in
+++ parrot-svn/languages/eclectus/config/makefiles/root.in
@@ -4,7 +4,7 @@
 # Makefile for languages/eclectus
 
 # configuration settings
-HLLNAME          = eclectus
+HLLNAME       = eclectus
 BUILD_DIR     = @build_dir@
 LOAD_EXT      = @load_ext@
 O             = @o@
@@ -14,6 +14,10 @@ DOC_DIR       = @doc_dir@
 MANDIR	      = @mandir@
 
 # Set up commands
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+PARROT        = $(SHRPENV) ../../parrot@exe@
+PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
 PERL          = @perl@
 RM_F          = @rm_f@
 RENAME        = @mv@
@@ -22,13 +26,9 @@ MKPATH        = @mkpath@
 POD2MAN       = pod2man
 RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
 BUILD_DYNPMC  = $(PERL) @build_dir@/tools/build/dynpmc.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
-PARROT        = $(SHRPENV) ../../parrot@exe@
-PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 # Set up directories
 PARROT_DYNEXT   = @build_dir@/runtime/parrot/dynext
@@ -86,7 +86,7 @@ Makefile: config/makefiles/root.in
 # Compilation:
 build: $(ECLECTUS_GROUP) driver_nqp.pbc
 
-$(ECLECTUS_GROUP):  $(PMC_SOURCES)
+$(ECLECTUS_GROUP): $(PMC_SOURCES)
 	cd $(PMC_DIR) && $(BUILD_DYNPMC) generate $(PMCS)
 	cd $(PMC_DIR) && $(BUILD_DYNPMC) compile $(PMCS)
 	cd $(PMC_DIR) && $(BUILD_DYNPMC) linklibs $(PMCS)
Index: parrot-svn/languages/ecmascript/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/ecmascript/config/makefiles/root.in
+++ parrot-svn/languages/ecmascript/config/makefiles/root.in
@@ -21,16 +21,16 @@ RM_RF         = @rm_rf@
 CP            = @cp@
 MKPATH        = @mkpath@
 POD2MAN       = pod2man
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+PARROT        = $(SHRPENV) ../../parrot@exe@
+PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
-PARROT        = $(SHRPENV) ../../parrot@exe@
-PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 ## places to look for things
 PARROT_DYNEXT = $(BUILD_DIR)/runtime/parrot/dynext
@@ -96,7 +96,7 @@ js@exe@: js.pbc
 	$(PBC_TO_EXE) js.pbc
 
 # the default target
-js.pbc:  $(SOURCES)
+js.pbc: $(SOURCES)
 	$(PARROT) $(PARROT_ARGS) -o js.pbc js.pir
 
 src/gen_grammar.pir: $(PERL6GRAMMAR) src/parser/grammar.pg 
Index: parrot-svn/languages/forth/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/forth/config/makefiles/root.in
+++ parrot-svn/languages/forth/config/makefiles/root.in
@@ -6,15 +6,15 @@ RM_RF         = @rm_rf@
 CP            = @cp@
 MKPATH        = @mkpath@
 POD2MAN	      = pod2man
-RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
 PARROT        = $(SHRPENV) ../../parrot@exe@
 PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
 PBC_MERGE     = $(SHRPENV) ../../pbc_merge@exe@
+RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 BUILD_DIR     = @build_dir@
 BIN_DIR       = @bin_dir@
Index: parrot-svn/languages/hq9plus/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/hq9plus/config/makefiles/root.in
+++ parrot-svn/languages/hq9plus/config/makefiles/root.in
@@ -4,7 +4,7 @@
 PARROT_ARGS =
 
 ## configuration settings
-HLLNAME          = hq9plus
+HLLNAME       = hq9plus
 BUILD_DIR     = @build_dir@
 BIN_DIR       = @bin_dir@
 LIB_DIR       = @lib_dir@
@@ -17,16 +17,15 @@ RM_RF         = @rm_rf@
 CP            = @cp@
 MKPATH        = @mkpath@
 POD2MAN       = pod2man
-CAT           = $(PERL) -MExtUtils::Command -e cat
-RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
 PARROT        = $(SHRPENV) ../../parrot@exe@
 PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
-
+CAT           = $(PERL) -MExtUtils::Command -e cat
+RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 ## places to look for things
 PGE_LIBRARY   = $(BUILD_DIR)/runtime/parrot/library/PGE
@@ -50,7 +49,7 @@ BUILTINS_PIR = \
 DOCS = MAINTAINER README
 
 # the default target
-hq9plus.pbc:  $(SOURCES)
+hq9plus.pbc: $(SOURCES)
 	$(PARROT) $(PARROT_ARGS) -o hq9plus.pbc hq9plus.pir
 
 src/gen_grammar.pir: $(PERL6GRAMMAR) src/parser/grammar.pg
Index: parrot-svn/languages/jako/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/jako/config/makefiles/root.in
+++ parrot-svn/languages/jako/config/makefiles/root.in
@@ -15,12 +15,14 @@ MANDIR	      = @mandir@
 
 PERL          = @perl@
 RM_F          = @rm_f@
+CP            = @cp@
+MKPATH        = @mkpath@
+POD2MAN       = pod2man
 JAKOC         = $(PERL) -I lib jakoc
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
 INTERP        = $(SHRPENV) ../../@test_prog@
 PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
-BUILD_DIR     = @build_dir@
 RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
 #CONDITIONED_LINE(darwin):
 #CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
Index: parrot-svn/languages/json/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/json/config/makefiles/root.in
+++ parrot-svn/languages/json/config/makefiles/root.in
@@ -20,16 +20,17 @@ RM_RF         = @rm_rf@
 CP            = @cp@
 MKPATH        = @mkpath@
 POD2MAN       = pod2man
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+PARROT        = $(SHRPENV) ../../parrot@exe@
+PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
-PARROT        = $(SHRPENV) ../../parrot@exe@
-PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
+POD2MAN	      = pod2man
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 ## places to look for things
 PARROT_DYNEXT = $(BUILD_DIR)/runtime/parrot/dynext
@@ -53,7 +54,7 @@ BUILTINS_PIR = \
   src/builtins/say.pir \
 
 # the default target
-json.pbc:  $(SOURCES)
+json.pbc: $(SOURCES)
 	$(PARROT) $(PARROT_ARGS) -o json.pbc json.pir
 
 src/gen_grammar.pir: $(PERL6GRAMMAR) src/parser/grammar.pg src/parser/grammar-oper.pg
Index: parrot-svn/languages/lazy-k/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/lazy-k/config/makefiles/root.in
+++ parrot-svn/languages/lazy-k/config/makefiles/root.in
@@ -8,15 +8,15 @@ PERL          = @perl@
 RM_F          = @rm_f@
 CP            = @cp@
 MKPATH        = @mkpath@
-RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
-POD2MAN	      = pod2man
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+POD2MAN       = pod2man
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
 PARROT        = $(SHRPENV) ../../parrot@exe@
 PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
+RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 # set up location
 BUILD_DIR     = @build_dir@
@@ -27,8 +27,8 @@ MANDIR	      = @mandir@
 
 all: lazy-k.pbc
 
-lazy-k.pbc :  $(SOURCES)
-	$(PARROT) $(PARROT_ARGS) -o lazy-k.pbc lazy-k.pir
+lazy-k.pbc : $(SOURCES)
+	$(PARROT) $(PARROT_ARGS) -o lazy-k.pbc lazy.pir
 
 help :
 	@echo ""
@@ -66,7 +66,7 @@ test-installable : installable
 
 install : installable
 	$(CP) installable_$(HLLNAME)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(HLLNAME)@exe@
-	$(POD2MAN) $(HLLNAME).pir > $(DESTDIR)$(MANDIR)/man1/parrot-$(HLLNAME).1
+	$(POD2MAN) lazy.pir > $(DESTDIR)$(MANDIR)/man1/parrot-$(HLLNAME).1
 	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(HLLNAME)
 	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(HLLNAME)
 
@@ -75,7 +75,6 @@ $(HLLNAME)@exe@: $(HLLNAME).pbc
 
 installable : installable_$(HLLNAME)@exe@
 	$(CP) installable_$(HLLNAME)@exe@ $(BUILD_DIR)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) copy --destination=$(PARROT_DYNEXT) $(PMCS)
 
 installable_$(HLLNAME)@exe@ : $(HLLNAME).pbc
 	$(PBC_TO_EXE) $(HLLNAME).pbc --install
Index: parrot-svn/languages/lisp/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/lisp/config/makefiles/root.in
+++ parrot-svn/languages/lisp/config/makefiles/root.in
@@ -20,17 +20,16 @@ RM_RF         = @rm_rf@
 CP            = @cp@
 MKPATH        = @mkpath@
 POD2MAN       = pod2man
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+PARROT        = $(SHRPENV) ../../parrot@exe@
+PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
-POD2MAN	      = pod2man
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
-PARROT        = $(SHRPENV) ../../parrot@exe@
-PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 DOCS = CHANGES KNOWN_BUGS LICENSE MAINTAINER README
 
Index: parrot-svn/languages/lolcode/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/lolcode/config/makefiles/root.in
+++ parrot-svn/languages/lolcode/config/makefiles/root.in
@@ -20,16 +20,16 @@ RM_RF         = @rm_rf@
 CP            = @cp@
 MKPATH        = @mkpath@
 POD2MAN       = pod2man
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+PARROT        = $(SHRPENV) ../../parrot@exe@
+PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
-PARROT        = $(SHRPENV) ../../parrot@exe@
-PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 ## places to look for things
 PARROT_DYNEXT = $(BUILD_DIR)/runtime/parrot/dynext
@@ -59,7 +59,7 @@ lolcode@exe@: lolcode.pbc
 	$(PBC_TO_EXE) lolcode.pbc
 
 # the default target
-lolcode.pbc:  $(SOURCES)
+lolcode.pbc: $(SOURCES)
 	$(PARROT) $(PARROT_ARGS) -o lolcode.pbc lolcode.pir
 
 src/gen_grammar.pir: $(PERL6GRAMMAR) src/parser/grammar.pg
Index: parrot-svn/languages/lua/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/lua/config/makefiles/root.in
+++ parrot-svn/languages/lua/config/makefiles/root.in
@@ -10,18 +10,21 @@ LOAD_EXT    = @load_ext@
 MAKE        = @make_c@
 RM_F        = @rm_f@
 PERL        = @perl@
+CP          = @cp@
+MKPATH      = @mkpath@
+POD2MAN     = pod2man
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+PARROT      = $(SHRPENV) ../../parrot@exe@
+PBC_TO_EXE  = $(SHRPENV) ../../pbc_to_exe@exe@
+PBC_MERGE   = $(SHRPENV) ../../pbc_merge@exe@
 PGE         = $(PARROT) ../../runtime/parrot/library/PGE/Perl6Grammar.pir
 TGE         = $(PARROT) ../../compilers/tge/tgc.pir
 RECONFIGURE = $(PERL) @build_dir@/tools/dev/reconfigure.pl
 PMCBUILD    = $(PERL) @build_dir@/tools/build/dynpmc.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
-PARROT      = $(SHRPENV) ../../parrot@exe@
-PBC_TO_EXE  = $(SHRPENV) ../../pbc_to_exe@exe@
-PBC_MERGE   = $(SHRPENV) ../../pbc_merge@exe@
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 ## places to look for things
 LIBPATH       = src/lib
Index: parrot-svn/languages/m4/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/m4/config/makefiles/root.in
+++ parrot-svn/languages/m4/config/makefiles/root.in
@@ -15,14 +15,14 @@ BIN_DIR       = @bin_dir@
 LIB_DIR       = @lib_dir@
 DOC_DIR       = @doc_dir@
 MANDIR	      = @mandir@
-RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
 PARROT        = $(SHRPENV) ../../parrot@exe@
 PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
+RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 DOCS = BUGS ChangeLog LICENSE MAINTAINER README TODO.pod VERSION \
        pod/features.pod pod/freezing.pod pod/operation.pod pod/running.pod
Index: parrot-svn/languages/ook/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/ook/config/makefiles/root.in
+++ parrot-svn/languages/ook/config/makefiles/root.in
@@ -9,14 +9,14 @@ RM_F          = @rm_f@
 CP            = @cp@
 MKPATH        = @mkpath@
 POD2MAN       = pod2man
-RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
 PARROT        = $(SHRPENV) ../../parrot@exe@
 PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
+RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 # Set up directories
 BUILD_DIR     = @build_dir@
Index: parrot-svn/languages/parrot_compiler/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/parrot_compiler/config/makefiles/root.in
+++ parrot-svn/languages/parrot_compiler/config/makefiles/root.in
@@ -6,14 +6,14 @@
 # Set up commands
 PERL          = @perl@
 RM_F          = @rm_f@
-RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
 PARROT        = $(SHRPENV) ../../@test_prog@@exe@
 PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
+RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 # Set up directories
 BUILD_DIR     = @build_dir@
Index: parrot-svn/languages/perl6/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/perl6/config/makefiles/root.in
+++ parrot-svn/languages/perl6/config/makefiles/root.in
@@ -29,18 +29,17 @@ EXE           = @exe@
 MAKE          = @make_c@
 PERL          = @perl@
 RM_F          = @rm_f@
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+PARROT        = $(SHRPENV) ../../parrot@exe@
+PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 BUILD_DYNOPS  = $(PERL) $(BUILD_DIR)/tools/build/dynoplibs.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
-PARROT        = $(SHRPENV) ../../parrot@exe@
-PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
-
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 DOCS = README MAINTAINER ROADMAP docs/compiler_overview.pod docs/glossary.pod docs/STATUS
 
 build: perl6.pbc Test.pir
@@ -125,7 +124,7 @@ perl6$(EXE): perl6.pbc
 	$(PBC_TO_EXE) perl6.pbc
 
 # the default target
-perl6.pbc:  $(SOURCES)
+perl6.pbc: $(SOURCES)
 	$(PARROT) $(PARROT_ARGS) -o perl6.pbc perl6.pir
 
 installable_perl6$(EXE): perl6.pbc
@@ -149,7 +148,7 @@ src/gen_actions.pir: $(NQP) $(PCT) src/p
 src/gen_builtins.pir: $(BUILTINS_PIR)
 	$(CAT) $(BUILTINS_PIR) >src/gen_builtins.pir
 
-$(PERL6_GROUP):  $(PMC_SOURCES)
+$(PERL6_GROUP): $(PMC_SOURCES)
 	cd $(PMC_DIR) && $(BUILD_DYNPMC) generate $(PMCS)
 	cd $(PMC_DIR) && $(BUILD_DYNPMC) compile $(PMCS)
 	cd $(PMC_DIR) && $(BUILD_DYNPMC) linklibs $(PMCS)
Index: parrot-svn/languages/pheme/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/pheme/config/makefiles/root.in
+++ parrot-svn/languages/pheme/config/makefiles/root.in
@@ -15,17 +15,17 @@ CP            = @cp@
 MKPATH        = @mkpath@
 POD2MAN	      = pod2man
 EXE           = @exe@
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+PARROT        = $(SHRPENV) ../../parrot@exe@
+PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
 TGE_DIR       = ../../compilers/tge
 PGE_LIBRARY   = $(BUILD_DIR)/runtime/parrot/library/PGE
 PERL6GRAMMAR  = $(PGE_LIBRARY)/Perl6Grammar.pbc
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
-PARROT        = $(SHRPENV) ../../parrot@exe@
-PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 DOCS = MAINTAINER MANIFEST README TODO
 
Index: parrot-svn/languages/punie/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/punie/config/makefiles/root.in
+++ parrot-svn/languages/punie/config/makefiles/root.in
@@ -1,13 +1,17 @@
 # $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 # Setup some commands
-HLLNAME          = punie
+HLLNAME       = punie
 LN_S          = @lns@
 PERL          = @perl@
 RM_F          = @rm_f@
 CP            = @cp@
 MKPATH        = @mkpath@
 POD2MAN       = pod2man
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+PARROT        = $(SHRPENV) ../../parrot@exe@
+PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
 BUILD_DIR     = @build_dir@
 BIN_DIR       = @bin_dir@
 LIB_DIR       = @lib_dir@
@@ -16,13 +20,9 @@ MANDIR	      = @mandir@
 RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
 PGE_DIR       = ../../compilers/pge
 NQP_DIR       = ../../compilers/nqp
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
-PARROT        = $(SHRPENV) ../../parrot@exe@
-PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 PARROT_LIBRARY = ../../runtime/parrot/library
 PGE_LIBRARY   = ../../runtime/parrot/library/PGE
@@ -40,7 +40,7 @@ SOURCES = punie.pir \
   src/builtins/builtins.pir \
 
 # the default target
-punie.pbc:  $(NQP_DIR)/nqp.pbc $(PGE_LIBRARY)/Perl6Grammar.pir $(SOURCES)
+punie.pbc: $(NQP_DIR)/nqp.pbc $(PGE_LIBRARY)/Perl6Grammar.pir $(SOURCES)
 	$(PARROT) $(PGE_LIBRARY)/Perl6Grammar.pir --output=src/gen_punie.pir src/parser/grammar.pg
 	$(PARROT) $(NQP_DIR)/nqp.pbc --target=pir --output=src/gen_punie-actions.pir src/parser/actions.pm
 	$(PARROT) -o punie.pbc punie.pir
Index: parrot-svn/languages/pynie/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/pynie/config/makefiles/root.in
+++ parrot-svn/languages/pynie/config/makefiles/root.in
@@ -4,7 +4,7 @@
 PARROT_ARGS =
 
 ## configuration settings
-HLLNAME          = pynie
+HLLNAME       = pynie
 BUILD_DIR     = @build_dir@
 LOAD_EXT      = @load_ext@
 O             = @o@
@@ -20,16 +20,16 @@ RM_RF         = @rm_rf@
 CP            = @cp@
 MKPATH        = @mkpath@
 POD2MAN       = pod2man
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+PARROT        = $(SHRPENV) ../../parrot@exe@
+PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
-PARROT        = $(SHRPENV) ../../parrot@exe@
-PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 ## places to look for things
 PARROT_DYNEXT = $(BUILD_DIR)/runtime/parrot/dynext
@@ -52,7 +52,7 @@ SOURCES = pynie.pir \
   src/builtins/oper.pir
 
 # the default target
-pynie.pbc:  $(PERL6GRAMMAR) $(NQP) $(PCT) $(SOURCES)
+pynie.pbc: $(PERL6GRAMMAR) $(NQP) $(PCT) $(SOURCES)
 	$(PARROT) $(PARROT_ARGS) $(PERL6GRAMMAR) \
 	    --output=src/gen_grammar.pir src/parser/Grammar.pg
 	$(PARROT) $(PARROT_ARGS) $(NQP) --target=pir \
Index: parrot-svn/languages/regex/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/regex/config/makefiles/root.in
+++ parrot-svn/languages/regex/config/makefiles/root.in
@@ -2,26 +2,28 @@
 # $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 # Makefile for languages/regex
-HLLNAME       = regex
 
 # Set up commands
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+PARROT        = $(SHRPENV) ../../parrot@exe@
+PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
 PERL          = @perl@
 RM_F          = @rm_f@
 YAPP          = yapp
+CP            = @cp@
+MKPATH        = @mkpath@
+POD2MAN       = pod2man
 BUILD_DYNPMC  = $(PERL) @build_dir@/tools/build/dynpmc.pl
+PARROT_DYNEXT = @build_dir@/runtime/parrot/dynext
 RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
-PARROT        = $(SHRPENV) ../../parrot@exe@
-PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 # Set up directories
-BUILD_DIR     = @build_dir@
 PMC_DIR       = pmc
-PARROT_DYNEXT = @build_dir@/runtime/parrot/dynext
+BUILD_DIR     = @build_dir@
 BIN_DIR       = @bin_dir@
 LIB_DIR       = @lib_dir@
 DOC_DIR       = @doc_dir@
@@ -47,7 +49,7 @@ lib/Regex/Grammar.pm : lib/Regex/Grammar
 regex-compiler.pbc : regex-compiler.pir
 	$(PARROT) -o regex-compiler.pbc regex-compiler.pir
 
-$(PMC_DIR)/match_group$(LOAD_EXT):  $(PMC_SOURCES)
+$(PMC_DIR)/match_group$(LOAD_EXT): $(PMC_SOURCES)
 	cd $(PMC_DIR) && $(BUILD_DYNPMC) generate $(PMCS)
 	cd $(PMC_DIR) && $(BUILD_DYNPMC) compile $(PMCS)
 	cd $(PMC_DIR) && $(BUILD_DYNPMC) linklibs $(PMCS)
Index: parrot-svn/languages/scheme/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/scheme/config/makefiles/root.in
+++ parrot-svn/languages/scheme/config/makefiles/root.in
@@ -2,19 +2,15 @@
 # $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 # Makefile for languages/scheme
-HLLNAME          = scheme
+HLLNAME       = scheme
 
 # Set up commands
 PERL          = @perl@
 RM_F          = @rm_f@
 RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
-PARROT        = $(SHRPENV) ../../parrot@exe@
-PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 # Set up directories
 BUILD_DIR     = @build_dir@
Index: parrot-svn/languages/squaak/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/squaak/config/makefiles/root.in
+++ parrot-svn/languages/squaak/config/makefiles/root.in
@@ -4,7 +4,7 @@
 PARROT_ARGS =
 
 ## configuration settings
-HLLNAME          = squaak
+HLLNAME       = squaak
 BUILD_DIR     = @build_dir@
 LOAD_EXT      = @load_ext@
 O             = @o@
@@ -20,12 +20,16 @@ RM_RF         = @rm_rf@
 CP            = @cp@
 MKPATH        = @mkpath@
 POD2MAN       = pod2man
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+PARROT        = $(SHRPENV) ../../parrot@exe@
+PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 ## places to look for things
 PARROT_DYNEXT = $(BUILD_DIR)/runtime/parrot/dynext
@@ -33,10 +37,6 @@ PGE_LIBRARY   = $(BUILD_DIR)/runtime/par
 PERL6GRAMMAR  = $(PGE_LIBRARY)/Perl6Grammar.pbc
 NQP           = $(BUILD_DIR)/compilers/nqp/nqp.pbc
 PCT           = $(BUILD_DIR)/runtime/parrot/library/PCT.pbc
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
-PARROT        = $(SHRPENV) ../../parrot@exe@
-PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
 
 build: squaak.pbc
 
@@ -62,7 +62,7 @@ DOCS = MAINTAINER README \
   pod/tutorial_episode_9.pod
 
 # the default target
-squaak.pbc:  $(SOURCES)
+squaak.pbc: $(SOURCES)
 	$(PARROT) $(PARROT_ARGS) -o squaak.pbc squaak.pir
 
 squaak@exe@: $(HLLNAME).pbc
Index: parrot-svn/languages/tcl/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/tcl/config/makefiles/root.in
+++ parrot-svn/languages/tcl/config/makefiles/root.in
@@ -1,18 +1,20 @@
 # $Id: root.in 30601 2008-08-27 20:21:39Z moritz $
 HLLNAME    = tcl
-RM_F    = @rm_f@
-PERL    = @perl@
-POD2MAN = pod2man
+RM_F       = @rm_f@
+PERL       = @perl@
+CP         = @cp@
+MKPATH     = @mkpath@
+POD2MAN    = pod2man
 
 BUILD_DIR   = @build_dir@
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+PARROT      = $(SHRPENV) ../../parrot@exe@
+PBC_TO_EXE  = $(SHRPENV) ../../pbc_to_exe@exe@
 RECONFIGURE = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
-PARROT        = $(SHRPENV) $(BUILD_DIR)/parrot@exe@
-PBC_TO_EXE    = $(SHRPENV) $(BUILD_DIR)/pbc_to_exe@exe@
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 TCL_LIB   = library
 PMCBUILD  = $(PERL) @build_dir@/tools/build/dynpmc.pl
@@ -76,7 +78,7 @@ build: tcl.pbc
 
 all: tcl.pbc Makefile installable
 
-tcl.pbc:  pmcs ops runtime/tcllib.pbc src/tclsh.pir
+tcl.pbc: pmcs ops runtime/tcllib.pbc src/tclsh.pir
 	$(PARROT) --output=tcl.pbc src/tclsh.pir
 
 .SUFFIXES : .exe .pbc .pir .pg .tg .tcl
@@ -121,18 +123,15 @@ ops: src/binary$(O)
 runtime/builtins.pir: $(DEPS) tools/gen_builtins.pl
 	$(PERL) tools/gen_builtins.pl > runtime/builtins.pir
 
-runtime/tcllib.pbc:  runtime/tcllib.pir runtime/builtins.pir $(CLASSES)
-	$(PARROT) --output=runtime/tcllib.pbc runtime/tcllib.pir
+runtime/tcllib.pbc: runtime/tcllib.pir runtime/builtins.pir $(CLASSES)
+	$(PARROT) --output=$@ runtime/tcllib.pir
 
 # targets for building a standalone tclsh
 # (We're not quite ready to make this a default target.)
-tclsh@exe@: tcl.pbc $(PBC_TO_EXE)
+tclsh@exe@: tcl.pbc
 	$(PBC_TO_EXE) tcl.pbc
 	$(RENAME) tcl@exe@ tclsh@exe@
 
-$(PBC_TO_EXE):
-	$(MAKE) $(BUILD_DIR) ./pbc_to_exe@exe@
-
 installable : installable_tclsh@exe@
 
 installable_tclsh@exe@: tcl.pbc
@@ -322,7 +321,7 @@ runtime/builtins.pir \
 "$(PMCDIR)/*_group.h" \
 "$(PMCDIR)/*$(LOAD_EXT)" \
 "$(PMCDIR)/*.dump" \
-#CONDITIONED_LINE(ld_parrot_exe_def):"$(PMCDIR)/*.def" \
+#IF(ld_parrot_exe_def):"$(PMCDIR)/*.def" \
 "$(PMCDIR)/*.c" \
 "$(PMCDIR)/*$(O)" \
 "$(PMCDIR)/*.exp" \
@@ -363,7 +362,6 @@ distclean: realclean
 Makefile: config/makefiles/root.in
 	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=tcl
 
-
 #
 # Local variables:
 # mode: makefile
Index: parrot-svn/languages/unlambda/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/unlambda/config/makefiles/root.in
+++ parrot-svn/languages/unlambda/config/makefiles/root.in
@@ -14,15 +14,26 @@ DOC_DIR       = @doc_dir@
 MANDIR	      = @mandir@
 
 # Set up commands
-PERL            = @perl@
-RM_F            = @rm_f@
-RECONFIGURE     = $(PERL) @build_dir@/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
+PERL          = @perl@
+RM_F          = @rm_f@
+CP            = @cp@
+MKPATH        = @mkpath@
+POD2MAN       = pod2man
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+PARROT        = $(SHRPENV) ../../parrot@exe@
+PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
+RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
+
+DOCS = MAINTAINER README
 
 # The default target
-default: build
+build : $(HLLNAME).pbc
+
+all : $(HLLNAME).pbc Makefile installable
 
 help :
 	@echo ""
@@ -30,6 +41,8 @@ help :
 	@echo ""
 	@echo "  build:             does nothing."
 	@echo "                     This is the default target."
+	@echo "  install:           install the installable targets and docs."
+	@echo ""
 	@echo ""
 	@echo "  test:              Run the test suite."
 	@echo ""
@@ -44,13 +57,35 @@ Makefile: config/makefiles/root.in
 	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=unlambda
 
 # Compilation:
-build:
-	@echo "nothing to do"
+build:  $(HLLNAME).pbc
+
+$(HLLNAME).pbc: unl.pir
+	$(PARROT) $(PARROT_ARGS) -o $@ unl.pir
+
+installable : installable_unlambda@exe@
+	$(CP) installable_unlambda@exe@ $(BUILD_DIR)
+
+installable_unlambda@exe@: $(HLLNAME).pbc
+	$(PBC_TO_EXE) $(HLLNAME).pbc --install
+
+# TODO: test for installed libs, rename build_dir. basic run for missing libs
+test-installable : installable
+	./installable_$(HLLNAME)@exe@ examples/h.unl
+
+install : installable
+	$(CP) installable_unlambda@exe@ $(DESTDIR)$(BIN_DIR)/parrot-unlambda@exe@
+	$(POD2MAN) $(HLLNAME).pir > $(DESTDIR)$(MANDIR)/man1/parrot-unlambda.1
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/unlambda
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/unlambda
 
 # cleaning up
+CLEANUPS = \
+  unl.pbc \
+  $(HLLNAME)@exe@ \
+  installable_$(HLLNAME)@exe@ \
 
 clean: 
-	@echo "nothing to do"
+	$(RM_F) $(CLEANUPS)
 
 realclean: clean
 	$(RM_F) Makefile
Index: parrot-svn/languages/urm/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/urm/config/makefiles/root.in
+++ parrot-svn/languages/urm/config/makefiles/root.in
@@ -5,14 +5,19 @@
 # Setup of some commands
 RM_F          = @rm_f@
 PERL          = @perl@
+CP            = @cp@
 BUILD_DIR     = @build_dir@
-RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
-#CONDITIONED_LINE(darwin):
-#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
+BIN_DIR       = @bin_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
+#IF(cygwin):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#ELSEIF(not win32):SHRPENV  = env LD_RUN_PATH="@build_dir@/blib/lib"
 PARROT        = $(SHRPENV) ../../parrot@exe@
+PBC_TO_EXE    = $(SHRPENV) ../../pbc_to_exe@exe@
+RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
+#IF(darwin):
+#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
+#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 default: all
 
Index: parrot-svn/lib/Parrot/Configure/Compiler.pm
===================================================================
--- parrot-svn.orig/lib/Parrot/Configure/Compiler.pm
+++ parrot-svn/lib/Parrot/Configure/Compiler.pm
@@ -1,5 +1,5 @@
 # Copyright (C) 2001-2008, The Perl Foundation.
-# $Id: Compiler.pm 30527 2008-08-25 01:33:06Z jkeenan $
+# $Id: Compiler.pm 30597 2008-08-27 18:31:51Z moritz $
 
 =head1 NAME
 
@@ -33,6 +33,7 @@ use Parrot::Configure::Utils qw(
     _run_command _build_compile_command
     move_if_diff
 );
+my $DEBUG;
 
 our %file_types_info = (
     makefile => {
@@ -210,17 +211,62 @@ enabled, and C<conditioned_lines> to ena
 Its value will be detected automatically by target file name unless you set
 it to a special value C<none>.
 
-=item conditioned_lines
+=item conditioned_lines #IF #UNLESS #ELSIF #ELSE
 
-If C<conditioned_lines> is true, then lines in the file that begin with:
-C<#CONDITIONED_LINE(var):> are skipped if the C<var> condition is false. Lines
-that begin with C<#INVERSE_CONDITIONED_LINE(var):> are skipped if
-the C<var> condition is true.  For instance:
+If conditioned_lines is true, then several expressions at the first column
+are evaluated and replaced by the content after the C<:> dependending on
+the evaluation of the expression.
+
+Lines beginning with C<#IF(expr):> are skipped if the expr
+condition is false, otherwise the content after the C<:> is inserted.
+Lines beginning with C<#UNLESS(expr):> are skipped if the expr condition
+is true, otherwise the content after the C<:> is inserted.
+Lines beginning with C<#ELSIF(expr):> or C<#ELSE:> are evaluated if the
+former C<#IF(expr):> evaluated to false.
+
+A condition expr may be:
+
+  * a single key, which is true if a config key is true
+    - not 0 and not undef and not an empty string,
+  * or equal to the platform name, the osname - case-sensitive,
+  * or a C<key==value> expression, which checks for the config key,
+    Note that values may contain no spaces here. Quotes in values
+    are not supported.
+  * or a logical combination of C<|>, C<OR>, C<&>, C<AND>, C<!>, C<NOT>,
+    The verbose ops AND, OR and NOT are case-insensitive.
+    ! and NOT bind closer than &, AND and |, OR.
+    The order of precedence for AND and OR is undefined.
 
-  #CONDITIONED_LINE(win32): $(SRC_DIR)/atomic/gcc_x86$(O)
+A key must only consist of the chars A-Z a-z 0-9 _ -, and is checked
+case-sensitively against the config key or the platform name.
+
+For instance:
+
+  #IF(win32): $(SRC_DIR)/atomic/gcc_x86$(O)
 
 will be processed if the platform is win32.
 
+  #IF(cpuarch==i386): $(SRC_DIR)/atomic/gcc_x86$(O)
+
+will be skipped if the value of the config key "cpuarch" is not "i386".
+
+  #IF(cpuarch==i386): $(SRC_DIR)/atomic/gcc_x86$(O)
+  #ELSIF(cpuarch==sparcv9): $(SRC_DIR)/atomic/sparc_v9.s
+  #ELSE:
+
+will use " $(SRC_DIR)/atomic/gcc_x86$(O)" on cpuarch "i386",
+" $(SRC_DIR)/atomic/sparc_v9.s" on cpuarch "sparcv9"
+and print an empty line otherwise.
+
+  #IF(win32 and glut and not cygwin):
+
+will be used on win32 and if glut is defined, but not on cygwin.
+
+B<Legacy Syntax:>
+
+The old syntax #CONDITIONED_LINE(var): and
+#INVERSE_CONDITIONED_LINE(var): is still supported, but is deprecated.
+
 =item comment_type
 
 This option takes has two possible values, C<#> or C</*>. If present and
@@ -360,6 +406,7 @@ sub genfile {
     # this loop can not be implemented as a foreach loop as the body
     # is dependent on <IN> being evaluated lazily
 
+    my $former_truth = 99;
     while ( my $line = <$in> ) {
 
         # everything after the line starting with #perl is eval'ed
@@ -379,13 +426,43 @@ sub genfile {
             last;
         }
         if ( $options{conditioned_lines} ) {
-            if ( $line =~ m/^#CONDITIONED_LINE\(([^)]+)\):(.*)/s ) {
-                next unless $conf->data->get($1);
-                $line = $2;
-            }
-            elsif ( $line =~ m/^#INVERSE_CONDITIONED_LINE\(([^)]+)\):(.*)/s ) {
-                next if $conf->data->get($1);
-                $line = $2;
+            my ($op, $expr, $rest);
+            # allow multiple keys and nested parens here
+            if (($op,$expr,$rest)=($line =~ m/^#(IF|UNLESS|ELSIF)\((.+)\):(.*)/s)) {
+                if (($op eq 'ELSIF') and $former_truth) {
+                    next;  # no useless check if former IF was true
+                }
+                my $truth = cond_eval($conf, $expr);
+                if ($op eq 'IF') {
+                    $former_truth = $truth;
+                    next unless $truth;
+                }
+                elsif ($op eq 'UNLESS') {
+                    $former_truth = !$truth;
+                    next if $truth;
+                }
+                elsif ($op eq 'ELSIF') {
+                    $former_truth = $truth;
+                    next unless $truth;
+                }
+                $line = $rest;
+            }
+            elsif ( $former_truth != 99 and $line =~ m/^#ELSE:(.*)/s ) {
+                next if $former_truth;
+                $line = $1;
+            }
+            # Legacy, DEPRECATED.
+            elsif (($expr,$rest)=($line =~ m/^#CONDITIONED_LINE\(([^)]+)\):(.*)/s)) {
+                next unless cond_eval($conf, $expr);
+                $line = $rest;
+            }
+            elsif (($expr,$rest)=($line =~ m/^#INVERSE_CONDITIONED_LINE\(([^)]+)\):(.*)/s )) {
+                next if cond_eval($conf, $expr);
+                $line = $rest;
+            }
+
+            else { # reset
+                $former_truth = 99; # ELSE must immediately follow a conditional.
             }
         }
 
@@ -484,6 +561,112 @@ sub genfile {
     move_if_diff( "$target.tmp", $target, $options{ignore_pattern} );
 }
 
+# Return the next subexpression from the expression in $_[0]
+# and remove it from the input expression.
+# Allowed chars: A-Z a-z 0-9 _ -, so let's take [-\w].
+# E.g. "(not win32 and has_glut)"
+#        => not win32 => has_glut
+#      "(!win32&has_glut)|cygwin"   - perl-style
+#        !win32&has_glut => !win32 => &has_glut => |cygwin
+sub next_expr {
+    my $s = $_[0];
+    return "" unless $s;
+    # start of a subexpression?
+    if ($s =~ /^\((.+)\)\s*(.*)/o) {    # longest match to matching closing paren
+        $_[0] = $2 ? $2 : "";           # modify the 2nd arg
+        print "#** nextsub \"$s\" => (\"$1\",\"$_[0]\")\n" if $DEBUG;
+        return $1;
+    }
+    else {
+        $s =~ s/^\s+//;                 # left-trim to make it more robust
+        if ($s =~ m/^([-\w=]+)\s*(.*)?/o) { # shortest match to next non-word char
+            # start with word expr
+            $_[0] = $2 ? $2 : "";       # modify the 2nd arg expr in the caller
+            print "#** nextexpr \"$s\" => (\"$1\",\"$_[0]\")\n" if $DEBUG;
+            return $1;
+        }
+        else {
+            # special case: start with non-word op (perl-syntax only)
+            $s =~ m/^([|&!])\s*(.*)?/o; # shortest match to next word char
+            $_[0] = $2 ? $2 : "";       # modify the 2nd arg expr in the caller
+            print "#** nextop \"$s\" => (\"$1\",\"$_[0]\")\n" if $DEBUG;
+            return $1;
+        }
+    }
+}
+
+# Checks the logical truth of the hash value: exists and not empty.
+# Also check the platform name, the 'osname' key, if the hash key does not exist.
+# Also check for key==value, like #IF(ld==gcc)
+sub cond_eval_single {
+    my $conf = $_[0];
+    my $key  = $_[1];
+    return unless defined $key;
+    if ($key =~ /^([-\w]+)==(.+)$/) {
+        return ($2 eq $conf->data->get($1));
+    }
+    else {
+        return exists($conf->data->{c}->{$key})
+            ? ($conf->data()->get($key) ? 1 : 0)
+            : $key eq $conf->data()->get('osname');
+    }
+}
+
+# Recursively evaluate boolean expressions with multiple keys and | & ! ops.
+# Order of precedence: Just "!" and "NOT" binds tighter than AND and OR.
+# There's no precedence for AND and OR defined, just left to right.
+sub cond_eval {
+    my $conf = $_[0];
+    my $expr = $_[1];
+    my @count = split /[\s!&|\(]+/, $expr; # optimizable with tr
+    if (@count > 1) { # multiple keys: recurse into
+        my $truth = 0;
+        if (substr($expr,0,1) eq '!') { # NOT is the only op which may start an expr
+            print "#* ! \"$expr\"\n" if $DEBUG;
+            return !cond_eval($conf, substr($expr,1));
+        }
+        else {
+            my $key = next_expr($expr);
+            my $op  = '';
+            while ($key) {
+                if (($key eq '!') or (uc($key) eq 'NOT')) {
+                    # bind next key immediately
+                    $op = '!';
+                    $key = next_expr($expr);
+                }
+                else { # OR shortcut if already $truth
+                    last if $truth and ($op eq '|' or uc($op) eq 'OR');
+                }
+                $truth = cond_eval($conf, $key);
+                print "#* op=\"$op\" key=\"$key\"" if $DEBUG;
+                print " => ",$truth?'true':'false'," rest=\"$expr\"\n" if $DEBUG;
+                if ($op eq '!'  or uc($op) eq 'NOT') {
+                    $truth = $truth ? 0 : 1;
+                }
+                elsif ($op eq '&' or uc($op) eq 'AND') {
+                    last unless $truth; # skip on early fail
+                }
+                my $prevexpr = $expr;
+                $op  = next_expr($expr);
+                if ($op) {
+                    $key = next_expr($expr);
+                }
+                elsif ($prevexpr) {
+                    die "Makefile conditional syntax error: missing op in \"$_[1]\" at \"$prevexpr\".\n";
+                }
+                else {
+                    last; # end of expr, nothing left
+                }
+                if ($prevexpr eq $expr) {
+                    die "Makefile conditional parser error in \"$_[1]\" at \"$prevexpr\".\n";
+                }
+            }
+        }
+        return $truth;
+    }
+    cond_eval_single($conf, $expr);
+}
+
 sub append_configure_log {
     my $conf = shift;
     my $target = shift;
@@ -511,6 +694,6 @@ sub append_configure_log {
 # Local Variables:
 #   mode: cperl
 #   cperl-indent-level: 4
-#   fill-column: 100
+#   fill-column: 80
 # End:
 # vim: expandtab shiftwidth=4:
Index: parrot-svn/t/steps/gen_makefiles-01.t
===================================================================
--- parrot-svn.orig/t/steps/gen_makefiles-01.t
+++ parrot-svn/t/steps/gen_makefiles-01.t
@@ -1,13 +1,78 @@
 #! perl
 # Copyright (C) 2007, The Perl Foundation.
-# $Id: gen_makefiles-01.t 30640 2008-08-29 23:09:28Z jkeenan $
+# $Id: gen_makefiles-01.t 30597 2008-08-27 18:31:51Z moritz $
 # gen_makefiles-01.t
 
 use strict;
 use warnings;
-use Test::More tests =>  7;
+my @cond_tests;
+my @conf_args = ( true => 1, false => 0, value => 'xx' );
+BEGIN {
+    @cond_tests =
+      (
+       # perl-syntax       true or false
+       ["IF(true)", 		1],
+       ["IF(false)", 		0],
+       ["IF(true | false)",	1],
+       ["IF(true & false)",     0],
+       ["IF(true or false)",    1],
+       ["IF(true and false)",   0],
+       ["UNLESS(true)",	        0],
+       ["UNLESS(false)",	1],
+       ["UNLESS(true|false)",   0],
+       ["UNLESS(true&false)",   1],
+       ["IF(!false)", 		1],
+       ["IF(true)", 		1],
+       ["ELSIF(value)", 	0],
+       ["ELSE", 	        0],
+       ["IF(false)", 		0],
+       ["ELSIF(value)", 	1],
+       ["ELSE", 	        0],
+       ["IF(false)", 		0],
+       ["ELSIF(false)", 	0],
+       ["ELSE", 	        1],
+       # Strangle the parser a bit
+       ["IF(true and (!false and value))",  1],
+       ["IF(true and (!false) and value)",  1],
+       ["IF(true and !false and value)",    1, 'no parens'],
+       ["IF(true and not false and value)", 1, 'no parens'],
+       ["IF(true&!false&value)",            1],
+       ["IF(false or (!false and value))",  1, 'TODO parser problem'],
+       ["UNLESS(!(true&!false&value))",     1, 'no ws, but nested parens'],
+       ["IF(true&(!false&false))",          0, 'TODO parser problem'],
+       ["IF(true&(!false&value))",          1],
+       ["IF(not true and value)",           0, 'TODO parser problem'],
+       ["IF(not false and value)",          1],
+       ["IF((not false) and value)",        1],
+       ["IF(not (false and value))",        1],
+       ["IF(not (false or value))",         0],
+       ["IF(true and not false)",           1],
+       # platform
+       ["IF(someplatform)",		    1],
+       ["IF(not someplatform)",		    0],
+       ["UNLESS(someplatform)",		    0],
+       ["UNLESS(not someplatform)",	    1],
+       # key==value
+       ["IF(value==xx)",                    1],
+       ["IF(value==xxy)",                   0],
+       ["UNLESS(value==xx)",                0],
+       ["UNLESS(value==xxy)",               1],
+       ["IF(true & (value==xx & (!false)))",1],
+       # These are invalid. It will check for ("value" or "==" or "xx")
+       ["IF(value == xx)",                  0], # invalid, no warning
+       ["IF(value = xx)",                   0], # also invalid, no warning
+       ["IF(value=xx)",                     0], # also invalid, no warning
+
+       # Legacy syntax                 true or false
+       ["CONDITIONED_LINE(true)", 	    1],
+       ["INVERSE_CONDITIONED_LINE(true)",   0],
+       ["CONDITIONED_LINE(false)", 	    0],
+       ["INVERSE_CONDITIONED_LINE(false)",  1],
+      );
+}
+use Test::More tests => (7 + scalar(@cond_tests));
 use Carp;
-use lib qw( lib );
+use lib qw( . lib );
 use_ok('config::gen::makefiles');
 use Parrot::Configure;
 use Parrot::Configure::Options qw( process_options );
@@ -18,7 +83,7 @@ use Parrot::Configure::Test qw(
 
 ########## regular ##########
 
-my ($args, $step_list_ref) = process_options(
+my $args = process_options(
     {
         argv => [ ],
         mode => q{configure},
@@ -38,6 +103,52 @@ foreach my $k ( keys %makefiles ) {
 is($missing_SOURCE, 0, "No Makefile source file missing");
 ok(-f $step->{CFLAGS_source}, "CFLAGS source file located");
 
+my $i = undef;
+sub result {
+    my $c = shift;
+    my $s = $c->[0];
+    $s =~ s/^\+/plus_/;
+    $s =~ s/^\-/minus_/;
+    $s =~ s/\|/OR/g;
+    $s =~ s/\&/AND/g;
+    $s =~ s/\!/NOT/g;
+    $s =~ s/[\()]//g;
+    $s =~ s/ /_/g;
+    $s .= ("_".++$i) if $s =~ /^(ELSE|ELSIF)/;
+    return $s."=".($c->[1]?"true":"false");
+}
+# test #+(keys):line RT #57548
+$conf->data->set( @conf_args, ('osname' => 'someplatform' ) );
+open IN, ">", "Makefile_$$.in";
+print IN "# There should only be =true results in .out\n";
+for my $c (@cond_tests) {
+    my $result = result($c);
+    print IN "#$c->[0]:$result\n";
+}
+close IN;
+$conf->genfile("Makefile_$$.in", "Makefile_$$.out",
+	       (makefile => 1, conditioned_lines => 1));
+open OUT, "<", "Makefile_$$.out";
+my $f;
+{
+    local $/;
+    $f = <OUT>;
+}
+END {
+    unlink "Makefile_$$.in", "Makefile_$$.out";
+}
+$i = undef;
+for my $c (@cond_tests) {
+    my $result = result($c);
+    if ($c->[2] and $c->[2] =~ /^TODO(.*)$/) {
+        local $TODO = $1;
+        ok(($c->[1] ? $f =~ /^$result$/m : $f !~ /^$result$/m), "$result");
+    }
+    else {
+        ok(($c->[1] ? $f =~ /^$result$/m : $f !~ /^$result$/m), "$result".($c->[2]?" $c->[2]":''));
+    }
+}
+
 pass("Completed all tests in $0");
 
 ################### DOCUMENTATION ###################
@@ -60,6 +171,8 @@ The tests in this file test gen::makefil
 
 James E Keenan
 
+Reini Urban (@cond_tests)
+
 =head1 SEE ALSO
 
 config::gen::makefiles, F<Configure.pl>.
