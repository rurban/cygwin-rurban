Index: parrot-svn/lib/Parrot/Configure/Compiler.pm
===================================================================
--- parrot-svn.orig/lib/Parrot/Configure/Compiler.pm
+++ parrot-svn/lib/Parrot/Configure/Compiler.pm
@@ -191,15 +191,38 @@ defaults to true.
 
 =item conditioned_lines
 
-If C<conditioned_lines> is true, then lines in the file that begin with:
-C<#CONDITIONED_LINE(var):> are skipped if the C<var> condition is false. Lines
-that begin with C<#INVERSE_CONDITIONED_LINE(var):> are skipped if
-the C<var> condition is true.  For instance:
+If conditioned_lines is true, then lines in the file that begin with
+C<#+(var):> are skipped if the var condition is false.
+Lines that begin with C<#-(var):> are skipped if the var condition is true.
+For legacy the old syntax #CONDITIONED_LINE(var): and #INVERSE_CONDITIONED_LINE(var):
+is also supported.
+
+A condition var may be a single keyword, which is true if a config key is true
+or equal to the platform name,
+or a logical combination or (and var1 var2...) or (or var1 var2...) or (not var1...)
+as in the common lisp reader, with OR being the default for multiple keys.
+Keys are space seperated.
+Keys may also consist of key=value pairs, where the key is checked for equalness
+to the value. Note that values may contain no spaces here. (TODO: support quotes
+in values)
 
-  #CONDITIONED_LINE(win32): $(SRC_DIR)/atomic/gcc_x86$(O)
+  #+(var1 var2...) defaults to #+(or var1 var2...)
+  #-(var1 var2...) defaults to #-(or var1 var2...)
+
+For instance:
+
+  #+(win32): $(SRC_DIR)/atomic/gcc_x86$(O)
 
 will be processed if the platform is win32.
 
+  #-(win32 cygwin): $(SRC_DIR)/atomic/gcc_x86$(O)
+
+will be skipped if the platform is win32 or cygwin.
+
+  #+(and win32 glut (not cygwin)):
+
+will be used on win32 and if glut is defined, but not on cygwin.
+
 =item comment_type
 
 This option takes has two possible values, C<#> or C</*>. If present and
@@ -329,12 +352,20 @@ sub genfile {
             last;
         }
         if ( $options{conditioned_lines} ) {
-            if ( $line =~ m/^#CONDITIONED_LINE\(([^)]+)\):(.*)/s ) {
-                next unless $conf->data->get($1);
+	    # allow nested parens here
+            if ( $line =~ m/^#([-+])\((.+)\):(.*)/s ) {
+		my $truth = cond_eval($conf, $2);
+		next if ($1 eq '-') and $truth;
+		next if ($1 eq '+') and not $truth;
+                $line = $3;
+	    }
+	    # but here not (legacy)
+	    elsif ( $line =~ m/^#CONDITIONED_LINE\(([^)]+)\):(.*)/s ) {
+                next unless cond_eval($conf, $1);
                 $line = $2;
             }
             elsif ( $line =~ m/^#INVERSE_CONDITIONED_LINE\(([^)]+)\):(.*)/s ) {
-                next if $conf->data->get($1);
+                next if cond_eval($conf, $1);
                 $line = $2;
             }
         }
@@ -434,6 +465,18 @@ sub genfile {
     move_if_diff( "$target.tmp", $target, $options{ignore_pattern} );
 }
 
+# Just checks the logical truth of the hash value (exists and not empty)
+# TODO: also check the platform name if the hash key does not exist
+# TODO: recursive (), evaluate AND, OR, NOT with multiple keys
+# TODO: check for key=value, like #+(ld=gcc)
+sub cond_eval {
+    my $conf = shift;
+    my $expr = shift;
+    # TODO: parse for parens and multiple keys in the expression and
+    # evaluate it recursively.
+    return $conf->data->get($expr);
+}
+
 sub append_configure_log {
     my $conf = shift;
     my $target = shift;
Index: parrot-svn/config/gen/makefiles/root.in
===================================================================
--- parrot-svn.orig/config/gen/makefiles/root.in
+++ parrot-svn/config/gen/makefiles/root.in
@@ -106,9 +106,9 @@ LDFLAGS          = @ldflags@ @ld_debug@
 RECONFIGURE      = $(PERL) tools/dev/reconfigure.pl
 INNO_SETUP       = iscc
 JIT_BUILD_TOOL   = $(BUILD_TOOLS_DIR)/jit2c.pl
-#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
-#CONDITIONED_LINE(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
-#INVERSE_CONDITIONED_LINE(cygchkdll):SHRPENV  = env LD_RUN_PATH=@build_dir@/blib/lib
+#+(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
+#+(cygchkdll):SHRPENV  = env PATH="@build_dir@/blib/lib:$(PATH)"
+#-(cygchkdll):SHRPENV  = env LD_RUN_PATH=@build_dir@/blib/lib
 
 ###############################################################################
 #
@@ -141,7 +141,7 @@ NONGEN_HEADERS   = @TEMP_nongen_headers@
 
 GEN_MAKEFILES = \
     Makefile \
-#CONDITIONED_LINE(has_perldoc):    docs/Makefile \
+#+(has_perldoc):    docs/Makefile \
     compilers/nqp/Makefile \
     compilers/pct/Makefile \
     compilers/pge/Makefile \
@@ -166,9 +166,9 @@ GEN_CONFIGS = \
     lib/Parrot/PMC.pm \
     runtime/parrot/include/config.fpmc \
     $(SRC_DIR)/platform.c \
-#CONDITIONED_LINE(platform_asm):    $(SRC_DIR)/platform_asm.s \
-#CONDITIONED_LINE(has_opengl):    config/gen/call_list/opengl.in \
-#CONDITIONED_LINE(has_glut):    $(SRC_DIR)/glut_callbacks.c \
+#+(platform_asm):    $(SRC_DIR)/platform_asm.s \
+#+(has_opengl):    config/gen/call_list/opengl.in \
+#+(has_glut):    $(SRC_DIR)/glut_callbacks.c \
     $(SRC_DIR)/core_pmcs.c \
     CFLAGS \
     $(IMCC_DIR)/CFLAGS \
@@ -185,8 +185,8 @@ GEN_CONFIGS = \
 
 GEN_PASM_INCLUDES = \
     runtime/parrot/include/signal.pasm \
-#CONDITIONED_LINE(has_opengl):    runtime/parrot/include/opengl_defines.pasm \
-#CONDITIONED_LINE(has_opengl):    runtime/parrot/library/OpenGL_funcs.pir \
+#+(has_opengl):    runtime/parrot/include/opengl_defines.pasm \
+#+(has_opengl):    runtime/parrot/library/OpenGL_funcs.pir \
     @TEMP_gen_pasm_includes@
 
 CONFIGURE_GENERATED_FILES = \
@@ -254,7 +254,7 @@ GEN_LIBRARY = \
     $(LIBRARY_DIR)/MIME/Base64.pbc \
     $(LIBRARY_DIR)/NCI/call_toolkit_init.pbc \
     $(LIBRARY_DIR)/ncurses.pbc \
-#CONDITIONED_LINE(has_opengl):    $(LIBRARY_DIR)/OpenGL.pbc \
+#+(has_opengl):    $(LIBRARY_DIR)/OpenGL.pbc \
     $(LIBRARY_DIR)/P6object.pbc \
     $(LIBRARY_DIR)/parrotlib.pbc \
     $(LIBRARY_DIR)/pcre.pbc \
@@ -372,7 +372,7 @@ INTERP_O_FILES = \
     $(OPS_DIR)/core_ops$(O) \
     $(OPS_DIR)/core_ops_switch$(O) \
     \
-#CONDITIONED_LINE(i386_has_gcc_cmpxchg):    $(SRC_DIR)/atomic/gcc_x86$(O) \
+#+(i386_has_gcc_cmpxchg):    $(SRC_DIR)/atomic/gcc_x86$(O) \
     $(SRC_DIR)/byteorder$(O) \
     $(SRC_DIR)/charset$(O) \
     $(SRC_DIR)/core_pmcs$(O) \
@@ -444,7 +444,7 @@ INTERP_O_FILES = \
     @TEMP_atomic_o@ \
     @TEMP_jit_o@ \
     @TEMP_gc_o@ \
-#CONDITIONED_LINE(platform_asm):    $(SRC_DIR)/platform_asm$(O) \
+#+(platform_asm):    $(SRC_DIR)/platform_asm$(O) \
 
 O_FILES = \
     $(INTERP_O_FILES) \
@@ -486,14 +486,14 @@ INSTALLABLEPDB      = $(CUR_DIR)/install
 
 # Libraries
 LIBPARROT_STATIC    = @blib_dir@/@libparrot_static@
-#CONDITIONED_LINE(darwin):export DYLD_LIBRARY_PATH := @blib_dir@:$(DYLD_LIBRARY_PATH)
-#CONDITIONED_LINE(win32):LIBPARROT_SHARED  = @libparrot_shared@
-#INVERSE_CONDITIONED_LINE(win32):LIBPARROT_SHARED  = @blib_dir@/@libparrot_shared@
+#+(darwin):export DYLD_LIBRARY_PATH := @blib_dir@:$(DYLD_LIBRARY_PATH)
+#+(win32):LIBPARROT_SHARED  = @libparrot_shared@
+#-(win32):LIBPARROT_SHARED  = @blib_dir@/@libparrot_shared@
 
 # This line controls whether a static or shared library is built
 LIBPARROT           = @libparrot@
 
-#CONDITIONED_LINE(has_icu):ICU_SHARED  = @icu_shared@
+#+(has_icu):ICU_SHARED  = @icu_shared@
 ALL_PARROT_LIBS     = @libparrot_ldflags@ $(ICU_SHARED) $(C_LIBS)
 
 # dynamic extensions
@@ -557,7 +557,7 @@ all : \
     runtime/parrot/include/config.fpmc \
     docs \
     $(LIBNCI_TEST_SO) \
-#CONDITIONED_LINE(has_glut):    $(LIBGLUTCB_SO) \
+#+(has_glut):    $(LIBGLUTCB_SO) \
     $(GEN_LIBRARY) \
     dynpmc \
     dynoplibs \
@@ -627,6 +627,10 @@ vtable.dump : src/vtable.tbl
 Makefile: config/gen/makefiles/root.in
 	$(RECONFIGURE) --step=gen::makefiles --target=Makefile
 
+# regenerate the Makefile
+Makefile : config/gen/makefiles/root.in
+	$(RECONFIGURE) --step=gen::makefiles --target=Makefile
+
 # This is a listing of all targets meant to be called by users
 help :
 	@echo ""
@@ -786,7 +790,7 @@ $(PARROT) : $(SRC_DIR)/main$(O) $(GEN_HE
 	$(LINK) @ld_out@$@ \
 	$(SRC_DIR)/main$(O) $(SRC_DIR)/parrot_config$(O) \
 	@rpath_blib@ $(ALL_PARROT_LIBS) $(LINKFLAGS) $(LINK_DYNAMIC)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
+#+(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
 
 pbc_to_exe.pir : $(PARROT) tools/dev/pbc_to_exe_gen.pl
 	$(PERL) tools/dev/pbc_to_exe_gen.pl \
@@ -801,7 +805,7 @@ $(PARROT_CONFIG) : tools/util/parrot-con
 	$(SHRPENV) $(PARROT) pbc_to_exe.pir parrot_config.pbc
 
 # HLL Executable targets
-#CONDITIONED_LINE(win32):perl6 : $(PERL6)
+#+(win32):perl6 : $(PERL6)
 
 $(PERL6) : compilers $(PBC_TO_EXE)
 	$(MAKE) languages/perl6 perl6$(EXE)
@@ -815,7 +819,7 @@ $(MINIPARROT) : $(SRC_DIR)/main$(O) $(GE
     lib/Parrot/OpLib/core.pm $(SRC_DIR)/null_config$(O)
 	$(LINK) @ld_out@$@ $(SRC_DIR)/main$(O) $(SRC_DIR)/null_config$(O) \
 	@rpath_blib@ $(ALL_PARROT_LIBS) $(LINKFLAGS)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
+#+(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
 
 $(INSTALLABLEPARROT) : $(SRC_DIR)/main$(O) $(GEN_HEADERS) $(LIBPARROT) \
     lib/Parrot/OpLib/core.pm $(SRC_DIR)/install_config$(O) \
@@ -823,7 +827,7 @@ $(INSTALLABLEPARROT) : $(SRC_DIR)/main$(
 	$(LINK) @ld_out@$@ \
     $(SRC_DIR)/main$(O) \
     $(ALL_PARROT_LIBS) $(LINKFLAGS) $(SRC_DIR)/install_config$(O)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
+#+(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
 
 $(INC_DIR)/parrot.h : $(INC_DIR)/pbcversion.h $(INC_DIR)/vtable.h
 
@@ -881,22 +885,22 @@ check_source : $(GENERAL_H_FILES)
 # so always delete the lib -leo
 
 PARROT_LIBS: \
-#CONDITIONED_LINE(has_static_linking):  $(LIBPARROT_STATIC) \
-#CONDITIONED_LINE(has_dynamic_linking): $(LIBPARROT_SHARED)
+#+(has_static_linking):  $(LIBPARROT_STATIC) \
+#+(has_dynamic_linking): $(LIBPARROT_SHARED)
 
 $(LIBPARROT_STATIC) : $(O_FILES)
 	$(MKPATH) @blib_dir@
 	$(AR_CR) @ar_out@$@ @ar_extra@ $(O_FILES)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+#+(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
 	$(RANLIB) $@
 
 $(LIBPARROT_SHARED) : $(O_FILES)
 	$(MKPATH) @blib_dir@
 	$(LD) $(LD_SHARE_FLAGS) $(LDFLAGS) @ld_out@$@ @libparrot_soname@ \
-#CONDITIONED_LINE(cygchkdll):		-Wl,--out-implib=blib/lib/libparrot.dll.a \
+#+(cygchkdll):		-Wl,--out-implib=blib/lib/libparrot.dll.a \
 		$(O_FILES) $(C_LIBS) $(ICU_SHARED)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
-#CONDITIONED_LINE(libparrot_shared_alias):	( cd @blib_dir@ ; ln -sf @libparrot_shared@ @libparrot_shared_alias@ )
+#+(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+#+(libparrot_shared_alias):	( cd @blib_dir@ ; ln -sf @libparrot_shared@ @libparrot_shared_alias@ )
 
 
 #
@@ -909,13 +913,13 @@ $(PDB) : $(SRC_DIR)/parrot_debugger$(O) 
 	$(LINK) @ld_out@$@ \
     $(SRC_DIR)/parrot_debugger$(O) \
     @rpath_blib@ $(ALL_PARROT_LIBS) $(LINKFLAGS)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
+#+(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
 
 $(INSTALLABLEPDB) : $(SRC_DIR)/parrot_debugger$(O) $(LIBPARROT)
 	$(LINK) @ld_out@$@ \
     $(SRC_DIR)/parrot_debugger$(O) \
     $(ALL_PARROT_LIBS) $(LINKFLAGS)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
+#+(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
 
 #
 # Parrot Disassembler
@@ -927,13 +931,13 @@ $(DIS) : $(SRC_DIR)/pbc_disassemble$(O) 
 	$(LINK) @ld_out@$@ \
     $(SRC_DIR)/pbc_disassemble$(O) \
     @rpath_blib@ $(ALL_PARROT_LIBS) $(LINKFLAGS)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
+#+(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
 
 $(INSTALLABLEDIS) : $(SRC_DIR)/pbc_disassemble$(O) $(LIBPARROT)
 	$(LINK) @ld_out@$@ \
     $(SRC_DIR)/pbc_disassemble$(O) \
     $(ALL_PARROT_LIBS) $(LINKFLAGS)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
+#+(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
 
 #
 # Parrot Dump
@@ -943,7 +947,7 @@ $(PDUMP) : $(SRC_DIR)/pdump$(O) $(SRC_DI
 	$(LINK) @ld_out@$@ \
     $(SRC_DIR)/pdump$(O) \
     $(SRC_DIR)/packdump$(O) @rpath_blib@ $(ALL_PARROT_LIBS) $(LINKFLAGS)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
+#+(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
 
 $(SRC_DIR)/pdump$(O) : $(GEN_HEADERS)
 
@@ -951,7 +955,7 @@ $(INSTALLABLEPDUMP) : $(SRC_DIR)/pdump$(
 	$(LINK) @ld_out@$@ \
     $(SRC_DIR)/pdump$(O) \
     $(SRC_DIR)/packdump$(O) $(ALL_PARROT_LIBS) $(LINKFLAGS)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
+#+(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
 
 
 # pbc_info
@@ -959,7 +963,7 @@ $(PINFO) : $(SRC_DIR)/pbc_info$(O) $(LIB
 	$(LINK) @ld_out@$@ \
     $(SRC_DIR)/pbc_info$(O) \
     @rpath_blib@ $(ALL_PARROT_LIBS) $(LINKFLAGS)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
+#+(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
 
 $(SRC_DIR)/pbc_info$(O) : $(GEN_HEADERS)
 
@@ -967,7 +971,7 @@ $(INSTALLABLEPINFO) : $(SRC_DIR)/pbc_inf
 	$(LINK) @ld_out@$@ \
     $(SRC_DIR)/pbc_info$(O) \
     $(ALL_PARROT_LIBS) $(LINKFLAGS)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
+#+(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
 
 #
 # Parrot Bytecode File Merger
@@ -978,14 +982,14 @@ $(PBCMERGE) : $(SRC_DIR)/pbc_merge$(O) $
     $(SRC_DIR)/pbc_merge$(O) \
     $(SRC_DIR)/parrot_config$(O) \
     @rpath_blib@ $(ALL_PARROT_LIBS) $(LINK_DYNAMIC) $(LINKFLAGS)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
+#+(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
 
 $(INSTALLABLEPBCMERGE) : $(SRC_DIR)/pbc_merge$(O) $(LIBPARROT)
 	$(LINK) @ld_out@$@ \
     $(SRC_DIR)/pbc_merge$(O) \
     $(SRC_DIR)/install_config$(O) \
     $(ALL_PARROT_LIBS) $(LINKFLAGS)
-#CONDITIONED_LINE(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
+#+(win32):	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
 
 
 ###############################################################################
@@ -1002,9 +1006,9 @@ $(INC_DIR)/oplib/ops.h lib/Parrot/OpLib/
 
 lib/Parrot/Config/Generated.pm \
     $(SRC_DIR)/platform.c \
-#CONDITIONED_LINE(platform_asm):    $(SRC_DIR)/platform_asm.s \
-#CONDITIONED_LINE(has_opengl):    config/gen/call_list/opengl.in \
-#CONDITIONED_LINE(has_glut):    $(SRC_DIR)/glut_callbacks.c \
+#+(platform_asm):    $(SRC_DIR)/platform_asm.s \
+#+(has_opengl):    config/gen/call_list/opengl.in \
+#+(has_glut):    $(SRC_DIR)/glut_callbacks.c \
     config_lib.pasm \
     $(BUILD_TOOLS_DIR)/dynpmc.pl \
     $(BUILD_TOOLS_DIR)/dynoplibs.pl \
@@ -1105,8 +1109,8 @@ $(SRC_DIR)/hll$(O) : $(GENERAL_H_FILES) 
 
 $(SRC_DIR)/platform$(O) : $(GENERAL_H_FILES)
 
-#CONDITIONED_LINE(platform_asm):$(SRC_DIR)/platform_asm$(O) : $(GENERAL_H_FILES)
-#CONDITIONED_LINE(platform_asm):
+#+(platform_asm):$(SRC_DIR)/platform_asm$(O) : $(GENERAL_H_FILES)
+#+(platform_asm):
 $(SRC_DIR)/core_pmcs$(O) : $(GENERAL_H_FILES)
 
 $(SRC_DIR)/trace$(O) : $(GENERAL_H_FILES)
@@ -1295,11 +1299,11 @@ $(IMCC_O_FILES) : $(IMCC_H_FILES) $(ALL_
 #
 ###############################################################################
 
-#CONDITIONED_LINE(has_perldoc):docs : docs.dummy
-#INVERSE_CONDITIONED_LINE(has_perldoc):docs : docs.stub
+#+(has_perldoc):docs : docs.dummy
+#-(has_perldoc):docs : docs.stub
 
-#CONDITIONED_LINE(has_perldoc):html : html.dummy
-#INVERSE_CONDITIONED_LINE(has_perldoc):html : html.stub
+#+(has_perldoc):html : html.dummy
+#-(has_perldoc):html : html.stub
 
 html.stub:
 	@echo "Perldoc is required, but not detected."
@@ -1495,10 +1499,10 @@ check : test
 # when the needed runcores are available
 fulltest :
 	-@make@ testb
-#CONDITIONED_LINE(cg_flag):	-@make@ testC
+#+(cg_flag):	-@make@ testC
 	-@make@ testf
-#CONDITIONED_LINE(cg_flag):	-@make@ testg
-#CONDITIONED_LINE(cg_flag):	-@make@ testj
+#+(cg_flag):	-@make@ testg
+#+(cg_flag):	-@make@ testj
 	-@make@ testr
 	-@make@ testS
 	-@make@ src_tests
@@ -1610,15 +1614,15 @@ clean : \
     prog-clean \
     dynext-clean \
     languages-clean \
-#CONDITIONED_LINE(has_perldoc):    docs-clean \
-#CONDITIONED_LINE(has_perldoc):    html-clean \
+#+(has_perldoc):    docs-clean \
+#+(has_perldoc):    html-clean \
     dynpmc-clean \
     dynoplibs-clean \
     examples-clean \
     imcc-clean \
     compilers-clean \
     smoke-clean \
-#INVERSE_CONDITIONED_LINE(win32):    cover-clean \
+#-(win32):    cover-clean \
     editor-clean
 	@TEMP_cg_r@
 	$(RM_F) chartypes "*.s" "*~"
@@ -2075,10 +2079,10 @@ COVER_DIRS = \
 cover: \
     cover.dummy \
     cover-testb \
-#CONDITIONED_LINE(cg_flag):    cover-testC \
+#+(cg_flag):    cover-testC \
     cover-testf \
-#CONDITIONED_LINE(cg_flag):    cover-testg \
-#CONDITIONED_LINE(jitcapable):    cover-testj \
+#+(cg_flag):    cover-testg \
+#+(jitcapable):    cover-testj \
     cover-testr \
     cover-testS \
     cover-src \
@@ -2232,7 +2236,7 @@ tags-emacs: tags.emacs.dummy
 tags-xemacs: tags.emacs.dummy
 	$(RM_F) TAGS
 	find $(CUR_DIR) \
-        -name \*.c -o -name \*.h -o -name \*.pmc -o -name \*.ops | etags -l c - -o TAGS
+    -type f -regex ".*\.\(c\|h\|pmc\|ops\)$$" | etags -l c - -o TAGS
 
 tags.emacs.dummy:
 
