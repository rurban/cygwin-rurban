2008-07-03 17:17:39 rurban

	* requires a svn rename before:
	svn rename src/pdb.c src/parrot_pdb.c
	svn rename t/tools/pdb.t t/tools/parrot_pdb.t
	* MANIFEST, docs/debug.pod, docs/debugger.pod, docs/parrot.pod
	src/parrot_pdb.c, t/tools/parrot_pdb.t: rename pdb to parrot_pdb
	to avoid conflicts with existing pdb binaries - e.g. the python 
	debugger or the IBM parallel debugger.

Index: parrot-svn/MANIFEST
===================================================================
--- parrot-svn.orig/MANIFEST
+++ parrot-svn/MANIFEST
@@ -3070,7 +3070,7 @@ src/packfile/pf_items.c                 
 src/packout.c                                               []
 src/pbc_info.c                                              []
 src/pbc_merge.c                                             []
-src/pdb.c                                                   []
+src/parrot_pdb.c                                            []
 src/pdump.c                                                 []
 src/pic.c                                                   []
 src/pic_jit.c                                               []
@@ -3857,7 +3857,7 @@ t/tools/ops2pmutils/09-prepare_real_ops.
 t/tools/ops2pmutils/10-print_module.t                       []
 t/tools/ops2pmutils/11-print_h.t                            []
 t/tools/pbc_merge.t                                         []
-t/tools/pdb.t                                               []
+t/tools/parrot_pdb.t                                        []
 t/tools/pmc2c.t                                             []
 t/tools/pmc2cutils/00-qualify.t                             []
 t/tools/pmc2cutils/01-pmc2cutils.t                          []
Index: parrot-svn/docs/debug.pod
===================================================================
--- parrot-svn.orig/docs/debug.pod
+++ parrot-svn/docs/debug.pod
@@ -75,9 +75,9 @@ different objects over the lifetime of t
 Let's say you have written (or generated) a huge .pasm or .pir file.  It's not
 working. You'd like some help in figuring out why.
 
-=head2 pdb
+=head2 parrot_pdb
 
-One possible tool is C<pdb>, the Parrot Debugger. See F<docs/debugger.pod> for
+One possible tool is C<parrot_pdb>, the Parrot Debugger. See F<docs/debugger.pod> for
 details on it.
 
 =head2 stabs
Index: parrot-svn/docs/debugger.pod
===================================================================
--- parrot-svn.orig/docs/debugger.pod
+++ parrot-svn/docs/debugger.pod
@@ -7,12 +7,12 @@ docs/debugger.pod - The Parrot Debugger
 
 =head1 ABSTRACT
 
-This document describes F<pdb>, the Parrot Debugger.
+This document describes F<parrot_pdb>, the Parrot Debugger.
 
 =head1 DESCRIPTION
 
 Starting from version 0.0.6 Parrot has its own debugger, which is modeled after
-Perl's one. Its name is F<pdb>, and is an interactive environment that let you
+Perl's one. Its name is F<parrot_pdb>, and is an interactive environment that let you
 step through bytecode, set breakpoints, evaluate assembly instructions and peek
 at the interpreter status.
 
@@ -29,17 +29,17 @@ target:
 
 (where C<make> is the same C<make> incarnation you used to build Parrot).
 
-If everything goes well, you should come up with a F<pdb> executable in the
+If everything goes well, you should come up with a F<parrot_pdb> executable in the
 same directory as the Parrot program.
 
 =head1 THE DEBUGGER SHELL
 
 To start the debugger type:
 
-  pdb file.pbc
+  parrot_pdb file.pbc
 
-That is, F<pdb> takes exactly one argument, which is the Parrot bytecode that
-you're going to debug. F<pdb> will automatically load and disassemble the
+That is, F<parrot_pdb> takes exactly one argument, which is the Parrot bytecode that
+you're going to debug. F<parrot_pdb> will automatically load and disassemble the
 bytecode file for you.
 
 Note that you can't pass command line arguments to your program when you invoke
@@ -49,7 +49,7 @@ After the version banner, you'll see the
 
   (pdb)
 
-F<pdb> is ready to receive commands and give output. To list the available
+F<parrot_pdb> is ready to receive commands and give output. To list the available
 commands type 'h'. To quit the debugger type 'q'.
 
 As with the Perl debugger, whenever it halts and shows you a line of code, it
@@ -69,7 +69,7 @@ sensitive.
 
 A blank line always repeats the last command entered.
 
-Also note that at this point in its development, F<pdb> has very poor error
+Also note that at this point in its development, F<parrot_pdb> has very poor error
 checking on commands and their arguments, so type carefully or something bad
 will happen. Feel free to report bugs, or better yet patch the source code (see
 L</FILES> below).
Index: parrot-svn/docs/parrot.pod
===================================================================
--- parrot-svn.orig/docs/parrot.pod
+++ parrot-svn/docs/parrot.pod
@@ -112,7 +112,7 @@ A beginner's guide to debugging the Parr
 
 =item F<debugger.pod>
 
-Documentation for C<pdb>, the Parrot debugger.
+Documentation for C<parrot_pdb>, the Parrot debugger.
 
 =back
 
Index: parrot-svn/src/parrot_pdb.c
===================================================================
--- parrot-svn.orig/src/parrot_pdb.c
+++ parrot-svn/src/parrot_pdb.c
@@ -4,11 +4,11 @@ $Id: pdb.c 28973 2008-07-02 21:28:26Z ch
 
 =head1 NAME
 
-pdb - The Parrot debugger
+parrot_pdb - The Parrot debugger
 
 =head1 SYNOPSIS
 
- pdb programfile
+ parrot_pdb programfile
 
 =head1 DESCRIPTION
 
@@ -147,7 +147,7 @@ main(int argc, char *argv[])
     do_yylex_init(interp, &yyscanner);
 
     if (argc < 2) {
-        fprintf(stderr, "Usage: pdb programfile [program-options]\n");
+        fprintf(stderr, "Usage: parrot_pdb programfile [program-options]\n");
         Parrot_exit(interp, 1);
     }
 
@@ -240,7 +240,7 @@ Prints out the welcome string.
 static void
 PDB_printwelcome(void)
 {
-    fprintf(stderr, "Parrot Debugger 0.4.x\n");
+    fprintf(stderr, "Parrot Debugger 0.6.x\n");
     fprintf(stderr, "\nPlease note: ");
     fprintf(stderr, "the debugger is currently under reconstruction\n");
 }
Index: parrot-svn/t/tools/parrot_pdb.t
===================================================================
--- parrot-svn.orig/t/tools/parrot_pdb.t
+++ parrot-svn/t/tools/parrot_pdb.t
@@ -4,26 +4,26 @@
 
 =head1 NAME
 
-t/tools/pdb.t - test the Parrot Debugger
+t/tools/parrot_pdb.t - test the Parrot Debugger
 
 =head1 SYNOPSIS
 
-    % prove t/tools/pdb.t
+    % prove t/tools/parrot_pdb.t
 
 
 =head1 DESCRIPTION
 
-Tests the C<pdb> tool by providing it with a number of source files,
+Tests the C<parrot_pdb> tool by providing it with a number of source files,
 and running through it with various commands.
 
-We never actually check the *full* output of pdb.  We simply check
+We never actually check the *full* output of parrot_pdb.  We simply check
 several smaller components to avoid a test file that is far too
 unwieldy.
 
 
 =head1 REQUIREMENTS
 
-This test script requires you to build pdb, by typing "make pdb" (using
+This test script requires you to build parrot_pdb, by typing "make parrot_pdb" (using
 a suitable make tool for your platform).  If this requirement has not
 been met, all tests will be skipped.
 
@@ -41,10 +41,10 @@ use File::Spec;
 my $path_to_pdb;
 
 BEGIN {
-    $path_to_pdb = File::Spec->catfile( ".", "pdb" );
+    $path_to_pdb = File::Spec->catfile( ".", "parrot_pdb" );
     my $exefile = $path_to_pdb . $PConfig{exe};
     unless ( -f $exefile ) {
-        plan skip_all => "pdb hasn't been built";
+        plan skip_all => "parrot_pdb hasn't been built";
         exit(0);
     }
 }
