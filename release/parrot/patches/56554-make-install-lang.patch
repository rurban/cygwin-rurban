2008-07-27 21:12:23 rurban

	* perl #56554 [TODO] add languages/*/Makefile install targets

	make install -C languages DESTDIR=inst
	Help generating parrot packages with parrot-languages and self-hosting
	languages.
	
	pbc_to_exe $LANG --install creates now installable_$LANG@exe@
	self-hosting binaries with dependencies to /usr/lib/parrot, not to build_dir

	make installable is needed to create those pbc's.
	make test-installable is needed to test those pbc's against installed
	libraries.
	make install is needed to copy the installables, pmcs and docs to the
	destination

Index: parrot-svn/config/gen/languages.pm
===================================================================
--- parrot-svn.orig/config/gen/languages.pm
+++ parrot-svn/config/gen/languages.pm
@@ -76,7 +76,7 @@ sub runstep {
         }
         elsif ( $language eq 'c99' ) {
             $conf->genfile("$langdir/config/makefiles/root.in"     => "$langdir/Makefile");
-            $conf->genfile("$langdir/config/makefiles/cpp.in"      => "$langdir/src/cpp//Makefile");
+            $conf->genfile("$langdir/config/makefiles/cpp.in"      => "$langdir/src/cpp/Makefile");
         }
         elsif ( $language eq 'tcl' ) {
             # tcl has more than one Makefile
Index: parrot-svn/config/gen/makefiles/languages.in
===================================================================
--- parrot-svn.orig/config/gen/makefiles/languages.in
+++ parrot-svn/config/gen/makefiles/languages.in
@@ -47,6 +47,12 @@ help:
 	@echo ""
 	@echo "  test-separate: Run 'make test' in the individual lang dirs."
 	@echo ""
+	@echo "  installable:   Create self-hosting bins and libs."
+	@echo ""
+	@echo "  test-installable: Test self-hosting bins and libs."
+	@echo ""
+	@echo "  install:       Copy installable and more to DESTDIR."
+	@echo ""
 	@echo "  clean:         Clean up a lot of languages."
 	@echo ""
 	@echo "  help:          Print this help message."
@@ -60,13 +66,16 @@ help:
 	@echo "Following languages are available:"
 	@echo "  $(LANGUAGES)"
 	@echo ""
-	@echo "A particular language <lang> can be built, tested and cleand up"
+	@echo "A particular language <lang> can be built, tested and cleaned up"
 	@echo "  make <lang>"
 	@echo "  make <lang>.test"
+	@echo "  make <lang>.installable"
+	@echo "  make <lang>.test-installable"
+	@echo "  make <lang>.install"
 	@echo "  make <lang>.clean"
 	@echo "  make <lang>.realclean"
 	@echo ""
-	@echo "For the status of individual languages see LANGUAGES.STATUS.pod"
+	@echo "For the status of individual languages see LANGUAGES_STATUS.pod"
 	@echo ""
 
 # regenerate the Makefile
@@ -98,6 +107,65 @@ test-separate: all \
     WMLScript.test \
     Zcode.test
 
+installable : all \
+    abc.installable APL.installable \
+    befunge.installable bf.installable \
+    c99.installable cardinal.installable chitchat.installable cola.installable \
+    dotnet.installable \
+    eclectus.installable ecmascript.installable \
+    forth.installable \
+    hq9plus.installable \
+    jako.installable json.installable \
+    lazy-k.installable lisp.installable lolcode.installable lua.installable \
+    m4.installable \
+    ook.installable \
+    parrot_compiler.installable perl6.installable pheme.installable PIR.installable pipp.installable punie.installable pynie.installable \
+    regex.installable \
+    scheme.installable squaak.installable \
+    tcl.installable \
+    urm.installable unlambda.installable \
+    WMLScript.installable \
+    Zcode.installable
+
+test-installable : all \
+    abc.test-installable APL.test-installable \
+    befunge.test-installable bf.test-installable \
+    c99.test-installable cardinal.test-installable chitchat.test-installable cola.test-installable \
+    dotnet.test-installable \
+    eclectus.test-installable ecmascript.test-installable \
+    forth.test-installable \
+    hq9plus.test-installable \
+    jako.test-installable json.test-installable \
+    lazy-k.test-installable lisp.test-installable lolcode.test-installable lua.test-installable \
+    m4.test-installable \
+    ook.test-installable \
+    parrot_compiler.test-installable perl6.test-installable pheme.test-installable PIR.test-installable pipp.test-installable punie.test-installable pynie.test-installable \
+    regex.test-installable \
+    scheme.test-installable squaak.test-installable \
+    tcl.test-installable \
+    urm.test-installable unlambda.test-installable \
+    WMLScript.test-installable \
+    Zcode.test-installable
+
+install : all \
+    abc.install APL.install \
+    befunge.install bf.install \
+    c99.install cardinal.install chitchat.install cola.install \
+    dotnet.install \
+    eclectus.install ecmascript.install \
+    forth.install \
+    hq9plus.install \
+    jako.install json.install \
+    lazy-k.install lisp.install lolcode.install lua.install \
+    m4.install \
+    ook.install \
+    parrot_compiler.install perl6.install pheme.install PIR.install pipp.install punie.install pynie.install \
+    regex.install \
+    scheme.install squaak.install \
+    tcl.install \
+    urm.install unlambda.install \
+    WMLScript.install \
+    Zcode.install
 
 smoke:  all
 	$(PERL) t/harness --html
@@ -160,6 +228,12 @@ abc.dummy:
 	- $(MAKE) abc
 abc.test:
 	- $(MAKE) abc test
+abc.installable:
+	- $(MAKE) abc installable
+abc.test-installable:
+	- $(MAKE) abc test-installable
+abc.install:
+	- $(MAKE) abc install
 abc.clean:
 	- $(MAKE) abc clean
 abc.realclean:
@@ -170,6 +244,12 @@ APL.dummy:
 	- $(MAKE) APL
 APL.test:
 	- $(MAKE) APL test
+APL.installable:
+	- $(MAKE) APL installable
+APL.test-installable:
+	- $(MAKE) APL test-installable
+APL.install:
+	- $(MAKE) APL install
 APL.clean:
 	- $(MAKE) APL clean
 APL.realclean:
@@ -180,6 +260,12 @@ BASIC.dummy:
 # don't know how to build BASIC
 BASIC.test:
 # Don't know how to test BASIC
+BASIC.installable:
+# Missing for BASIC
+BASIC.test-installable:
+# Missing for BASIC
+BASIC.install:
+# Missing for BASIC
 BASIC.clean:
 # Don't know how to clean BASIC
 
@@ -188,6 +274,12 @@ befunge.dummy:
 	- $(MAKE) befunge
 befunge.test:
 	- $(MAKE) befunge test
+befunge.installable:
+	- $(MAKE) befunge installable
+befunge.test-installable:
+	- $(MAKE) befunge test-installable
+befunge.install:
+	- $(MAKE) befunge install
 befunge.clean:
 	- $(MAKE) befunge clean
 befunge.realclean:
@@ -198,6 +290,12 @@ bf.dummy:
 	- $(MAKE) bf
 bf.test:
 	- $(MAKE) bf test
+bf.installable:
+	- $(MAKE) bf installable
+bf.test-installable:
+	- $(MAKE) bf test-installable
+bf.install:
+	- $(MAKE) bf install
 bf.clean:
 	- $(MAKE) bf clean
 bf.realclean:
@@ -208,6 +306,12 @@ c99.dummy:
 	- $(MAKE) c99
 c99.test:
 	- $(MAKE) c99 test
+c99.installable:
+	- $(MAKE) c99 installable
+c99.test-installable:
+	- $(MAKE) c99 test-installable
+c99.install:
+	- $(MAKE) c99 install
 c99.clean:
 	- $(MAKE) c99 clean
 c99.realclean:
@@ -218,6 +322,12 @@ cardinal.dummy:
 	- $(MAKE) cardinal
 cardinal.test:
 	- $(MAKE) cardinal test
+cardinal.installable:
+	- $(MAKE) cardinal installable
+cardinal.test-installable:
+	- $(MAKE) cardinal test-installable
+cardinal.install:
+	- $(MAKE) cardinal install
 cardinal.clean:
 	- $(MAKE) cardinal clean
 cardinal.realclean:
@@ -228,6 +338,12 @@ chitchat.dummy:
 	- $(MAKE) chitchat
 chitchat.test:
 	- $(MAKE) chitchat test
+chitchat.installable:
+	- $(MAKE) chitchat installable
+chitchat.test-installable:
+	- $(MAKE) chitchat test-installable
+chitchat.install:
+	- $(MAKE) chitchat install
 chitchat.clean:
 	- $(MAKE) chitchat clean
 chitchat.realclean:
@@ -238,6 +354,12 @@ cola.dummy:
 	- $(MAKE) cola
 cola.test:
 	- $(MAKE) cola test
+cola.installable:
+	- $(MAKE) cola installable
+cola.test-installable:
+	- $(MAKE) cola test-installable
+cola.install:
+	- $(MAKE) cola install
 cola.clean:
 	- $(MAKE) cola clean
 cola.realclean:
@@ -249,6 +371,12 @@ dotnet.dummy:
 	- $(MAKE) dotnet
 dotnet.test:
 	- $(MAKE) dotnet test
+dotnet.installable:
+	- $(MAKE) dotnet installable
+dotnet.test-installable:
+	- $(MAKE) dotnet test-installable
+dotnet.install:
+	- $(MAKE) dotnet install
 dotnet.clean:
 	- $(MAKE) dotnet clean
 dotnet.realclean:
@@ -259,6 +387,12 @@ eclectus.dummy:
 	- $(MAKE) eclectus
 eclectus.test :
 	- $(MAKE) eclectus test
+eclectus.installable:
+	- $(MAKE) eclectus installable
+eclectus.test-installable:
+	- $(MAKE) eclectus test-installable
+eclectus.install:
+	- $(MAKE) eclectus install
 eclectus.clean :
 	- $(MAKE) eclectus clean
 eclectus.realclean :
@@ -269,6 +403,12 @@ ecmascript.dummy:
 	- $(MAKE) ecmascript
 ecmascript.test:
 	- $(MAKE) ecmascript test
+ecmascript.installable:
+	- $(MAKE) ecmascript installable
+ecmascript.test-installable:
+	- $(MAKE) ecmascript test-installable
+ecmascript.install:
+	- $(MAKE) ecmascript install
 ecmascript.clean:
 	- $(MAKE) ecmascript clean
 ecmascript.realclean:
@@ -279,6 +419,12 @@ forth.dummy:
 	- $(MAKE) forth
 forth.test:
 	- $(MAKE) forth test
+forth.installable:
+	- $(MAKE) forth installable
+forth.test-installable:
+	- $(MAKE) forth test-installable
+forth.install:
+	- $(MAKE) forth install
 forth.clean:
 	- $(MAKE) forth clean
 forth.realclean:
@@ -289,6 +435,12 @@ hq9plus.dummy:
 	- $(MAKE) hq9plus
 hq9plus.test:
 	- $(MAKE) hq9plus test
+hq9plus.installable:
+	- $(MAKE) hq9plus installable
+hq9plus.test-installable:
+	- $(MAKE) hq9plus test-installable
+hq9plus.install:
+	- $(MAKE) hq9plus install
 hq9plus.clean:
 	- $(MAKE) hq9plus clean
 hq9plus.realclean:
@@ -299,6 +451,12 @@ jako.dummy:
 	- $(MAKE) jako
 jako.test:
 	- $(MAKE) jako test
+jako.installable:
+	- $(MAKE) jako installable
+jako.test-installable:
+	- $(MAKE) jako test-installable
+jako.install:
+	- $(MAKE) jako install
 jako.clean:
 	- $(MAKE) jako clean
 jako.realclean:
@@ -309,6 +467,12 @@ json.dummy:
 	- $(MAKE) json
 json.test:
 	- $(MAKE) json test
+json.installable:
+	- $(MAKE) json installable
+json.test-installable:
+	- $(MAKE) json test-installable
+json.install:
+	- $(MAKE) json install
 json.clean:
 	- $(MAKE) json clean
 json.realclean:
@@ -319,6 +483,12 @@ lazy-k.dummy:
 	- $(MAKE) lazy-k
 lazy-k.test:
 	- $(MAKE) lazy-k test
+lazy-k.installable:
+	- $(MAKE) lazy-k installable
+lazy-k.test-installable:
+	- $(MAKE) lazy-k test-installable
+lazy-k.install:
+	- $(MAKE) lazy-k install
 lazy-k.clean:
 	- $(MAKE) lazy-k clean
 lazy-k.realclean:
@@ -329,6 +499,12 @@ lisp.dummy:
 	- $(MAKE) lisp
 lisp.test:
 	- $(MAKE) lisp test
+lisp.installable:
+	- $(MAKE) lisp installable
+lisp.test-installable:
+	- $(MAKE) lisp test-installable
+lisp.install:
+	- $(MAKE) lisp install
 lisp.clean:
 	- $(MAKE) lisp clean
 lisp.realclean:
@@ -339,6 +515,12 @@ lolcode.dummy:
 	- $(MAKE) lolcode
 lolcode.test:
 	- $(MAKE) lolcode test
+lolcode.installable:
+	- $(MAKE) lolcode installable
+lolcode.test-installable:
+	- $(MAKE) lolcode test-installable
+lolcode.install:
+	- $(MAKE) lolcode install
 lolcode.clean:
 	- $(MAKE) lolcode clean
 lolcode.realclean:
@@ -349,6 +531,12 @@ lua.dummy:
 	- $(MAKE) lua
 lua.test:
 	- $(MAKE) lua test
+lua.installable:
+	- $(MAKE) lua installable
+lua.test-installable:
+	- $(MAKE) lua test-installable
+lua.install:
+	- $(MAKE) lua install
 lua.clean:
 	- $(MAKE) lua clean
 lua.realclean:
@@ -359,6 +547,12 @@ m4.dummy:
 	- $(MAKE) m4
 m4.test:
 	- $(MAKE) m4 test
+m4.installable:
+	- $(MAKE) m4 installable
+m4.test-installable:
+	- $(MAKE) m4 test-installable
+m4.install:
+	- $(MAKE) m4 install
 m4.clean:
 	- $(MAKE) m4 clean
 m4.realclean:
@@ -369,6 +563,12 @@ ook.dummy:
 	- $(MAKE) ook
 ook.test:
 	- $(MAKE) ook test
+ook.installable:
+	- $(MAKE) ook installable
+ook.test-installable:
+	- $(MAKE) ook test-installable
+ook.install:
+	- $(MAKE) ook install
 ook.clean:
 	- $(MAKE) ook clean
 ook.realclean:
@@ -379,6 +579,12 @@ parrot_compiler.dummy:
 	- $(MAKE) parrot_compiler
 parrot_compiler.test:
 	- $(MAKE) parrot_compiler test
+parrot_compiler.installable:
+	- $(MAKE) ook installable
+parrot_compiler.test-installable:
+	- $(MAKE) ook test-installable
+parrot_compiler.install:
+	- $(MAKE) ook install
 parrot_compiler.clean:
 	- $(MAKE) parrot_compiler clean
 parrot_compiler.realclean:
@@ -389,6 +595,12 @@ perl6.dummy:
 	- $(MAKE) perl6
 perl6.test:
 	- $(MAKE) perl6 test
+perl6.installable:
+	- $(MAKE) perl6 installable
+perl6.test-installable:
+	- $(MAKE) perl6 test-installable
+perl6.install:
+	- $(MAKE) perl6 install
 perl6.clean:
 	- $(MAKE) perl6 clean
 perl6.realclean:
@@ -399,6 +611,12 @@ pheme.dummy:
 	- $(MAKE) pheme
 pheme.test:
 	- $(MAKE) pheme test
+pheme.installable:
+	- $(MAKE) pheme installable
+pheme.test-installable:
+	- $(MAKE) pheme test-installable
+pheme.install:
+	- $(MAKE) pheme install
 pheme.clean:
 	- $(MAKE) pheme clean
 pheme.realclean:
@@ -409,6 +627,12 @@ pipp.dummy:
 	- $(MAKE) pipp
 pipp.test:
 	- $(MAKE) pipp test
+pipp.installable:
+	- $(MAKE) pipp installable
+pipp.test-installable:
+	- $(MAKE) pipp test-installable
+pipp.install:
+	- $(MAKE) pipp install
 pipp.clean:
 	- $(MAKE) pipp clean
 pipp.realclean:
@@ -419,6 +643,12 @@ PIR.dummy:
 	- $(MAKE) PIR
 PIR.test:
 	- $(MAKE) PIR test
+PIR.installable:
+	- $(MAKE) PIR installable
+PIR.test-installable:
+	- $(MAKE) PIR test-installable
+PIR.install:
+	- $(MAKE) PIR install
 PIR.clean:
 	- $(MAKE) PIR clean
 PIR.realclean:
@@ -429,6 +659,12 @@ punie.dummy:
 	- $(MAKE) punie
 punie.test:
 	- $(MAKE) punie test
+punie.installable:
+	- $(MAKE) punie installable
+punie.test-installable:
+	- $(MAKE) punie test-installable
+punie.install:
+	- $(MAKE) punie install
 punie.clean:
 	- $(MAKE) punie clean
 punie.realclean:
@@ -439,6 +675,12 @@ pynie.dummy:
 	- $(MAKE) pynie
 pynie.test:
 	- $(MAKE) pynie test
+pynie.installable:
+	- $(MAKE) pynie installable
+pynie.test-installable:
+	- $(MAKE) pynie test-installable
+pynie.install:
+	- $(MAKE) pynie install
 pynie.clean:
 	- $(MAKE) pynie clean
 pynie.realclean:
@@ -449,6 +691,12 @@ regex.dummy:
 	- $(MAKE) regex
 regex.test :
 	- $(MAKE) regex test
+regex.installable:
+	- $(MAKE) regex installable
+regex.test-installable:
+	- $(MAKE) regex test-installable
+regex.install:
+	- $(MAKE) regex install
 regex.clean :
 	- $(MAKE) regex clean
 regex.realclean :
@@ -459,6 +707,12 @@ scheme.dummy:
 	@echo "SKIPPED: scheme: (nothing to make, but should not default to make test)"
 scheme.test :
 	- $(MAKE) scheme test
+scheme.installable:
+	- $(MAKE) scheme installable
+scheme.test-installable:
+	- $(MAKE) scheme test-installable
+scheme.install:
+	- $(MAKE) scheme install
 scheme.clean :
 	- $(MAKE) scheme clean
 scheme.realclean :
@@ -469,6 +723,12 @@ squaak.dummy:
 	- $(MAKE) squaak
 squaak.test:
 	- $(MAKE) squaak test
+squaak.installable:
+	- $(MAKE) squaak installable
+squaak.test-installable:
+	- $(MAKE) squaak test-installable
+squaak.install:
+	- $(MAKE) squaak install
 squaak.clean:
 	- $(MAKE) squaak clean
 squaak.realclean:
@@ -479,6 +739,12 @@ tcl.dummy:
 	- $(MAKE) tcl
 tcl.test:
 	- $(MAKE) tcl test
+tcl.installable:
+	- $(MAKE) tcl installable
+tcl.test-installable:
+	- $(MAKE) tcl test-installable
+tcl.install:
+	- $(MAKE) tcl install
 tcl.clean:
 	- $(MAKE) tcl clean
 tcl.realclean:
@@ -489,6 +755,12 @@ unlambda.dummy:
 	- $(MAKE) unlambda
 unlambda.test :
 	- $(MAKE) unlambda test
+unlambda.installable:
+	- $(MAKE) unlambda installable
+unlambda.test-installable:
+	- $(MAKE) unlambda test-installable
+unlambda.install:
+	- $(MAKE) unlambda install
 unlambda.clean :
 	- $(MAKE) unlambda clean
 unlambda.realclean :
@@ -499,6 +771,12 @@ urm.dummy:
 	- $(MAKE) urm
 urm.test:
 	- $(MAKE) urm test
+urm.installable:
+	- $(MAKE) urm installable
+urm.test-installable:
+	- $(MAKE) urm test-installable
+urm.install:
+	- $(MAKE) urm install
 urm.clean:
 	- $(MAKE) urm clean
 urm.realclean:
@@ -509,6 +787,12 @@ WMLScript.dummy:
 	- $(MAKE) WMLScript
 WMLScript.test:
 	- $(MAKE) WMLScript test
+WMLScript.installable:
+	- $(MAKE) WMLScript installable
+WMLScript.test-installable:
+	- $(MAKE) WMLScript test-installable
+WMLScript.install:
+	- $(MAKE) WMLScript install
 WMLScript.clean:
 	- $(MAKE) WMLScript clean
 WMLScript.realclean:
@@ -519,7 +803,19 @@ Zcode.dummy:
 # Do nothing. make Zcode requires an Inform compiler
 Zcode.test:
 	- $(MAKE) Zcode test
+Zcode.installable:
+# Do nothing. make Zcode requires an Inform compiler
+Zcode.test-installable:
+# Do nothing. make Zcode requires an Inform compiler
+Zcode.install:
+# Do nothing. make Zcode requires an Inform compiler
 Zcode.clean:
 	- $(MAKE) Zcode clean
 Zcode.realclean:
 	- $(MAKE) Zcode realclean
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/APL/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/APL/config/makefiles/root.in
+++ parrot-svn/languages/APL/config/makefiles/root.in
@@ -1,19 +1,27 @@
-## $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+## $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 ## arguments we want to run parrot with
 PARROT_ARGS =
 
 ## configuration settings
+TMPL	      = APL
 BUILD_DIR     = @build_dir@
 LOAD_EXT      = @load_ext@
 O             = @o@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
 
 ## Setup some commands
 LN_S          = @lns@
 PERL          = @perl@
 RM_F          = @rm_f@
 CP            = @cp@
+MKPATH        = @mkpath@
+POD2MAN       = pod2man
 PARROT        = ../../parrot@exe@
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
@@ -42,11 +50,15 @@ SOURCES = APL.pir \
 
 PMCS = aplvector
 PMC_SOURCES = $(PMC_DIR)/aplvector.pmc
+DOCS = MAINTAINER README STATUS
 
 # the default target
 APL.pbc: $(PARROT) $(SOURCES) $(APL_GROUP)
 	$(PARROT) $(PARROT_ARGS) -o APL.pbc APL.pir
 
+$(TMPL)@exe@: $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc
+
 src/gen_grammar.pir: $(PERL6GRAMMAR) src/parser/grammar.pg
 	$(PARROT) $(PARROT_ARGS) $(PERL6GRAMMAR) \
 	    --encoding=utf8 \
@@ -66,9 +78,16 @@ $(APL_GROUP): $(PARROT) $(PMC_SOURCES)
 	cd $(PMC_DIR) && $(BUILD_DYNPMC) linklibs $(PMCS)
 	cd $(PMC_DIR) && $(BUILD_DYNPMC) copy --destination=$(PARROT_DYNEXT) $(PMCS)
 
+installable : installable_$(TMPL)@exe@ $(ABC_GROUP)
+	$(CP) installable_$(TMPL)@exe@ $(BUILD_DIR)
+	cd $(PMC_DIR) && $(BUILD_DYNPMC) copy --destination=$(PARROT_DYNEXT) $(PMCS)
+
+installable_$(TMPL)@exe@: $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc --install
+
 # regenerate the Makefile
 Makefile: config/makefiles/root.in
-	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=APL
+	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=$(TMPL)
 
 # This is a listing of all targets, that are meant to be called by users
 help:
@@ -77,8 +96,11 @@ help:
 	@echo ""
 	@echo "  all:               APL.pbc"
 	@echo "                     This is the default."
+	@echo "  install:           install the installable targets and docs."
+	@echo ""
 	@echo "Testing:"
 	@echo "  test:              Run the test suite."
+	@echo "  test-installable:  Test self-hosting targets."
 	@echo "  testclean:         Clean up test results."
 	@echo ""
 	@echo "Cleaning:"
@@ -93,6 +115,17 @@ help:
 test: all
 	$(PERL) t/harness
 
+# TODO: test for installed libs, rename build_dir. basic run for missing libs
+test-installable : installable
+	./installable_$(TMPL)@exe@ demo.apl
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(TMPL)@exe@
+	cd $(PMC_DIR) && $(BUILD_DYNPMC) copy "--destination=$(DESTDIR)$(LIB_DIR)/parrot/dynext" $(PMCS)
+	$(POD2MAN) $(TMPL).pir > $(DESTDIR)$(MANDIR)/man1/parrot-$(TMPL).1
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+
 testclean:
 	$(RM_F) t/*.pir
 
@@ -111,6 +144,8 @@ CLEANUPS = \
   $(PMC_DIR)/*.manifest \
   $(PMC_DIR)/*.pdb \
   $(PMC_DIR)/*.lib \
+  $(TMPL)@exe@ \
+  installable_$(TMPL)@exe@ \
 
 
 clean: testclean
@@ -121,4 +156,8 @@ realclean: clean
 
 distclean: realclean
 
-
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/abc/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/abc/config/makefiles/root.in
+++ parrot-svn/languages/abc/config/makefiles/root.in
@@ -1,19 +1,27 @@
-# $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 ## arguments we want to run parrot with
 PARROT_ARGS =
 
 ## configuration settings
+TMPL          = abc
 BUILD_DIR     = @build_dir@
 LOAD_EXT      = @load_ext@
 O             = @o@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
 
 ## Setup some commands
 LN_S          = @lns@
 PERL          = @perl@
 RM_RF         = @rm_rf@
 CP            = @cp@
+MKPATH        = @mkpath@
+POD2MAN       = pod2man
 PARROT        = ../../parrot@exe@
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
@@ -28,28 +36,25 @@ PERL6GRAMMAR  = $(PGE_LIBRARY)/Perl6Gram
 NQP           = $(BUILD_DIR)/compilers/nqp/nqp.pbc
 PCT           = $(BUILD_DIR)/runtime/parrot/library/PCT.pbc
 
-PMC_DIR       = src/pmc
-
 all: abc.pbc
 
-ABC_GROUP = $(PMC_DIR)/abc_group$(LOAD_EXT)
-
 SOURCES = abc.pir \
   src/gen_grammar.pir \
   src/gen_actions.pir \
   src/gen_builtins.pir \
-#  $(ABC_GROUP)
 
 BUILTINS_PIR = \
   src/builtins/all.pir \
 
-# PMCS = abc
-# PMC_SOURCES = $(PMC_DIR)/abc.pmc
+DOCS = MAINTAINER README TODO
 
 # the default target
 abc.pbc: $(PARROT) $(SOURCES)
 	$(PARROT) $(PARROT_ARGS) -o abc.pbc abc.pir
 
+$(TMPL)@exe@: $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc
+
 src/gen_grammar.pir: $(PERL6GRAMMAR) src/parser/grammar.pg src/parser/grammar-oper.pg
 	$(PARROT) $(PARROT_ARGS) $(PERL6GRAMMAR) \
 	    --output=src/gen_grammar.pir \
@@ -63,15 +68,15 @@ src/gen_actions.pir: $(NQP) $(PCT) src/p
 src/gen_builtins.pir: $(BUILTINS_PIR)
 	$(CAT) $(BUILTINS_PIR) >src/gen_builtins.pir
 
-$(ABC_GROUP): $(PARROT) $(PMC_SOURCES)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) generate $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) compile $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) linklibs $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) copy --destination=$(PARROT_DYNEXT) $(PMCS)
+installable : installable_$(TMPL)@exe@
+	$(CP) installable_$(TMPL)@exe@ $(BUILD_DIR)
+
+installable_$(TMPL)@exe@ : $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc --install
 
 # regenerate the Makefile
 Makefile: config/makefiles/root.in
-	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=abc
+	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=$(TMPL)
 
 # This is a listing of all targets, that are meant to be called by users
 help:
@@ -80,8 +85,12 @@ help:
 	@echo ""
 	@echo "  all:               abc.pbc"
 	@echo "                     This is the default."
+	@echo "  installable:       Create self-hosting bins and libs."
+	@echo "  install:           Install the installable targets and docs."
+	@echo ""
 	@echo "Testing:"
 	@echo "  test:              Run the test suite."
+	@echo "  test-installable:  Test self-hosting targets."
 	@echo "  testclean:         Clean up test results."
 	@echo ""
 	@echo "Cleaning:"
@@ -96,6 +105,16 @@ help:
 test: all
 	prove -r t
 
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	echo "2-1" | ./installable_$(TMPL)@exe@
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(TMPL)@exe@
+	$(POD2MAN) $(TMPL).pir > $(DESTDIR)$(MANDIR)/man1/parrot-$(TMPL).1
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+
 testclean:
 	$(RM_RF) "t/*.pir" "t/*.out"
 
@@ -104,17 +123,8 @@ CLEANUPS = \
   src/gen_grammar.pir \
   src/gen_actions.pir \
   src/gen_builtins.pir \
-  $(PMC_DIR)/*.h \
-  $(PMC_DIR)/*.c \
-  $(PMC_DIR)/*.dump \
-  $(PMC_DIR)/*$(O) \
-  $(PMC_DIR)/*$(LOAD_EXT) \
-  $(PMC_DIR)/*.exp \
-  $(PMC_DIR)/*.ilk \
-  $(PMC_DIR)/*.manifest \
-  $(PMC_DIR)/*.pdb \
-  $(PMC_DIR)/*.lib \
-
+  $(TMPL)@exe@ \
+  installable_$(TMPL)@exe@
 
 clean: testclean
 	$(RM_RF) $(CLEANUPS)
@@ -123,3 +133,9 @@ realclean: clean
 	$(RM_RF) Makefile
 
 distclean: realclean
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/befunge/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/befunge/config/makefiles/root.in
+++ parrot-svn/languages/befunge/config/makefiles/root.in
@@ -1,31 +1,49 @@
-# $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 # Makefile for languages/befunge
+TMPL = befunge
+
+## configuration settings
+BUILD_DIR     = @build_dir@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
 
 # Setup of some commands
-PARROT     = ../../parrot
 PERL       = @perl@
 RM_F       = @rm_f@
+PARROT        = ../../parrot
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
+RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
+POD2MAN	      = pod2man
 #CONDITIONED_LINE(darwin):
 #CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
 #CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
+DOCS = MAINTAINER README Changes
+
 default: all
 
 help :
 	@echo ""
 	@echo "Following targets are available for the user:"
 	@echo ""
-	@echo "  build:             Create befunge.pbc"
+	@echo "  all:               befunge.pbc"
 	@echo "                     This is the default."
+	@echo "  install:           Install the installable targets and docs."
 	@echo ""
-	@echo "  test:              run the test suite,"
-	@echo ""
-	@echo "  clean:             clean up temporary files"
+	@echo "Testing:"
+	@echo "  test:              Run the test suite."
+	@echo "  test-installable:  Test self-hosting targets."
+	@echo ""
+	@echo "Cleaning:"
+	@echo "  clean:             Basic cleaning up."
+	@echo "  realclean:         Removes also files generated by 'Configure.pl'"
+	@echo "  distclean:         Removes also anything built, in theory"
 	@echo ""
-	@echo "  realclean:         clean up generated files"
-	@echo ""
-	@echo "  help:              print this help message"
+	@echo "Misc:"
+	@echo "  help:              Print this help message"
 
 
 all: build
@@ -35,14 +53,42 @@ build: befunge.pbc
 befunge.pbc: befunge.pasm debug.pasm flow.pasm io.pasm load.pasm maths.pasm stack.pasm
 	$(PARROT) -o befunge.pbc befunge.pasm
 
+# regenerate the Makefile
+Makefile: config/makefiles/root.in
+	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=$(TMPL)
+
+installable_$(TMPL)@exe@: $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc --install
+
+installable : installable_$(TMPL)@exe@
+	$(CP) installable_$(TMPL)@exe@ $(BUILD_DIR)
+
 test: befunge.pbc
-	cd .. && $(PERL) t/harness --languages=befunge
+	cd .. && $(PERL) t/harness --languages=$(TMPL)
+
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	./installable_$(TMPL)@exe@ test.bef
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(TMPL)@exe@
+	$(POD2MAN) $(TMPL).pir > $(DESTDIR)$(MANDIR)/man1/parrot-$(TMPL).1
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
 
 clean:
 	$(RM_F) core \
     "*.pbc" \
-    "*~"
+    "*~" \
+    "installable_$(TMPL)@exe@"
 
 realclean: clean
 	$(RM_F) Makefile
 
+distclean: clean realclean
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/bf/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/bf/config/makefiles/root.in
+++ parrot-svn/languages/bf/config/makefiles/root.in
@@ -1,32 +1,72 @@
-RM_F = @rm_f@
-PERL = @perl@
-PARROT=../../parrot
+# $Id: root.in 30600 2008-08-27 19:51:44Z moritz $
+TMPL = bf
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR        = @mandir@
+
+RM_F          = @rm_f@
+PERL          = @perl@
+MKPATH        = @mkpath@
+POD2MAN       = pod2man
+PARROT        = ../../parrot@exe@
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
 #CONDITIONED_LINE(darwin):
 #CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
 #CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
-default: build
+DOCS = MAINTAINER README
+
+all : build
 
 help :
 	@echo ""
 	@echo "Following targets are available for the user:"
 	@echo ""
-	@echo "  build:             build bf.pbc and bfc.pir"
+	@echo "  build:             build bf.pbc, bfc.pfc and bfco.pfc"
 	@echo "                     This is the default."
+	@echo "  installable:       Create self-hosting bins and libs."
+	@echo "  install:           Install the installable targets and docs."
 	@echo ""
-	@echo "  test:              run the test suite,"
+	@echo "Testing:"
+	@echo "  test:              Run the test suite."
+	@echo "  test-installable:  Test self-hosting targets."
+	@echo "  testclean:         Clean up test results."
 	@echo ""
-	@echo "  clean:             clean up temporary files"
+	@echo "Cleaning:"
+	@echo "  clean:             Basic cleaning up."
+	@echo "  realclean:         Removes also files generated by 'Configure.pl'"
+	@echo "  distclean:         Removes also anything built, in theory"
 	@echo ""
-	@echo "  realclean:         clean up generated files"
+	@echo "Misc:"
+	@echo "  help:              Print this help message."
 	@echo ""
-	@echo "  help:              print this help message"
 
-test: build
+test : build
 	$(PERL) -Ilib -I../../lib t/harness
 
 build: bf.pbc bfc.pbc bfco.pbc
 
+installable: installable_bf@exe@ installable_bfc@exe@ installable_bfco@exe@
+
+bf@exe@: bf.pbc
+	$(PBC_TO_EXE) bf.pbc
+
+bfc@exe@: bfc.pbc
+	$(PBC_TO_EXE) bfc.pbc
+
+bfco@exe@: bfco.pbc
+	$(PBC_TO_EXE) bfco.pbc
+
+installable_bf@exe@: bf.pbc
+	$(PBC_TO_EXE) bf.pbc --install
+
+installable_bfc@exe@: bfc.pbc
+	$(PBC_TO_EXE) bfc.pbc --install
+
+installable_bfco@exe@: bfco.pbc
+	$(PBC_TO_EXE) bfco.pbc --install
+
 bf.pbc: bf.pasm
 	$(PARROT) -o bf.pbc bf.pasm
 
@@ -36,9 +76,27 @@ bfc.pbc: bfc.pir
 bfco.pbc: bfco.pir
 	$(PARROT) -o bfco.pbc bfco.pir
 
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	./installable_bf@exe@ test.bf
+	./installable_bfc@exe@ test.bf
+	./installable_bfco@exe@ test.bf
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(TMPL)@exe@
+	$(CP) installable_bfc@exe@ $(DESTDIR)$(BIN_DIR)/parrot-bfc@exe@
+	$(CP) installable_bfco@exe@ $(DESTDIR)$(BIN_DIR)/parrot-bfco@exe@
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+
 clean:
 	$(RM_F) core "*.pbc" "*~"
 
 realclean: clean
 	$(RM_F) Makefile
 
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/c99/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/c99/config/makefiles/root.in
+++ parrot-svn/languages/c99/config/makefiles/root.in
@@ -1,22 +1,31 @@
-## $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+## $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 ## arguments we want to run parrot with
 PARROT_ARGS =
 
 ## configuration settings
+TMPL	      = c99
 BUILD_DIR     = @build_dir@
 LOAD_EXT      = @load_ext@
 O             = @o@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
 
 ## Setup some commands
 LN_S          = @lns@
 PERL          = @perl@
 RM_RF         = @rm_rf@
 CP            = @cp@
-PARROT        = ../../parrot@exe@
+MKPATH        = @mkpath@
+POD2MAN       = pod2man
+PARROT        = $(BUILD_DIR)/parrot@exe@
+PBC_TO_EXE    = $(BUILD_DIR)/pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
+POD2MAN       = pod2man
 #CONDITIONED_LINE(darwin):
 #CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
 #CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
@@ -29,28 +38,39 @@ NQP           = $(BUILD_DIR)/compilers/n
 PCT           = $(BUILD_DIR)/runtime/parrot/library/PCT.pbc
 
 PMC_DIR       = src/pmc
+DOCS = MAINTAINER
 
-all: c99.pbc
+all: c99.pbc src/cpp/cpp.pbc
 
 C_GROUP = $(PMC_DIR)/c_group$(LOAD_EXT)
 
 SOURCES = c99.pir \
   src/gen_grammar.pir \
   src/gen_actions.pir \
-  src/gen_builtins.pir \
-#  $(C_GROUP)
+  src/gen_builtins.pir
 
 BUILTINS_PIR = \
   src/builtins/say.pir \
 
-# PMCS = c
-# PMC_SOURCES = $(PMC_DIR)/c.pmc
-
 # the default target
 c99.pbc: $(PARROT) $(SOURCES)
 	$(PARROT) $(PARROT_ARGS) -o c99.pbc c99.pir
 	cd src/cpp; $(MAKE)
 
+c99@exe@: c99.pbc
+	$(PBC_TO_EXE) c99.pbc
+
+installable : installable_c99@exe@ installable_cpp@exe@
+	$(CP) installable_c99@exe@ $(BUILD_DIR)
+	$(CP) installable_cpp@exe@ $(BUILD_DIR)
+
+installable_c99@exe@ : c99.pbc
+	$(PBC_TO_EXE) c99.pbc --install
+
+installable_cpp@exe@ : src/cpp/cpp.pbc
+	make installable_cpp@exe@ -C src/cpp
+	mv src/cpp/installable_cpp@exe@ installable_cpp@exe@
+
 src/gen_grammar.pir: $(PERL6GRAMMAR) src/parser/grammar.pg
 	$(PARROT) $(PARROT_ARGS) $(PERL6GRAMMAR) \
 	    --output=src/gen_grammar.pir \
@@ -63,15 +83,9 @@ src/gen_actions.pir: $(NQP) $(PCT) src/p
 src/gen_builtins.pir: $(BUILTINS_PIR)
 	$(CAT) $(BUILTINS_PIR) >src/gen_builtins.pir
 
-$(C_GROUP): $(PARROT) $(PMC_SOURCES)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) generate $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) compile $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) linklibs $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) copy --destination=$(PARROT_DYNEXT) $(PMCS)
-
 # regenerate the Makefile
 Makefile: config/makefiles/root.in
-	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=c
+	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=c99
 
 # This is a listing of all targets, that are meant to be called by users
 help:
@@ -80,6 +94,9 @@ help:
 	@echo ""
 	@echo "  all:               c.pbc"
 	@echo "                     This is the default."
+	@echo "  installable:       Create self-hosting bins and libs."
+	@echo "  install:           Install the installable targets and docs."
+	@echo ""
 	@echo "Testing:"
 	@echo "  test:              Run the test suite."
 	@echo "  testclean:         Clean up test results."
@@ -96,6 +113,19 @@ help:
 test: all
 	$(PERL) t/harness
 
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	./installable_$(TMPL)@exe@ t/spi.t
+	./installable_cpp@exe@ t/spi.t
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(TMPL)@exe@
+	$(CP) installable_cpp@exe@ $(DESTDIR)$(BIN_DIR)/parrot-cpp@exe@
+	$(POD2MAN) $(TMPL).pir > $(DESTDIR)$(MANDIR)/man1/parrot-$(TMPL).1
+	$(POD2MAN) src/cpp/cpp.pir > $(DESTDIR)$(MANDIR)/man1/parrot-cpp.1
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+
 # this target has nothing to do
 testclean:
 
@@ -104,21 +134,11 @@ CLEANUPS = \
   src/gen_grammar.pir \
   src/gen_actions.pir \
   src/gen_builtins.pir \
-  $(PMC_DIR)/*.h \
-  $(PMC_DIR)/*.c \
-  $(PMC_DIR)/*.dump \
-  $(PMC_DIR)/*$(O) \
-  $(PMC_DIR)/*$(LOAD_EXT) \
-  $(PMC_DIR)/*.exp \
-  $(PMC_DIR)/*.ilk \
-  $(PMC_DIR)/*.manifest \
-  $(PMC_DIR)/*.pdb \
-  $(PMC_DIR)/*.lib \
   src/cpp/cpp.pbc \
   src/cpp/src/gen_actions.pir \
   src/cpp/src/gen_grammar.pir \
-  src/cpp/src/gen_builtins.pir
-
+  src/cpp/src/gen_builtins.pir \
+  installable_*@exe@
 
 clean:
 	$(RM_RF) $(CLEANUPS)
@@ -128,4 +148,8 @@ realclean: clean
 
 distclean: realclean
 
-
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/cardinal/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/cardinal/config/makefiles/root.in
+++ parrot-svn/languages/cardinal/config/makefiles/root.in
@@ -1,19 +1,27 @@
-## $Id: root.in 30595 2008-08-27 15:42:38Z tene $
+## $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 ## arguments we want to run parrot with
 PARROT_ARGS =
 
 ## configuration settings
+TMPL          = cardinal
 BUILD_DIR     = @build_dir@
 LOAD_EXT      = @load_ext@
 O             = @o@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
 
 ## Setup some commands
 LN_S          = @lns@
 PERL          = @perl@
 RM_RF         = @rm_rf@
 CP            = @cp@
+MKPATH        = @mkpath@
+POD2MAN       = pod2man
 PARROT        = ../../parrot@exe@
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
@@ -37,8 +45,7 @@ CARDINAL_GROUP = $(PMC_DIR)/cardinal_gro
 SOURCES = cardinal.pir \
   src/gen_grammar.pir \
   src/gen_actions.pir \
-  src/gen_builtins.pir \
-#  $(CARDINAL_GROUP)
+  src/gen_builtins.pir
 
 BUILTINS_PIR = \
   src/builtins/guts.pir \
@@ -51,13 +58,18 @@ BUILTINS_PIR = \
   src/classes/Array.pir \
   src/classes/Hash.pir \
 
-# PMCS = cardinal
-# PMC_SOURCES = $(PMC_DIR)/cardinal.pmc
+DOCS          = README
 
 # the default target
 cardinal.pbc: $(PARROT) $(SOURCES)
 	$(PARROT) $(PARROT_ARGS) -o cardinal.pbc cardinal.pir
 
+cardinal@exe@: cardinal.pbc
+	$(PBC_TO_EXE) cardinal.pbc
+
+installable_cardinal@exe@: cardinal.pbc
+	$(PBC_TO_EXE) cardinal.pbc --install
+
 src/gen_grammar.pir: $(PERL6GRAMMAR) src/parser/grammar.pg
 	$(PARROT) $(PARROT_ARGS) $(PERL6GRAMMAR) \
 	    --output=src/gen_grammar.pir \
@@ -70,15 +82,12 @@ src/gen_actions.pir: $(NQP) $(PCT) src/p
 src/gen_builtins.pir: $(BUILTINS_PIR)
 	$(CAT) $(BUILTINS_PIR) >src/gen_builtins.pir
 
-$(CARDINAL_GROUP): $(PARROT) $(PMC_SOURCES)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) generate $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) compile $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) linklibs $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) copy --destination=$(PARROT_DYNEXT) $(PMCS)
-
 # regenerate the Makefile
 Makefile: config/makefiles/root.in
-	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=cardinal
+	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=$(TMPL)
+
+installable : installable_$(TMPL)@exe@
+	$(CP) installable_$(TMPL)@exe@ $(BUILD_DIR)
 
 # This is a listing of all targets, that are meant to be called by users
 help:
@@ -87,8 +96,12 @@ help:
 	@echo ""
 	@echo "  all:               cardinal.pbc"
 	@echo "                     This is the default."
+	@echo "  installable:       Create self-hosting bins and libs."
+	@echo "  install:           Install the installable targets and docs."
+	@echo ""
 	@echo "Testing:"
 	@echo "  test:              Run the test suite."
+	@echo "  test-installable:  Test self-hosting targets."
 	@echo "  testclean:         Clean up test results."
 	@echo ""
 	@echo "Cleaning:"
@@ -106,8 +119,20 @@ test: all
 # this target has nothing to do
 testclean:
 
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	./installable_$(TMPL)@exe@ t/00-sanity.t
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(TMPL)@exe@
+	$(POD2MAN) $(TMPL).pir > $(DESTDIR)$(MANDIR)/man1/parrot-$(TMPL).1
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+
 CLEANUPS = \
   cardinal.pbc \
+  cardinal@exe@ \
+  installable_cardinal@exe@ \
   src/gen_grammar.pir \
   src/gen_actions.pir \
   src/gen_builtins.pir \
@@ -131,4 +156,8 @@ realclean: clean
 
 distclean: realclean
 
-
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/dotnet/config/Makefile.in
===================================================================
--- parrot-svn.orig/languages/dotnet/config/Makefile.in
+++ parrot-svn/languages/dotnet/config/Makefile.in
@@ -16,9 +16,10 @@ RM_F     = ${rm_f}
 PARROT   = ${trans_parrot_path}${slash}parrot${exe}
 MONOLIB  = ${trans_mono_lib_path}
 PBCMERGE = ${trans_parrot_path}${slash}pbc_merge${exe}
+PBC_TO_EXE = ${trans_parrot_path}${slash}pbc_to_exe.exe
 PMCBUILD = $(PERL) ${build_dir}${slash}tools${slash}build${slash}dynpmc.pl
 OPSBUILD = $(PERL) ${build_dir}${slash}tools${slash}build${slash}dynoplibs.pl
-DESTDIR  = ${build_dir}${slash}runtime${slash}parrot${slash}dynext
+PARROT_DYNEXT  = ${build_dir}${slash}runtime${slash}parrot${slash}dynext
 #CONDITIONED_LINE(darwin):
 #CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
 #CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
@@ -33,6 +34,10 @@ A        = ${a}
 
 # DIRECTORIES AND FILES
 # #####################
+BIN_DIR   = @bin_dir@
+LIB_DIR   = @lib_dir@
+DOC_DIR   = @doc_dir@
+MANDIR	  = @mandir@
 PMCDIR    = pmc
 PMCS      = dotnetassembly dotnetclassmetadata dotnetmethodmetadata \
             dotnetfieldmetadata dotnetparammetadata dotnetsignature \
@@ -60,17 +65,19 @@ TRAN_PBC  = src/translator.pbc src/metho
 all : pmc/dotnet$(LOAD_EXT) ops/dotnet_ops$(LOAD_EXT) src/it.pbc \
       src/builtins.pbc src/translib.pbc net2pbc.pbc
 
+installable : net2pbc.pbc installable_net2pbc$exe
+
 pmc/dotnet$(LOAD_EXT) : $(PMC_FILES) pmc/structures.h pmc/tableinfo.h
 	@cd $(PMCDIR) && $(PMCBUILD) generate $(PMCS)
 	@cd $(PMCDIR) && $(PMCBUILD) compile $(PMCS)
 	@cd $(PMCDIR) && $(PMCBUILD) linklibs $(PMCS)
-	@cd $(PMCDIR) && $(PMCBUILD) copy "--destination=$(DESTDIR)" $(PMCS)
+	@cd $(PMCDIR) && $(PMCBUILD) copy "--destination=$(PARROT_DYNEXT)" $(PMCS)
 
 ops/dotnet_ops$(LOAD_EXT) : $(OPS_FILES)
 	@cd $(OPSDIR) && $(OPSBUILD) generate $(OPSLIB)
 	@cd $(OPSDIR) && $(OPSBUILD) compile $(OPSLIB)
 	@cd $(OPSDIR) && $(OPSBUILD) linklibs $(OPSLIB)
-	@cd $(OPSDIR) && $(OPSBUILD) copy "--destination=$(DESTDIR)" $(OPSLIB)
+	@cd $(OPSDIR) && $(OPSBUILD) copy "--destination=$(PARROT_DYNEXT)" $(OPSLIB)
 
 src/it.pbc : src/translation.rules build/translator.pl build/SRM/Stack.pm \
              build/SRM/Register.pm build/SRM/OptRegister.pm
@@ -91,7 +98,17 @@ net2pbc.pbc : pmc/dotnet$(LOAD_EXT) src/
 	$(PBCMERGE) -o net2pbc.pbc src/net2pbc.pbc src/translib.pbc
 
 class-library : net2pbc.pbc
-${trans_class_library}
+	${trans_class_library}
+
+# regenerate the Makefile
+Makefile: config/Makefile.in
+	$(PERL) Configure.pl
+
+net2pbc$exe : net2pbc.pbc
+	$(PBC_TO_EXE) net2pbc.pbc
+
+installable_net2pbc$exe : net2pbc.pbc
+	$(PBC_TO_EXE) net2pbc.pbc --install
 
 
 # PER FILE RULES AND DEPENDENCIES
@@ -133,6 +150,20 @@ src/build/SRM/Stack.pm :
 test : all
 	$(PERL) -It t/harness
 
+# TODO: rename build_dir. basic run for missing libs
+installable_test : installable
+	./installable_net2pbc$exe
+
+install : all installable
+	cp installable_net2pbc$exe $(DESTDIR)$(BIN_DIR)/parrot-net2pbc@exe@
+	@cd $(PMCDIR) && $(PMCBUILD) copy "--destination=$(DESTDIR)$(LIB_DIR)/parrot/dynext" $(OPLIBS)
+	@cd $(PMCDIR) && $(PMCBUILD) copy "--destination=$(DESTDIR)$(LIB_DIR)/parrot/dynext" $(PMCS)
+	pod2man doc/running.pod > $(DESTDIR)$(MANDIR)/man1/parrot-net2pbc.1
+	mkdir $(DESTDIR)$(DOC_DIR)/languages/$(LANG)
+	cp $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(LANG)
+	cp doc/*.pod $(DESTDIR)$(DOC_DIR)/languages/$(LANG)
+	mkdir $(DESTDIR)$(DOC_DIR)/languages/$(LANG)/constructs
+	cp doc/constructs/.pod $(DESTDIR)$(DOC_DIR)/languages/$(LANG)/constructs
 
 # CLEANUP TARGETS
 # ###############
Index: parrot-svn/languages/lua/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/lua/config/makefiles/root.in
+++ parrot-svn/languages/lua/config/makefiles/root.in
@@ -1,7 +1,8 @@
 # Copyright (C) 2005-2008, The Perl Foundation.
-# $Id: root.in 30251 2008-08-15 14:04:45Z fperrad $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 ## configuration settings
+TMPL     = lua
 O        = @o@
 LOAD_EXT = @load_ext@
 
@@ -10,10 +11,10 @@ MAKE    = @make_c@
 RM_F    = @rm_f@
 PERL    = @perl@
 PARROT  = ../../parrot@exe@
-PBC_MERGE = ../../pbc_merge@exe@
-PGE      = $(PARROT) ../../runtime/parrot/library/PGE/Perl6Grammar.pir
-TGE      = $(PARROT) ../../compilers/tge/tgc.pir
-PBC_TO_EXE = ../../pbc_to_exe@exe@
+PBC_MERGE   = ../../pbc_merge@exe@
+PBC_TO_EXE  = ../../pbc_to_exe@exe@
+PGE         = $(PARROT) ../../runtime/parrot/library/PGE/Perl6Grammar.pir
+TGE         = $(PARROT) ../../compilers/tge/tgc.pir
 RECONFIGURE = $(PERL) @build_dir@/tools/dev/reconfigure.pl
 PMCBUILD = $(PERL) @build_dir@/tools/build/dynpmc.pl
 #CONDITIONED_LINE(darwin):
@@ -21,9 +22,15 @@ PMCBUILD = $(PERL) @build_dir@/tools/bui
 #CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 ## places to look for things
-LIBPATH  = src/lib
-PMCDIR   = src/pmc
+LIBPATH       = src/lib
+PMCDIR        = src/pmc
 PARROT_DYNEXT = @build_dir@/runtime/parrot/dynext
+BUILD_DIR     = @build_dir@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
+
 
 PMCS = \
  lua \
@@ -96,6 +103,8 @@ GEN_PIR = \
 GEN_PBC = \
  lua.pbc
 
+DOCS = MAINTAINER doc/running.pod doc/status.pod
+
 all: \
  $(PMCDIR)/lua_group$(LOAD_EXT) \
  $(LIB_PBCS) \
@@ -117,6 +126,16 @@ all: \
  $(GEN_PBC) \
  src/yapp/Lua/parser.pm
 
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	echo "a=1" | ./installable_$(TMPL)@exe@
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(TMPL)@exe@
+	@cd $(PMCDIR) && $(PMCBUILD) copy "--destination=$(DESTDIR)$(LIB_DIR)/parrot/dynext" $(PMCS)
+	$(POD2MAN) doc/running.pod > $(DESTDIR)$(MANDIR)/man1/parrot-$(TMPL).1
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
 
 src/lua51_testlex_gen.pir: src/lua51_testlex.pg
 	$(PGE) --output=src/lua51_testlex_gen.pir src/lua51_testlex.pg
@@ -134,11 +153,17 @@ src/POSTGrammar_gen.pir: src/POSTGrammar
 	$(TGE) --output=src/POSTGrammar_gen.pir src/POSTGrammar.tg
 
 lua.pbc: lua.pir src/lua51.pir src/grammar51.pir src/lua51_gen.pir src/PASTGrammar_gen.pir src/POSTGrammar_gen.pir $(LIB_SRCS)
-	$(PARROT) -o lua.pbc --output-pbc lua.pir
+	$(PARROT) -o lua_i.pbc --output-pbc lua.pir
+	$(PBC_MERGE) -o lua.pbc lua_i.pbc ../../compilers/tge/TGE/Rule.pbc
 
 lua@exe@: lua.pbc
 	$(PBC_TO_EXE) lua.pbc
 
+installable_lua@exe@: lua.pbc
+	$(PBC_TO_EXE) lua.pbc --install
+
+installable: installable_lua@exe@ $(PMCDIR)/lua_group$(LOAD_EXT)
+
 $(LIBPATH)/lualibs.pbc: $(LIB_PBCS)
 	$(PBC_MERGE) -o $(LIBPATH)/lualibs.pbc $(LIB_PBCS)
 
@@ -241,7 +266,7 @@ src/yapp/Lua/parser.pm: src/yapp/Lua/lua
 
 # regenerate the Makefile
 Makefile: config/makefiles/root.in
-	cd ../.. && $(RECONFIGURE) --step=gen::languages --languages=lua
+	cd ../.. && $(RECONFIGURE) --step=gen::languages --languages=$(TMPL)
 
 help:
 	@echo ""
@@ -249,8 +274,12 @@ help:
 	@echo ""
 	@echo "  all:"
 	@echo "                     This is the default."
+	@echo "  installable:       Create self-hosting binaries."
+	@echo "  install:           Install the installable targets and docs."
+	@echo ""
 	@echo "Testing:"
 	@echo "  test:              Run the test suite."
+	@echo "  test-installable:  Test self-hosting targets."
 	@echo "  testclean:         Clean up test results."
 	@echo ""
 	@echo "Cleaning:"
@@ -265,7 +294,6 @@ help:
 test: all
 	cd .. && $(PERL) t/harness --languages=lua
 
-
 TEST_CLEANERS = \
  "t/pmc/*.pir" \
  "t/*.pir" \
@@ -279,6 +307,7 @@ testclean:
 
 BUILD_CLEANERS = \
  lua@exe@ \
+ installable_lua@exe@ \
  lua$(O) \
  lua.c \
  "*.pbc" \
@@ -289,7 +318,8 @@ BUILD_CLEANERS = \
  "$(PMCDIR)/*_group.h" \
  "$(PMCDIR)/*$(LOAD_EXT)" \
  "$(PMCDIR)/*$(O)" \
- "$(LIBPATH)/*.pbc"
+ "$(LIBPATH)/*.pbc" \
+ installable_$(TMPL)@exe@ \
 
 clean:
 	$(RM_F) $(BUILD_CLEANERS) $(TEST_CLEANERS)
@@ -298,3 +328,9 @@ realclean: clean
 	$(RM_F) Makefile
 
 distclean: realclean
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/perl6/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/perl6/config/makefiles/root.in
+++ parrot-svn/languages/perl6/config/makefiles/root.in
@@ -1,4 +1,4 @@
-# $Id: root.in 30371 2008-08-20 06:01:43Z pmichaud $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 # arguments we want to run parrot with
 PARROT_ARGS =
@@ -14,8 +14,13 @@ PMC_DIR       = src/pmc
 OPSDIR        = src/ops
 OPSLIB        = perl6
 OPS_FILE      = src/ops/perl6.ops
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
 
 # Set up extensions
+TMPL          = perl6
 LOAD_EXT      = @load_ext@
 O             = @o@
 EXE           = @exe@
@@ -25,16 +30,19 @@ MAKE          = @make_c@
 PERL          = @perl@
 RM_F          = @rm_f@
 PARROT        = ../../parrot$(EXE)
+PBC_TO_EXE    = $(BUILD_DIR)/pbc_to_exe$(EXE)
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 BUILD_DYNOPS  = $(PERL) $(BUILD_DIR)/tools/build/dynoplibs.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
-PBC_TO_EXE    = $(BUILD_DIR)/pbc_to_exe$(EXE)
 #CONDITIONED_LINE(darwin):
 #CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
 #CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
+DOCS = README MAINTAINER ROADMAP docs/compiler_overview.pod docs/glossary.pod docs/STATUS
+
+build: perl6.pbc Test.pir
 
-all: perl6.pbc Test.pir
+all: build perl6$(EXE) installable
 
 xmas: perl6$(EXE)
 
@@ -106,6 +114,7 @@ PMCS        = perl6str mutable perl6scal
 PMC_SOURCES = $(PMC_DIR)/perl6str.pmc $(PMC_DIR)/mutable.pmc $(PMC_DIR)/perl6scalar.pmc \
               $(PMC_DIR)/mutablevar.pmc $(PMC_DIR)/perl6multisub.pmc
 PERL6_GROUP = $(PMC_DIR)/perl6_group$(LOAD_EXT)
+DOCS = README MAINTAINER ROADMAP docs/compiler_overview.pod docs/glossary.pod docs/STATUS
 
 # targets for building a standalone perl6.
 # (We're not quite ready to make this a default target.)
@@ -122,6 +131,9 @@ installable_perl6$(EXE): perl6.pbc
 Test.pir: Test.pm perl6.pbc
 	$(PARROT) $(PARROT_ARGS) perl6.pbc --target=pir --output=Test.pir Test.pm
 
+$(PERL6GRAMMAR): $(PGE_LIBRARY)/Perl6Grammar.pir
+	cd $(BUILD_DIR) && $(PARROT) $(PARROT_ARGS) -o $(PERL6GRAMMAR) $(PGE_LIBRARY)/Perl6Grammar.pir
+
 src/gen_grammar.pir: $(PERL6GRAMMAR) src/parser/grammar.pg src/parser/grammar-oper.pg
 	$(PARROT) $(PARROT_ARGS) $(PERL6GRAMMAR) \
 	    --output=src/gen_grammar.pir \
@@ -159,6 +171,8 @@ help:
 	@echo "                     This is the default."
 	@echo "  perl6$(EXE):       Some want a pony, others are satisfied with an executable."
 	@echo "  xmas:              Christmas is when Perl 6 is released. Alias of perl6$(EXE)."
+	@echo "  installable:       Create self-hosting binaries."
+	@echo "  install:           Install the installable targets and docs."
 	@echo ""
 	@echo "Testing:"
 	@echo "  test:              Run coretest and codetest."
@@ -169,6 +183,7 @@ help:
 	@echo "  spectest_regression:  Run the tests of the official test suite that are known to pass."
 	@echo "  localtest:         Run the official tests given in t/localtest.data."
 	@echo "  fulltest:          Run coretest, spectest_regression, and codetest."
+	@echo "  test-installable:  Test self-hosting targets."
 	@echo ""
 	@echo "Cleaning:"
 	@echo "  clean:             Basic cleaning up."
@@ -232,6 +247,23 @@ t/localtest.data:
 t/spec:
 	svn co http:////svn.pugscode.org//pugs//t//spec t/spec
 
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	./installable_$(TMPL)@exe@ -e'say 1'
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/perl6@exe@
+	@cd $(PMC_DIR) && $(BUILD_DYNPMC) copy "--destination=$(DESTDIR)$(LIB_DIR)/parrot/dynext" $(PMCS)
+	@cd $(OPSDIR)  && $(BUILD_DYNOPS) copy "--destination=$(DESTDIR)$(LIB_DIR)/parrot/dynext" $(OPSLIB)
+	$(POD2MAN) doc/running.pod > $(DESTDIR)$(MANDIR)/man1/perl6.1
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+
+installable : installable_$(TMPL)@exe@ $(PERL6_GROUP)
+	$(CP) installable_$(TMPL)@exe@ $(BUILD_DIR)
+	@cd $(PMC_DIR) && $(BUILD_DYNPMC) copy "--destination=$(PARROT_DYNEXT)" $(PMCS)
+	@cd $(OPSDIR)  && $(BUILD_DYNOPS) copy "--destination=$(PARROT_DYNEXT)" $(OPSLIB)
+
 CLEANUPS = \
   perl6.pbc \
   perl6.c \
@@ -265,3 +297,9 @@ realclean: clean
 	$(RM_F) src/utils/Makefile Makefile
 
 distclean: realclean
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/perl6/docs/running.pod
===================================================================
--- /dev/null
+++ parrot-svn/languages/perl6/docs/running.pod
@@ -0,0 +1,15 @@
+=head1 NAME
+
+perl6
+
+=head1 SYNOPSIS
+
+Usage: perl6 [switches] [--] [programfile] [arguments]
+  -c                   check syntax only (runs BEGIN and CHECK blocks)
+  -e program           one line of program
+  -h, --help           display this help text
+  --target=[stage]     specify compilation stage to emit
+  -t, --trace=[flags]  enable trace flags
+  --encoding=[mode]    specify string encoding mode
+  -o, --output=[name]  specify name of output file
+  -v, --version        display version information
Index: parrot-svn/tools/dev/mk_language_shell.pl
===================================================================
--- parrot-svn.orig/tools/dev/mk_language_shell.pl
+++ parrot-svn/tools/dev/mk_language_shell.pl
@@ -142,9 +142,14 @@ __config/makefiles/root.in__
 PARROT_ARGS =
 
 ## configuration settings
+LANG          = @lang@
 BUILD_DIR     = @build_dir@
 LOAD_EXT      = @load_ext@
 O             = @o@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
 
 ## Setup some commands
 LN_S          = @lns@
@@ -153,8 +158,10 @@ RM_RF         = @rm_rf@
 CP            = @cp@
 PARROT        = ../../parrot@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
+POD2MAN	      = pod2man
 #CONDITIONED_LINE(darwin):
 #CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
 #CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
@@ -183,6 +190,7 @@ BUILTINS_PIR = \
 
 # PMCS = @lclang@
 # PMC_SOURCES = $(PMC_DIR)/@lclang@.pmc
+DOCS = MAINTAINER README TODO
 
 # the default target
 @lclang@.pbc: $(PARROT) $(SOURCES)
@@ -207,9 +215,16 @@ $(@UCLANG@_GROUP): $(PARROT) $(PMC_SOURC
 	cd $(PMC_DIR) && $(BUILD_DYNPMC) linklibs $(PMCS)
 	cd $(PMC_DIR) && $(BUILD_DYNPMC) copy --destination=$(PARROT_DYNEXT) $(PMCS)
 
+installable : installable_$(LANG)@exe@ $(@UCLANG@_GROUP)
+	cp installable_$(LANG)@exe@ $(BUILD_DIR)
+	cd $(PMC_DIR) && $(BUILD_DYNPMC) copy --destination=$(PARROT_DYNEXT) $(PMCS)
+
+installable_$(LANG)@exe@ : $(LANG).pbc
+	$(PBC_TO_EXE) $(LANG).pbc --install
+
 # regenerate the Makefile
 Makefile: config/makefiles/root.in
-	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=@lclang@
+	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=$(LANG)
 
 # This is a listing of all targets, that are meant to be called by users
 help:
@@ -218,8 +233,12 @@ help:
 	@echo ""
 	@echo "  all:               @lclang@.pbc"
 	@echo "                     This is the default."
+	@echo "  installable:       Create self-hosting binaries."
+	@echo "  install:           Install the installable targets and docs."
+	@echo ""
 	@echo "Testing:"
 	@echo "  test:              Run the test suite."
+	@echo "  test-installable:  Test self-hosting targets."
 	@echo "  testclean:         Clean up test results."
 	@echo ""
 	@echo "Cleaning:"
@@ -234,6 +253,16 @@ help:
 test: all
 	$(PERL) t/harness
 
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	echo "1" | ./installable_$(LANG)@exe@
+
+install : installable
+	cp installable_$(LANG)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(LANG)@exe@
+	$(POD2MAN) $(LANG).pir > $(DESTDIR)$(MANDIR)/man1/parrot-$(LANG).1
+	mkdir $(DESTDIR)$(DOC_DIR)/languages/$(LANG)
+	cp $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(LANG)
+
 # this target has nothing to do
 testclean:
 
@@ -252,6 +281,8 @@ CLEANUPS = \
   $(PMC_DIR)/*.manifest \
   $(PMC_DIR)/*.pdb \
   $(PMC_DIR)/*.lib \
+  $(LANG)@exe@ \
+  installable_$(LANG)@exe@ \
 
 
 clean: testclean
Index: parrot-svn/languages/cardinal/README
===================================================================
--- /dev/null
+++ parrot-svn/languages/cardinal/README
@@ -0,0 +1,4 @@
+Cardinal - Ruby for the Parrot VM
+
+Parser from
+http://www.math.hokudai.ac.jp/~gotoken/ruby/man/yacc.html
\ No newline at end of file
Index: parrot-svn/languages/chitchat/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/chitchat/config/makefiles/root.in
+++ parrot-svn/languages/chitchat/config/makefiles/root.in
@@ -1,19 +1,27 @@
-## $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+## $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 ## arguments we want to run parrot with
 PARROT_ARGS =
 
 ## configuration settings
+TMPL          = chitchat
 BUILD_DIR     = @build_dir@
 LOAD_EXT      = @load_ext@
 O             = @o@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
 
 ## Setup some commands
 LN_S          = @lns@
 PERL          = @perl@
 RM_RF         = @rm_rf@
 CP            = @cp@
+MKPATH        = @mkpath@
+POD2MAN       = pod2man
 PARROT        = ../../parrot@exe@
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
@@ -28,24 +36,18 @@ PERL6GRAMMAR  = $(PGE_LIBRARY)/Perl6Gram
 NQP           = $(BUILD_DIR)/compilers/nqp/nqp.pbc
 PCT           = $(BUILD_DIR)/runtime/parrot/library/PCT.pbc
 
-PMC_DIR       = src/pmc
+DOCS = MAINTAINER
 
 all: chitchat.pbc
 
-CHITCHAT_GROUP = $(PMC_DIR)/chitchat_group$(LOAD_EXT)
-
 SOURCES = chitchat.pir \
   src/gen_grammar.pir \
   src/gen_actions.pir \
   src/gen_builtins.pir \
-#  $(CHITCHAT_GROUP)
 
 BUILTINS_PIR = \
   src/builtins/say.pir \
 
-# PMCS = chitchat
-# PMC_SOURCES = $(PMC_DIR)/chitchat.pmc
-
 # the default target
 chitchat.pbc: $(PARROT) $(SOURCES)
 	$(PARROT) $(PARROT_ARGS) -o chitchat.pbc chitchat.pir
@@ -62,15 +64,9 @@ src/gen_actions.pir: $(NQP) $(PCT) src/p
 src/gen_builtins.pir: $(BUILTINS_PIR)
 	$(CAT) $(BUILTINS_PIR) >src/gen_builtins.pir
 
-$(CHITCHAT_GROUP): $(PARROT) $(PMC_SOURCES)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) generate $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) compile $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) linklibs $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) copy --destination=$(PARROT_DYNEXT) $(PMCS)
-
 # regenerate the Makefile
 Makefile: config/makefiles/root.in
-	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=chitchat
+	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=$(TMPL)
 
 # This is a listing of all targets, that are meant to be called by users
 help:
@@ -79,8 +75,12 @@ help:
 	@echo ""
 	@echo "  all:               chitchat.pbc"
 	@echo "                     This is the default."
+	@echo "  installable:       Create self-hosting bins and libs."
+	@echo "  install:           Install the installable targets and docs."
+	@echo ""
 	@echo "Testing:"
 	@echo "  test:              Run the test suite."
+	@echo "  test-installable:  Test self-hosting targets."
 	@echo "  testclean:         Clean up test results."
 	@echo ""
 	@echo "Cleaning:"
@@ -95,6 +95,25 @@ help:
 test: all
 	$(PERL) t/harness
 
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	echo "2-1" | ./installable_$(TMPL)@exe@
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(TMPL)@exe@
+	$(POD2MAN) $(TMPL).pir > $(DESTDIR)$(MANDIR)/man1/parrot-$(TMPL).1
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+
+$(TMPL)@exe@: $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc
+
+installable : installable_$(TMPL)@exe@
+	$(CP) installable_$(TMPL)@exe@ $(BUILD_DIR)
+
+installable_$(TMPL)@exe@ : $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc --install
+
 # this target has nothing to do
 testclean:
 
@@ -103,17 +122,8 @@ CLEANUPS = \
   src/gen_grammar.pir \
   src/gen_actions.pir \
   src/gen_builtins.pir \
-  $(PMC_DIR)/*.h \
-  $(PMC_DIR)/*.c \
-  $(PMC_DIR)/*.dump \
-  $(PMC_DIR)/*$(O) \
-  $(PMC_DIR)/*$(LOAD_EXT) \
-  $(PMC_DIR)/*.exp \
-  $(PMC_DIR)/*.ilk \
-  $(PMC_DIR)/*.manifest \
-  $(PMC_DIR)/*.pdb \
-  $(PMC_DIR)/*.lib \
-
+  $(TMPL)@exe@ \
+  installable_$(TMPL)@exe@ \
 
 clean:
 	$(RM_RF) $(CLEANUPS)
@@ -123,4 +133,8 @@ realclean: clean
 
 distclean: realclean
 
-
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/cola/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/cola/config/makefiles/root.in
+++ parrot-svn/languages/cola/config/makefiles/root.in
@@ -1,7 +1,17 @@
-# $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 # Makefile for languages/cola
 
+## configuration settings
+TMPL          = cola
+BUILD_DIR     = @build_dir@
+O             = @o@
+EXE           = @exe@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
+
 # Set up commands
 PERL          = @perl@
 RM_F          = @rm_f@
@@ -11,17 +21,11 @@ DEBUG         = @cc_debug@
 YACC          = @yacc@
 LEX           = @lex@
 RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
+POD2MAN	      = pod2man
 #CONDITIONED_LINE(darwin):
 #CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
 #CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
-# Set up extensions
-O             = @o@
-EXE           = @exe@
-
-# Set up directories
-BUILD_DIR     = @build_dir@
-
 # Libraries:  Ordinarily, no special libraries are needed
 # for cola, but one of the following settings might be helpful
 # in some cases.
@@ -44,8 +48,9 @@ LIBS    =
 # LIBS = -lefence
 
 HEADERS = cola.h parser.h
+DOCS = MAINTAINER README examples/*
 
-default :
+all : colacc$(EXE)
 	$(MAKE) colacc$(EXE)
 	-$(CHMOD) 775 colacc$(EXE)
 
@@ -53,22 +58,27 @@ help :
 	@echo ""
 	@echo "Following targets are available for the user:"
 	@echo ""
-	@echo "  default  :         build 'colacc'"
+	@echo "  all  :             build 'colacc'"
 	@echo "                     This is the default."
+	@echo "  installable:       Create self-hosting bins and libs."
+	@echo "  install:           Install the installable targets and docs."
 	@echo ""
-	@echo "  test:              run the test suite"
-	@echo ""
-	@echo "  clean:             clean up temporary files"
+	@echo "Testing:"
+	@echo "  test:              Run the test suite"
+	@echo "  test-installable:  Test self-hosting targets."
+	@echo ""
+	@echo "Cleaning:"
+	@echo "  clean:             Clean up temporary files"
+	@echo "  realclean:         Clean up generated files"
+	@echo "  superclean:        Clean up generated files, also the flex/bison files"
 	@echo ""
-	@echo "  realclean:         clean up generated files"
+	@echo "Misc:"
+	@echo "  help:              Print this help message"
 	@echo ""
-	@echo "  superclean:       clean up generated files, also the flex/bison files"
-	@echo ""
-	@echo "  help:              print this help message"
 
 # regenerate the Makefile
 Makefile: config/makefiles/root.in
-	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=cola
+	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=$(TMPL)
 
 nogen : gen$(O) semant$(O) sym$(O) type$(O)
 	$(CC) $(DEBUG) -c parser.c
@@ -93,11 +103,11 @@ superclean: realclean
 	$(RM_F) parser.h
 	$(RM_F) lexer.c parser.c
 
-publish :
-	$(PERL) publish.pl < MANIFEST
-
-dist :
-	$(PERL) distribution.pl < MANIFEST
+#publish :
+#	$(PERL) publish.pl < MANIFEST
+#
+#dist :
+#	$(PERL) distribution.pl < MANIFEST
 
 parser.c : cola.y
 	$(YACC) -d -o parser.c cola.y
@@ -127,5 +137,23 @@ colacc$(EXE) : parser$(O) lexer$(O) gen$
 	$(CC) $(DEBUG) -o colacc$(EXE) parser$(O) lexer$(O) gen$(O) semant$(O) sym$(O) type$(O) $(LIBS)
 
 test: default
-	cd .. && $(PERL) t/harness --languages=cola
+	cd .. && $(PERL) t/harness --languages=$(TMPL)
+
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	./colacc$(EXE) examples/fib.cola
+
+install : installable
+	$(CP) colacc$(EXE) $(DESTDIR)$(BIN_DIR)/parrot-colacc$(EXE)
+	ascii2man README > $(DESTDIR)$(MANDIR)/man1/parrot-colacc.1
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
 
+installable : colacc$(EXE)
+	$(CP) colacc$(EXE) $(BUILD_DIR)/installable_colacc$(EXE)
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/eclectus/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/eclectus/config/makefiles/root.in
+++ parrot-svn/languages/eclectus/config/makefiles/root.in
@@ -1,19 +1,29 @@
 # Copyright (C) 2007-2008, The Perl Foundation.
-# $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 # Makefile for languages/eclectus
 
 # configuration settings
-BUILD_DIR       = @build_dir@
-LOAD_EXT        = @load_ext@
-O               = @o@
+TMPL          = eclectus
+BUILD_DIR     = @build_dir@
+LOAD_EXT      = @load_ext@
+O             = @o@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
 
 # Set up commands
-PARROT          = ../../parrot@exe@
-PERL            = @perl@
-RM_F            = @rm_f@
-RECONFIGURE     = $(PERL) @build_dir@/tools/dev/reconfigure.pl
-BUILD_DYNPMC    = $(PERL) @build_dir@/tools/build/dynpmc.pl
+PARROT        = ../../parrot@exe@
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
+PERL          = @perl@
+RM_F          = @rm_f@
+RENAME        = @mv@
+CP            = @cp@
+MKPATH        = @mkpath@
+POD2MAN       = pod2man
+RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
+BUILD_DYNPMC  = $(PERL) @build_dir@/tools/build/dynpmc.pl
 #CONDITIONED_LINE(darwin):
 #CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
 #CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
@@ -39,29 +49,37 @@ PMC_SOURCES     = \
     $(PMC_DIR)/eclectuspair.pmc \
     $(PMC_DIR)/eclectusstring.pmc \
     $(PMC_DIR)/eclectusvector.pmc
-
+DOCS = MAINTAINER README docs/eclectus.pod
 
 # The default target
-default: build
+all: build
 
 help :
 	@echo ""
 	@echo "Following targets are available for the user:"
 	@echo ""
-	@echo "  build:             Builds the dynamic PMCSs needed by Eclectus."
+	@echo "  all:               Builds the dynamic PMCSs needed by Eclectus."
 	@echo "                     This is the default target."
+	@echo "  installable:       Create self-hosting bins and libs."
+	@echo "  install:           Install the installable targets and docs."
 	@echo ""
+	@echo "Testing:"
 	@echo "  test:              Run the test suite."
+	@echo "  test-installable:  Test self-hosting targets."
+	@echo "  testclean:         Clean up test results."
 	@echo ""
+	@echo "Cleaning:"
 	@echo "  clean:             Clean up temporary files."
-	@echo ""
 	@echo "  realclean:         Clean up generated files."
+	@echo "  distclean:         Removes also anything built, in theory"
 	@echo ""
+	@echo "Misc:"
 	@echo "  help:              Print this help message."
+	@echo ""
 
 # regenerate the Makefile
 Makefile: config/makefiles/root.in
-	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=eclectus
+	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=$(TMPL)
 
 # Compilation:
 build: $(ECLECTUS_GROUP) driver_nqp.pbc
@@ -78,6 +96,29 @@ driver_nqp.pbc: src/builtins/all.pbc dri
 src/builtins/all.pbc: src/builtins/all.pir
 	$(PARROT) -o src/builtins/all.pbc src/builtins/all.pir
 
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	./installable_$(TMPL)@exe@ tests-driver.scm
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(TMPL)@exe@
+	cd $(PMC_DIR) && $(BUILD_DYNPMC) copy "--destination=$(DESTDIR)$(LIB_DIR)/parrot/dynext" $(PMCS)
+	$(POD2MAN) docs/eclectus.pod > $(DESTDIR)$(MANDIR)/man1/parrot-$(TMPL).1
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+
+$(TMPL)@exe@: driver_nqp.pbc
+	$(PBC_TO_EXE) driver_nqp.pbc
+	$(RENAME) driver_nqp@exe@ $(TMPL)@exe@
+
+installable : installable_$(TMPL)@exe@ $(ECLECTUS_GROUP)
+	$(CP) installable_$(TMPL)@exe@ $(BUILD_DIR)
+
+installable_$(TMPL)@exe@ : driver_nqp.pbc
+	$(PBC_TO_EXE) driver_nqp.pbc --install
+	$(RENAME) driver_nqp@exe@ installable_$(TMPL)@exe@
+
+
 # cleaning up
 
 clean: dynext-clean test-clean
@@ -97,8 +138,9 @@ dynext-clean:
   $(PMC_DIR)/*.ilk \
   $(PMC_DIR)/*.manifest \
   $(PMC_DIR)/*.pdb \
-  $(PMC_DIR)/*.lib
-
+  $(PMC_DIR)/*.lib \
+  installable_$(TMPL)@exe@ \
+  $(TMPL)@exe@ \
 
 realclean: clean
 	$(RM_F) Makefile
@@ -110,3 +152,11 @@ test: build
 test-clean:
 	$(RM_F) t/*.nqp
 	$(RM_F) t/*.pir
+
+distclean: realclean
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/ecmascript/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/ecmascript/config/makefiles/root.in
+++ parrot-svn/languages/ecmascript/config/makefiles/root.in
@@ -1,12 +1,17 @@
-# $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 ## arguments we want to run parrot with
 PARROT_ARGS =
 
 ## configuration settings
+TMPL          = ecmascript
 BUILD_DIR     = @build_dir@
 LOAD_EXT      = @load_ext@
 O             = @o@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
 
 # Setup some commands
 LN_S          = @lns@
@@ -14,7 +19,10 @@ PERL          = @perl@
 RM_F          = @rm_f@
 RM_RF         = @rm_rf@
 CP            = @cp@
+MKPATH        = @mkpath@
+POD2MAN       = pod2man
 PARROT        = ../../parrot@exe@
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
@@ -41,6 +49,7 @@ SOURCES = \
   src/gen_grammar.pir \
   src/gen_actions.pir \
   src/builtin/builtins.pir \
+DOCS = MAINTAINER
 
 #PMCS = \
 #  jsobject \
@@ -104,7 +113,7 @@ src/gen_actions.pir: $(NQP) $(PCT) src/p
 
 # regenerate the Makefile
 Makefile: config/makefiles/root.in
-	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=ecmascript
+	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=$(TMPL)
 
 # This is a listing of all targets, that are meant to be called by users
 help:
@@ -113,8 +122,12 @@ help:
 	@echo ""
 	@echo "  all:               js.pbc"
 	@echo "                     This is the default."
+	@echo "  installable:       Create self-hosting bins and libs."
+	@echo "  install:           Install the installable targets and docs."
+	@echo ""
 	@echo "Testing:"
 	@echo "  test:              Run the test suite."
+	@echo "  test-installable:  Test self-hosting targets."
 	@echo "  testclean:         Clean up test results."
 	@echo ""
 	@echo "Cleaning:"
@@ -129,12 +142,38 @@ help:
 test: all
 	$(PERL) t/harness t
 
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	echo "2-1" | ./installable_$(TMPL)@exe@
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(TMPL)@exe@
+	$(POD2MAN) $(TMPL).pir > $(DESTDIR)$(MANDIR)/man1/parrot-$(TMPL).1
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+
+$(TMPL).pbc : js.pbc
+	$(CP) js.pbc $(TMPL).pbc
+
+$(TMPL)@exe@: $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc
+
+installable : installable_$(TMPL)@exe@
+	$(CP) installable_$(TMPL)@exe@ $(BUILD_DIR)
+	cd $(PMC_DIR) && $(BUILD_DYNPMC) copy --destination=$(PARROT_DYNEXT) $(PMCS)
+
+installable_$(TMPL)@exe@ : $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc --install
+
 testclean:
 	$(RM_F) "t/*.js" "t/*.out"
 
 CLEANUPS = \
   js.pbc \
   js@exe@ \
+  installable_$(TMPL)@exe@ \
+  $(TMPL).pbc \
+  $(TMPL)@exe@ \
   js.c \
   src/gen_grammar.pir \
   src/gen_actions.pir \
@@ -159,3 +198,9 @@ realclean: clean
 	$(RM_RF) Makefile
 
 distclean: realclean
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/forth/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/forth/config/makefiles/root.in
+++ parrot-svn/languages/forth/config/makefiles/root.in
@@ -1,38 +1,40 @@
-# $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
-PARROT = ../../parrot@exe@
+TMPL   = forth
 PERL   = @perl@
 RM_RF  = @rm_rf@
+PARROT        = ../../parrot@exe@
+PBC_MERGE     = ../../pbc_merge@exe@
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
 RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
+POD2MAN	      = pod2man
 #CONDITIONED_LINE(darwin):
 #CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
 #CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 BUILD_DIR     = @build_dir@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
 
-DEPENDENCIES = \
-    forth.pbc \
-    tokenstream.pbc \
+PBCS = tokenstream.pbc \
     variablestack.pbc \
     virtualstack.pbc
+DEPENDENCIES = forth.pbc $(PBCS)
+DOCS = MAINTAINER
 
+build: $(DEPENDENCIES)
 
-all: $(DEPENDENCIES)
+all: $(DEPENDENCIES) forth@exe@ installable
 
 # regenerate the Makefile
 Makefile: config/makefiles/root.in
-	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=forth
+	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=$(TMPL)
 
 prompt: all
 	$(PARROT) forth.pbc
 
-clean:
-	$(RM_RF) $(DEPENDENCIES)
-
-realclean: clean
-	$(RM_RF) Makefile
-
-
 forth.pbc: forth.pir words.pir
 	$(PARROT) -o forth.pbc forth.pir
 
@@ -47,3 +49,69 @@ virtualstack.pbc: virtualstack.pir
 
 test: all
 	$(PERL) t/harness
+
+# This is a listing of all targets, that are meant to be called by users
+help:
+	@echo ""
+	@echo "Following targets are available for the user:"
+	@echo ""
+	@echo "  all:               force.pbc"
+	@echo "                     This is the default."
+	@echo "  installable:       Create self-hosting bins and libs."
+	@echo "  install:           Install the installable targets and docs."
+	@echo ""
+	@echo "Testing:"
+	@echo "  test:              Run the test suite."
+	@echo "  test-installable:  Test self-hosting targets."
+	@echo "  testclean:         Clean up test results."
+	@echo ""
+	@echo "Cleaning:"
+	@echo "  clean:             Basic cleaning up."
+	@echo "  realclean:         Removes also files generated by 'Configure.pl'"
+	@echo "  distclean:         Removes also anything built, in theory"
+	@echo ""
+	@echo "Misc:"
+	@echo "  help:              Print this help message."
+	@echo ""
+
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	echo "2-1" | ./installable_$(TMPL)@exe@
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(TMPL)@exe@
+	$(CP) tokenstream.pbc $(DESTDIR)$(LIB_DIR)/parrot/library/forth_tokenstream.pbc
+	$(CP) variablestack.pbc $(DESTDIR)$(LIB_DIR)/parrot/library/forth_variablestack.pbc
+	$(CP) virtualstack.pbc $(DESTDIR)$(LIB_DIR)/parrot/library/forth_virtualstack.pbc
+	-$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+
+$(TMPL)@exe@: $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc
+
+installable : installable_$(TMPL)@exe@
+	$(CP) installable_$(TMPL)@exe@ $(BUILD_DIR)
+
+installable_$(TMPL)@exe@ : $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc --install
+
+testclean:
+
+CLEANUPS = \
+  installable_$(TMPL)@exe@ \
+  *.pbc \
+  $(TMPL)@exe@ \
+
+clean:
+	$(RM_RF) $(CLEANUPS)
+
+realclean: clean
+	$(RM_RF) Makefile
+
+distclean: realclean
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/hq9plus/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/hq9plus/config/makefiles/root.in
+++ parrot-svn/languages/hq9plus/config/makefiles/root.in
@@ -1,15 +1,24 @@
-## $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+## $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 ## arguments we want to run parrot with
 PARROT_ARGS =
 
 ## configuration settings
+TMPL          = hq9plus
 BUILD_DIR     = @build_dir@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
 
 ## Setup some commands
 PERL          = @perl@
 RM_RF         = @rm_rf@
+CP            = @cp@
+MKPATH        = @mkpath@
+POD2MAN       = pod2man
 PARROT        = ../../parrot@exe@
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
 #CONDITIONED_LINE(darwin):
@@ -35,6 +44,8 @@ BUILTINS_PIR = \
   src/builtins/nintynine_bottles_of_beer.pir \
   src/builtins/plus.pir \
 
+DOCS = MAINTAINER README
+
 # the default target
 hq9plus.pbc: $(PARROT) $(SOURCES)
 	$(PARROT) $(PARROT_ARGS) -o hq9plus.pbc hq9plus.pir
@@ -53,7 +64,7 @@ src/gen_builtins.pir: $(BUILTINS_PIR)
 
 # regenerate the Makefile
 Makefile: config/makefiles/root.in
-	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=hq9plus
+	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=$(TMPL)
 
 # This is a listing of all targets, that are meant to be called by users
 help:
@@ -62,8 +73,12 @@ help:
 	@echo ""
 	@echo "  all:               hq9plus.pbc"
 	@echo "                     This is the default."
+	@echo "  installable:       Create self-hosting bins and libs."
+	@echo "  install:           Install the installable targets and docs."
+	@echo ""
 	@echo "Testing:"
 	@echo "  test:              Run the test suite."
+	@echo "  test-installable:  Test self-hosting targets."
 	@echo "  testclean:         Clean up test results."
 	@echo ""
 	@echo "Cleaning:"
@@ -78,6 +93,25 @@ help:
 test: all
 	$(PERL) t/harness
 
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	./installable_$(TMPL)@exe@
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(TMPL)@exe@
+	$(POD2MAN) $(TMPL).pir > $(DESTDIR)$(MANDIR)/man1/parrot-$(TMPL).1
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+
+$(TMPL)@exe@: $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc
+
+installable : installable_$(TMPL)@exe@
+	$(CP) installable_$(TMPL)@exe@ $(BUILD_DIR)
+
+installable_$(TMPL)@exe@ : $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc --install
+
 # this target has nothing to do
 testclean:
 
@@ -96,4 +130,10 @@ clean:
 realclean: clean
 	$(RM_RF) Makefile
 
-distclean: realclean
+distclean: clean realclean
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/jako/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/jako/config/makefiles/root.in
+++ parrot-svn/languages/jako/config/makefiles/root.in
@@ -1,21 +1,32 @@
 #
 # Makefile.in
 #
-# $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 #
 
+TMPL          = jako
+BUILD_DIR     = @build_dir@
+LOAD_EXT      = @load_ext@
+O             = @o@
+BIN_DIR       = @bin_dir@
+PERLLIB_DIR   = $(shell $(PERL) -V::sitelib:)
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
+
 PERL          = @perl@
 RM_F          = @rm_f@
 JAKOC         = $(PERL) -I lib jakoc
 INTERP        = ../../@test_prog@
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
 BUILD_DIR     = @build_dir@
 RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
 #CONDITIONED_LINE(darwin):
 #CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
 #CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
-.SUFFIXES: .jako .pir
+DOCS = README MAINTAINER
 
+.SUFFIXES: .jako .pir
 
 # default target
 all: \
@@ -41,16 +52,23 @@ help :
 	@echo ""
 	@echo "  all  :             Compile the example scripts"
 	@echo "                     This is the default."
+	@echo "  installable:       Create self-hosting bins and libs."
+	@echo "  install:           Install the installable targets and docs."
+	@echo "  over:              Clean and build again"
+	@echo ""
+	@echo "Testing:"
+	@echo "  test:              Run the test suite."
+	@echo "  test-installable:  Test self-hosting targets."
+	@echo "  testclean:         Clean up test results."
+	@echo ""
+	@echo "Cleaning:"
+	@echo "  clean:             Basic cleaning up."
+	@echo "  realclean:         Removes also files generated by 'Configure.pl'"
+	@echo "  distclean:         Removes also anything built, in theory"
 	@echo ""
-	@echo "  over:              clean and build again"
-	@echo ""
-	@echo "  test:              run the test suite"
+	@echo "Misc:"
+	@echo "  help:              Print this help message."
 	@echo ""
-	@echo "  clean:             clean up temporary files"
-	@echo ""
-	@echo "  realclean:         clean up generated files"
-	@echo ""
-	@echo "  help:              print this help message"
 
 
 # regenerate the Makefile
@@ -109,7 +127,27 @@ test: all
 	$(INTERP) examples/queens.pir
 	$(INTERP) examples/sub.pir
 
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	echo "2-1" | ./installable_$(TMPL)@exe@
+
+install : installable
+	$(CP) jako $(DESTDIR)$(BIN_DIR)/parrot-jako
+	$(CP) jakoc $(DESTDIR)$(BIN_DIR)/parrot-jakoc
+	$(CP) -R lib/Jako $(DESTDIR)$(PERLLIB_DIR)
+	$(POD2MAN) docs/jako.pod > $(DESTDIR)$(MANDIR)/man1/parrot-$(TMPL).1
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)/examples
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) *.jako $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) examples/*.jako $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)/examples
+
+installable : jako jakoc
+
+testclean:
 
 #
-# End of file.
-#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/json/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/json/config/makefiles/root.in
+++ parrot-svn/languages/json/config/makefiles/root.in
@@ -1,22 +1,31 @@
-## $Id: root.in 28940 2008-07-02 08:36:01Z bernhard $
+## $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 ## arguments we want to run parrot with
 PARROT_ARGS =
 
 ## configuration settings
+TMPL          = json
 BUILD_DIR     = @build_dir@
 LOAD_EXT      = @load_ext@
 O             = @o@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
 
 ## Setup some commands
 LN_S          = @lns@
 PERL          = @perl@
 RM_RF         = @rm_rf@
 CP            = @cp@
+MKPATH        = @mkpath@
+POD2MAN       = pod2man
 PARROT        = ../../parrot@exe@
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
+POD2MAN	      = pod2man
 #CONDITIONED_LINE(darwin):
 #CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
 #CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
@@ -32,20 +41,16 @@ PMC_DIR       = src/pmc
 
 all: json.pbc
 
-JSON_GROUP = $(PMC_DIR)/json_group$(LOAD_EXT)
-
 SOURCES = json.pir \
   src/gen_grammar.pir \
   src/gen_actions.pir \
-  src/gen_builtins.pir \
-#  $(JSON_GROUP)
+  src/gen_builtins.pir
+
+DOCS = MAINTAINER
 
 BUILTINS_PIR = \
   src/builtins/say.pir \
 
-# PMCS = json
-# PMC_SOURCES = $(PMC_DIR)/json.pmc
-
 # the default target
 json.pbc: $(PARROT) $(SOURCES)
 	$(PARROT) $(PARROT_ARGS) -o json.pbc json.pir
@@ -63,15 +68,9 @@ src/gen_actions.pir: $(NQP) $(PCT) src/p
 src/gen_builtins.pir: $(BUILTINS_PIR)
 	$(CAT) $(BUILTINS_PIR) >src/gen_builtins.pir
 
-$(JSON_GROUP): $(PARROT) $(PMC_SOURCES)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) generate $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) compile $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) linklibs $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) copy --destination=$(PARROT_DYNEXT) $(PMCS)
-
 # regenerate the Makefile
 Makefile: config/makefiles/root.in
-	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=json
+	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=$(TMPL)
 
 # This is a listing of all targets, that are meant to be called by users
 help:
@@ -80,8 +79,12 @@ help:
 	@echo ""
 	@echo "  all:               json.pbc"
 	@echo "                     This is the default."
+	@echo "  installable:       Create self-hosting bins and libs."
+	@echo "  install:           Install the installable targets and docs."
+	@echo ""
 	@echo "Testing:"
 	@echo "  test:              Run the test suite."
+	@echo "  test-installable:  Test self-hosting targets."
 	@echo "  testclean:         Clean up test results."
 	@echo ""
 	@echo "Cleaning:"
@@ -96,6 +99,25 @@ help:
 test: all
 	$(PERL) t/harness
 
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	./installable_$(TMPL)@exe@
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(TMPL)@exe@
+	$(POD2MAN) $(TMPL).pir > $(DESTDIR)$(MANDIR)/man1/parrot-$(TMPL).1
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+
+$(TMPL)@exe@: $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc
+
+installable : installable_$(TMPL)@exe@
+	$(CP) installable_$(TMPL)@exe@ $(BUILD_DIR)
+
+installable_$(TMPL)@exe@ : $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc --install
+
 # this target has nothing to do
 testclean:
 
@@ -103,18 +125,7 @@ CLEANUPS = \
   json.pbc \
   src/gen_grammar.pir \
   src/gen_actions.pir \
-  src/gen_builtins.pir \
-  $(PMC_DIR)/*.h \
-  $(PMC_DIR)/*.c \
-  $(PMC_DIR)/*.dump \
-  $(PMC_DIR)/*$(O) \
-  $(PMC_DIR)/*$(LOAD_EXT) \
-  $(PMC_DIR)/*.exp \
-  $(PMC_DIR)/*.ilk \
-  $(PMC_DIR)/*.manifest \
-  $(PMC_DIR)/*.pdb \
-  $(PMC_DIR)/*.lib \
-
+  src/gen_builtins.pir
 
 clean: testclean
 	$(RM_RF) $(CLEANUPS)
@@ -123,3 +134,9 @@ realclean: clean
 	$(RM_RF) Makefile
 
 distclean: realclean
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/lazy-k/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/lazy-k/config/makefiles/root.in
+++ parrot-svn/languages/lazy-k/config/makefiles/root.in
@@ -1,47 +1,94 @@
-# $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 # Makefile for languages/lazy-k
+TMPL          = lazy-k
 
 # Setup of some commands
 PARROT        = @build_dir@/parrot@exe@
 PERL          = @perl@
 RM_F          = @rm_f@
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
 RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
+POD2MAN	      = pod2man
 #CONDITIONED_LINE(darwin):
 #CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
 #CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
 # set up location
 BUILD_DIR     = @build_dir@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
 
-default: all
-all: build
+all: lazy-k.pbc
+
+lazy-k.pbc : $(PARROT) $(SOURCES)
+	$(PARROT) $(PARROT_ARGS) -o lazy-k.pbc lazy-k.pir
 
 help :
 	@echo ""
 	@echo "Following targets are available for the user:"
 	@echo ""
-	@echo "  build:             Nothing to do"
+	@echo "  all:               lazy-k.pbc"
 	@echo "                     This is the default."
+	@echo "  installable:       Create self-hosting bins and libs."
+	@echo "  install:           Install the installable targets and docs."
 	@echo ""
-	@echo "  test:              run the test suite,"
-	@echo ""
-	@echo "  clean:             clean up temporary files"
+	@echo "Testing:"
+	@echo "  test:              Run the test suite."
+	@echo "  test-installable:  Test self-hosting targets."
+	@echo "  testclean:         Clean up test results."
+	@echo ""
+	@echo "Cleaning:"
+	@echo "  clean:             Basic cleaning up."
+	@echo "  realclean:         Removes also files generated by 'Configure.pl'"
+	@echo "  distclean:         Removes also anything built, in theory"
 	@echo ""
-	@echo "  realclean:         clean up generated files"
+	@echo "Misc:"
+	@echo "  help:              Print this help message."
 	@echo ""
-	@echo "  help:              print this help message"
 
 # regenerate the Makefile
 Makefile: config/makefiles/root.in
-	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=lazy-k
+	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=$(TMPL)
 
-build:
-
-test: build
+test: all
 	cd .. && $(PERL) t/harness --languages=lazy-k
 
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	echo '1+2*3' |  ./installable_$(TMPL)@exe@ calc.lazy
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(TMPL)@exe@
+	$(POD2MAN) $(TMPL).pir > $(DESTDIR)$(MANDIR)/man1/parrot-$(TMPL).1
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+
+$(TMPL)@exe@: $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc
+
+installable : installable_$(TMPL)@exe@
+	$(CP) installable_$(TMPL)@exe@ $(BUILD_DIR)
+	cd $(PMC_DIR) && $(BUILD_DYNPMC) copy --destination=$(PARROT_DYNEXT) $(PMCS)
+
+installable_$(TMPL)@exe@ : $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc --install
+
 clean:
+	$(RM_F) core \
+    "*.pbc" \
+    "*~" \
+    "installable_$(TMPL)@exe@"
 
 realclean: clean
 	$(RM_F) Makefile
+
+distclean: clean realclean
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/lisp/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/lisp/config/makefiles/root.in
+++ parrot-svn/languages/lisp/config/makefiles/root.in
@@ -1,41 +1,93 @@
-# $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
-# Setup some commands
-RM_F          = @rm_f@
+## arguments we want to run parrot with
+PARROT_ARGS =
+
+## configuration settings
+TMPL          = lisp
+BUILD_DIR     = @build_dir@
+LOAD_EXT      = @load_ext@
+O             = @o@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
+
+## Setup some commands
+LN_S          = @lns@
 PERL          = @perl@
+RM_RF         = @rm_rf@
+CP            = @cp@
+MKPATH        = @mkpath@
+POD2MAN       = pod2man
 PARROT        = ../../parrot@exe@
-BUILD_DIR     = @build_dir@
-RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
+CAT           = $(PERL) -MExtUtils::Command -e cat
+BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
+RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
+POD2MAN	      = pod2man
 #CONDITIONED_LINE(darwin):
 #CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
 #CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
+DOCS = CHANGES KNOWN_BUGS LICENSE MAINTAINER README
+
 all: build
 
+# regenerate the Makefile
+Makefile: config/makefiles/root.in
+	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=$(TMPL)
+
+test: build
+	$(PERL) -Ilib -I../../lib t/harness
+
+build: lisp.pbc
+
+lisp.pbc: lisp.pir
+	$(PARROT) -o lisp.pbc lisp.pir
+
 # This is a listing of all targets, that are meant to be called by users
-help :
+help:
 	@echo ""
 	@echo "Following targets are available for the user:"
 	@echo ""
-	@echo "  all:               'lisp.pbc'"
+	@echo "  all:               lisp.pbc"
 	@echo "                     This is the default."
+	@echo "  installable:       Create self-hosting bins and libs."
+	@echo "  install:           Install the installable targets and docs."
 	@echo ""
-	@echo "  help:              Print this help message."
-	@echo ""
+	@echo "Testing:"
 	@echo "  test:              Run the test suite."
+	@echo "  test-installable:  Test self-hosting targets."
+	@echo "  testclean:         Clean up test results."
 	@echo ""
-	@echo "  clean:             Cleaning up."
+	@echo "Cleaning:"
+	@echo "  clean:             Basic cleaning up."
+	@echo "  realclean:         Removes also files generated by 'Configure.pl'"
+	@echo "  distclean:         Removes also anything built, in theory"
+	@echo ""
+	@echo "Misc:"
+	@echo "  help:              Print this help message."
 	@echo ""
 
-# regenerate the Makefile
-Makefile: config/makefiles/root.in
-	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=lisp
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	./installable_$(TMPL)@exe@
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(TMPL)@exe@
+	$(POD2MAN) $(TMPL).pir > $(DESTDIR)$(MANDIR)/man1/parrot-$(TMPL).1
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
 
-test: build
-	$(PERL) -Ilib -I../../lib t/harness
+$(TMPL)@exe@: $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc
 
-build: lisp.pir
-	$(PARROT) -o lisp.pbc lisp.pir
+installable : installable_$(TMPL)@exe@
+	$(CP) installable_$(TMPL)@exe@ $(BUILD_DIR)
+
+installable_$(TMPL)@exe@ : $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc --install
 
 clean: testclean
 	$(RM_F) core "*.pbc" "*~"
@@ -45,3 +97,11 @@ testclean:
 
 realclean: clean
 	$(RM_F) Makefile
+
+distclean: realclean
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/lolcode/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/lolcode/config/makefiles/root.in
+++ parrot-svn/languages/lolcode/config/makefiles/root.in
@@ -1,19 +1,27 @@
-## $Id: root.in 29523 2008-07-16 15:41:23Z tene $
+## $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 ## arguments we want to run parrot with
 PARROT_ARGS =
 
 ## configuration settings
+TMPL          = lolcode
 BUILD_DIR     = @build_dir@
 LOAD_EXT      = @load_ext@
 O             = @o@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
 
 ## Setup some commands
 LN_S          = @lns@
 PERL          = @perl@
 RM_RF         = @rm_rf@
 CP            = @cp@
+MKPATH        = @mkpath@
+POD2MAN       = pod2man
 PARROT        = ../../parrot@exe@
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
@@ -33,14 +41,11 @@ PMC_DIR       = src/pmc
 
 all: lolcode.pbc
 
-LOLCODE_GROUP = $(PMC_DIR)/lolcode_group$(LOAD_EXT)
-
 SOURCES = lolcode.pir \
   src/gen_grammar.pir \
   src/gen_actions.pir \
   src/gen_builtins.pir \
-  src/parser/yarn_literal.pir \
-#  $(LOLCODE_GROUP)
+  src/parser/yarn_literal.pir
 
 BUILTINS_PIR = \
   src/builtins/say.pir \
@@ -48,9 +53,6 @@ BUILTINS_PIR = \
   src/builtins/math.pir \
   src/builtins/cmp.pir
 
-# PMCS = lolcode
-# PMC_SOURCES = $(PMC_DIR)/lolcode.pmc
-
 lolcode@exe@: lolcode.pbc
 	$(PBC_TO_EXE) lolcode.pbc
 
@@ -70,12 +72,6 @@ src/gen_actions.pir: $(NQP) $(PCT) src/p
 src/gen_builtins.pir: $(BUILTINS_PIR)
 	$(CAT) $(BUILTINS_PIR) >src/gen_builtins.pir
 
-$(LOLCODE_GROUP): $(PARROT) $(PMC_SOURCES)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) generate $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) compile $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) linklibs $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) copy --destination=$(PARROT_DYNEXT) $(PMCS)
-
 # regenerate the Makefile
 Makefile: config/makefiles/root.in
 	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=lolcode
@@ -87,8 +83,12 @@ help:
 	@echo ""
 	@echo "  all:               lolcode.pbc"
 	@echo "                     This is the default."
+	@echo "  installable:       Create self-hosting bins and libs."
+	@echo "  install:           Install the installable targets and docs."
+	@echo ""
 	@echo "Testing:"
 	@echo "  test:              Run the test suite."
+	@echo "  test-installable:  Test self-hosting targets."
 	@echo "  testclean:         Clean up test results."
 	@echo ""
 	@echo "Cleaning:"
@@ -103,6 +103,20 @@ help:
 test: all
 	$(PERL) t/harness
 
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	./installable_$(TMPL)@exe@ t/00-sanity.t
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(TMPL)@exe@
+	$(POD2MAN) $(TMPL).pir > $(DESTDIR)$(MANDIR)/man1/parrot-$(TMPL).1
+
+installable : installable_$(TMPL)@exe@
+	$(CP) installable_$(TMPL)@exe@ $(BUILD_DIR)
+
+installable_$(TMPL)@exe@ : $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc --install
+
 # this target has nothing to do
 testclean:
 
@@ -112,18 +126,7 @@ CLEANUPS = \
   lolcode.pbc \
   src/gen_grammar.pir \
   src/gen_actions.pir \
-  src/gen_builtins.pir \
-  $(PMC_DIR)/*.h \
-  $(PMC_DIR)/*.c \
-  $(PMC_DIR)/*.dump \
-  $(PMC_DIR)/*$(O) \
-  $(PMC_DIR)/*$(LOAD_EXT) \
-  $(PMC_DIR)/*.exp \
-  $(PMC_DIR)/*.ilk \
-  $(PMC_DIR)/*.manifest \
-  $(PMC_DIR)/*.pdb \
-  $(PMC_DIR)/*.lib \
-
+  src/gen_builtins.pir
 
 clean:
 	$(RM_RF) $(CLEANUPS)
@@ -131,6 +134,10 @@ clean:
 realclean: clean
 	$(RM_RF) Makefile
 
-distclean: realclean
-
+distclean: clean realclean
 
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/config/gen/makefiles/docs.in
===================================================================
--- parrot-svn.orig/config/gen/makefiles/docs.in
+++ parrot-svn/config/gen/makefiles/docs.in
@@ -6,8 +6,9 @@ PERL   = @perl@
 RM_F   = @rm_f@
 MKPATH = @mkpath@
 CHMOD  = @chmod@
-PERLDOC = @perldoc@
+PERLDOC   = @perldoc@
 BUILD_DIR = @build_dir@
+RECONFIGURE = $(PERL) tools/dev/reconfigure.pl
 
 # long list of .pod files
 POD = @pod@
Index: parrot-svn/languages/c99/config/makefiles/cpp.in
===================================================================
--- parrot-svn.orig/languages/c99/config/makefiles/cpp.in
+++ parrot-svn/languages/c99/config/makefiles/cpp.in
@@ -1,9 +1,10 @@
-## $Id: cpp.in 26906 2008-04-10 19:45:40Z bernhard $
+## $Id: cpp.in 30597 2008-08-27 18:31:51Z moritz $
 
 ## arguments we want to run parrot with
 PARROT_ARGS =
 
 ## configuration settings
+TMPL          = cpp
 BUILD_DIR     = @build_dir@
 LOAD_EXT      = @load_ext@
 O             = @o@
@@ -13,7 +14,10 @@ LN_S          = @lns@
 PERL          = @perl@
 RM_RF         = @rm_rf@
 CP            = @cp@
+MKPATH        = @mkpath@
+POD2MAN       = pod2man
 PARROT        = ../../../../parrot@exe@
+PBC_TO_EXE    = $(BUILD_DIR)/pbc_to_exe.exe
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
@@ -27,26 +31,28 @@ PCT           = $(BUILD_DIR)/runtime/par
 
 PMC_DIR       = src/pmc
 
-all: cpp.pbc
+build: cpp.pbc
 
-C_GROUP = $(PMC_DIR)/c_group$(LOAD_EXT)
+all: cpp.pbc cpp@exe@
 
 SOURCES = cpp.pir \
   src/gen_grammar.pir \
   src/gen_actions.pir \
-  src/gen_builtins.pir \
-#  $(C_GROUP)
+  src/gen_builtins.pir
 
 BUILTINS_PIR = \
   src/builtins/say.pir \
 
-# PMCS = c
-# PMC_SOURCES = $(PMC_DIR)/c.pmc
-
 # the default target
 cpp.pbc: $(PARROT) $(SOURCES)
 	$(PARROT) $(PARROT_ARGS) -o cpp.pbc cpp.pir
 
+cpp@exe@ : cpp.pbc
+	$(PBC_TO_EXE) cpp.pbc
+
+installable_cpp@exe@ : cpp.pbc
+	$(PBC_TO_EXE) cpp.pbc --install
+
 src/gen_grammar.pir: $(PERL6GRAMMAR) src/parser/grammar.pg
 	$(PARROT) $(PARROT_ARGS) $(PERL6GRAMMAR) \
 	    --output=src/gen_grammar.pir \
@@ -59,22 +65,18 @@ src/gen_actions.pir: $(NQP) $(PCT) src/p
 src/gen_builtins.pir: $(BUILTINS_PIR)
 	$(CAT) $(BUILTINS_PIR) >src/gen_builtins.pir
 
-$(C_GROUP): $(PARROT) $(PMC_SOURCES)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) generate $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) compile $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) linklibs $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) copy --destination=$(PARROT_DYNEXT) $(PMCS)
-
 # regenerate the Makefile
 Makefile: ../../config/makefiles/cpp.in
 	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=c99
 
+installable : installable_cpp@exe@
+
 # This is a listing of all targets, that are meant to be called by users
 help:
 	@echo ""
 	@echo "Following targets are available for the user:"
 	@echo ""
-	@echo "  all:               c.pbc"
+	@echo "  all:               cpp.pbc"
 	@echo "                     This is the default."
 	@echo "Testing:"
 	@echo "  test:              Run the test suite."
@@ -99,18 +101,7 @@ CLEANUPS = \
   cpp.pbc \
   src/gen_grammar.pir \
   src/gen_actions.pir \
-  src/gen_builtins.pir \
-  $(PMC_DIR)/*.h \
-  $(PMC_DIR)/*.c \
-  $(PMC_DIR)/*.dump \
-  $(PMC_DIR)/*$(O) \
-  $(PMC_DIR)/*$(LOAD_EXT) \
-  $(PMC_DIR)/*.exp \
-  $(PMC_DIR)/*.ilk \
-  $(PMC_DIR)/*.manifest \
-  $(PMC_DIR)/*.pdb \
-  $(PMC_DIR)/*.lib \
-
+  src/gen_builtins.pir
 
 clean:
 	$(RM_RF) $(CLEANUPS)
@@ -120,4 +111,8 @@ realclean: clean
 
 distclean: realclean
 
-
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/m4/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/m4/config/makefiles/root.in
+++ parrot-svn/languages/m4/config/makefiles/root.in
@@ -1,27 +1,46 @@
-# $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 # Makefile for languages/m4
+TMPL          = m4
 
 # Setup of some commands
-PARROT        = ../../parrot@exe@
 PERL          = @perl@
 RM_RF         = @rm_rf@
 TOUCH         = $(PERL) -MExtUtils::Command -e touch
+CP            = @cp@
+MKPATH        = @mkpath@
+POD2MAN       = pod2man
 BUILD_DIR     = @build_dir@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
+PARROT        = ../../parrot@exe@
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
 RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
 #CONDITIONED_LINE(darwin):
 #CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
 #CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
-default: all
-all: build 
+DOCS = BUGS ChangeLog LICENSE MAINTAINER README TODO.pod VERSION \
+       pod/features.pod pod/freezing.pod pod/operation.pod pod/running.pod
+
+default: build
+
+all: build m4@exe@ installable_m4@exe@
+
+build: m4.pbc
 
 help:
 	@echo ""
 	@echo "Following targets are available for the user:"
 	@echo ""
-	@echo "  all:               m4.pbc"
+	@echo "  all:               m4.pbc m4.exe"
+	@echo "  build:             m4.pbc"
 	@echo "                     This is the default."
+	@echo "  installable:       Create self-hosting bins and libs."
+	@echo "  install:           Install the installable targets and docs."
+	@echo ""
 	@echo "Testing:"
 	@echo "  test:              Run the test suite."
 	@echo "  test-gnu-m4:       Run the test suite on the installed GNU m4."
@@ -47,21 +66,38 @@ test: build
 test-gnu-m4: build
 	PARROT_M4_TEST_PROG='m4' $(PERL) -Ilib -I../../lib t/harness
 
-build: m4.pbc 
-
 m4.pbc: src/m4.pir
-	$(PARROT) -o m4.pbc src/m4.pir 
+	$(PARROT) -o m4.pbc src/m4.pir
+
+src/m4.pir: src/builtin.pir src/freeze.pir src/input.pir src/macro.pir src/output.pir
+	$(TOUCH) $@
 
-src/m4.pir: src/builtin.pir src/freeze.pir src/input.pir src/macro.pir src/output.pir 
-	$(TOUCH) $@ 
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	./installable_$(TMPL)@exe@
 
-html: 
-	mkdir docs/html 
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(TMPL)@exe@
+	$(POD2MAN) pod/running.pod > $(DESTDIR)$(MANDIR)/man1/parrot-$(TMPL).1
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+
+m4@exe@: $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc
+
+installable : installable_$(TMPL)@exe@
+	$(CP) installable_$(TMPL)@exe@ $(BUILD_DIR)
+
+installable_$(TMPL)@exe@ : $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc --install
+
+html:
+	$(MKPATH) docs/html
 	pod2html docs/*.pod -o docs/html
- 
+
 perlcritic:
 	$(PERL) tools/scrutinize.pl
- 
+
 clean:
 	$(RM_RF) \
 m4.pbc \
@@ -78,3 +114,9 @@ realclean: clean
 	$(RM_RF) Makefile
 
 distclean: realclean
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/ook/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/ook/config/makefiles/root.in
+++ parrot-svn/languages/ook/config/makefiles/root.in
@@ -1,11 +1,16 @@
-# $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 # Makefile for languages/ook
+TMPL          = ook
 
 # Set up of commands
-PARROT        = ../../parrot
+PARROT        = ../../parrot@exe@
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
 PERL          = @perl@
 RM_F          = @rm_f@
+CP            = @cp@
+MKPATH        = @mkpath@
+POD2MAN       = pod2man
 RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
 #CONDITIONED_LINE(darwin):
 #CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
@@ -13,6 +18,12 @@ RECONFIGURE   = $(PERL) @build_dir@/tool
 
 # Set up directories
 BUILD_DIR     = @build_dir@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
+
+DOCS = Changes MAINTAINER README
 
 default: all
 
@@ -33,15 +44,34 @@ help :
 
 # regenerate the Makefile
 Makefile: config/makefiles/root.in
-	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=ook
+	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=$(TMPL)
 
 all: build
 
+build: ook.pbc
+
+ook.pbc: ook.pasm
+	$(PARROT) -o ook.pbc ook.pasm
+
 test: build
 	$(PERL) -I../../lib t/harness
 
-build: ook.pasm
-	$(PARROT) -o ook.pbc ook.pasm
+ook@exe@: ook.pbc
+	$(PBC_TO_EXE) ook.pbc
+
+installable_ook@exe@: ook.pbc
+	$(PBC_TO_EXE) ook.pbc --install
+
+installable: installable_ook@exe@
+
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	./installable_$(TMPL)@exe@ hello.ook
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(TMPL)@exe@
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
 
 clean:
 	$(RM_F) core \
@@ -52,3 +82,9 @@ clean:
 
 realclean: clean
 	$(RM_F) Makefile
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/parrot_compiler/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/parrot_compiler/config/makefiles/root.in
+++ parrot-svn/languages/parrot_compiler/config/makefiles/root.in
@@ -1,5 +1,5 @@
 # Copyright (C) 2001-2005, The Perl Foundation.
-# $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 # Makefile for languages/parrot_compiler
 
@@ -55,3 +55,8 @@ parrot_compiler.pbc : parrot_compiler.pi
 parrot_compiler.pasm : parrot_compiler.pir
 	$(PARROT) -o parrot_compiler.pasm parrot_compiler.pir
 
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/pheme/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/pheme/config/makefiles/root.in
+++ parrot-svn/languages/pheme/config/makefiles/root.in
@@ -1,12 +1,22 @@
-# $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 # configuration settings
+TMPL          = pheme
 BUILD_DIR     = @build_dir@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
 
 # Setup some commands
 PERL          = @perl@
 RM_F          = @rm_f@
+CP            = @cp@
+MKPATH        = @mkpath@
+POD2MAN	      = pod2man
+EXE           = @exe@
 PARROT        = ../../parrot@exe@
+PBC_TO_EXE    = $(BUILD_DIR)/pbc_to_exe$(EXE)
 TGE_DIR       = ../../compilers/tge
 PGE_LIBRARY   = $(BUILD_DIR)/runtime/parrot/library/PGE
 PERL6GRAMMAR  = $(PGE_LIBRARY)/Perl6Grammar.pbc
@@ -15,8 +25,12 @@ RECONFIGURE   = $(PERL) $(BUILD_DIR)/too
 #CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
 #CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
-# the default target
-all: pheme.pbc
+DOCS = MAINTAINER MANIFEST README TODO
+
+# the default targets
+build: pheme.pbc Makefile
+
+all: pheme.pbc Makefile pheme$(EXE) installable
 
 lib/pheme_grammar_gen.pir: lib/pheme.g
 	$(PARROT) $(PERL6GRAMMAR) \
@@ -28,6 +42,12 @@ lib/ASTGrammar.pir: lib/pge2past.tg
 pheme.pbc: pheme.pir lib/PhemeSymbols.pir lib/PhemeObjects.pir lib/ASTGrammar.pir lib/pheme_grammar_gen.pir
 	$(PARROT) -o pheme.pbc pheme.pir
 
+pheme$(EXE): pheme.pbc
+	$(PBC_TO_EXE) pheme.pbc
+
+installable_pheme$(EXE): pheme.pbc
+	$(PBC_TO_EXE) pheme.pbc --install
+
 # regenerate the Makefile
 Makefile: config/makefiles/root.in
 	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=pheme
@@ -39,6 +59,9 @@ help:
 	@echo ""
 	@echo "  all:               pheme.pbc"
 	@echo "                     This is the default."
+	@echo "  installable:       Create self-hosting bins and libs."
+	@echo "  install:           Install the installable targets and docs."
+	@echo ""
 	@echo "Testing:"
 	@echo "  test:              Run the test suite."
 	@echo "  testclean:         Clean up test results."
@@ -58,6 +81,20 @@ test: all
 testclean:
 	$(RM_F) "t/*.out"
 
+
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	./installable_$(TMPL)@exe@ -e'say 1'
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(TMPL)@exe@
+	$(POD2MAN) $(TMPL).pir > $(DESTDIR)$(MANDIR)/man1/parrot-$(TMPL).1
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+
+installable : installable_$(TMPL)@exe@
+	$(CP) installable_$(TMPL)@exe@ $(BUILD_DIR)
+
 clean: testclean
 	$(RM_F) pheme.pbc
 	$(RM_F) lib/pheme_grammar_gen.pir
@@ -68,3 +105,9 @@ realclean: clean
 	$(RM_F) Makefile
 
 distclean: realclean
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/pipp/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/pipp/config/makefiles/root.in
+++ parrot-svn/languages/pipp/config/makefiles/root.in
@@ -1,25 +1,31 @@
-# $Id: root.in 30479 2008-08-23 14:21:49Z bernhard $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 # Set up extensions
+TMPL          = pipp
 LOAD_EXT      = @load_ext@
 O             = @o@
 EXE           = @exe@
 
 # Set up directories
 BUILD_DIR     = @build_dir@
-LIBRARY_DIR   = $(BUILD_DIR)/runtime/parrot/library
+LIBRARY_DIR   = @build_dir@/runtime/parrot/library
 PMCDIR        = src/pmc
 PARROT_DYNEXT = @build_dir@/runtime/parrot/dynext
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
 
 # Set up commands
 PARROT        = $(BUILD_DIR)/parrot@exe@
+PBC_MERGE     = $(BUILD_DIR)/pbc_merge$(EXE)
+PBC_TO_EXE    = $(BUILD_DIR)/pbc_to_exe$(EXE)
 PERL          = @perl@
 RM_F          = @rm_f@
-RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
+RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
 PMCBUILD      = $(PERL) @build_dir@/tools/build/dynpmc.pl
 NQP           = $(BUILD_DIR)/compilers/nqp/nqp.pbc
 PCT           = $(BUILD_DIR)/runtime/parrot/library/PCT.pbc
-PBC_TO_EXE    = $(BUILD_DIR)/pbc_to_exe$(EXE)
 
 PMCS = \
  php \
@@ -102,8 +108,14 @@ PHP_EXT= \
   src/common/php_gmp.pbc \
   src/common/php_pcre.pbc
 
+DOCS = README ChangeLog CREDITS MAINTAINER TODO \
+       docs/antlr3.pod docs/overview.pod docs/testing.pod
+
+
 # default
-all: build
+build: build-pct
+
+all: Makefile build pipp$(EXE) installable
 
 # This is a listing of all targets, that are meant to be called by users
 help:
@@ -158,8 +170,6 @@ maintain-antlr3: src/antlr3/Pipp.g src/a
 	java org.antlr.Tool src/antlr3/Pipp.g
 	java org.antlr.Tool -lib src/antlr3 src/antlr3/GenPastNqp.g
 
-build:           build-pct
-
 build-all:       build-pct build-phc build-antlr3
 
 build-common:    pmc src/common/pipplib.pbc pipp.pbc $(PHP_EXT)
@@ -176,6 +186,9 @@ build-antlr3:    build-common
 pipp$(EXE): build-common
 	$(PBC_TO_EXE) pipp.pbc
 
+installable_pipp$(EXE): build-common
+	$(PBC_TO_EXE) pipp.pbc --install
+
 src/common/pipplib.pbc: src/common/builtins.pir src/common/php_standard.pir $(PHP_SRC_STD_EXT) src/common/php_API.pir src/common/php_MACRO.pir
 	$(PARROT) -o src/common/pipplib.pbc src/common/builtins.pir
 
@@ -211,6 +224,17 @@ $(PHP_GROUP): $(PARROT) $(PMC_SOURCES)
 	@cd $(PMCDIR) && $(PMCBUILD) linklibs $(PMCS)
 	@cd $(PMCDIR) && $(PMCBUILD) copy "--destination=$(PARROT_DYNEXT)" $(PMCS)
 
+installable : installable_$(TMPL)@exe@ pmc
+	$(CP) installable_$(TMPL)@exe@ $(BUILD_DIR)
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(TMPL)@exe@
+	@cd $(PMCDIR) && $(PMCBUILD) copy "--destination=$(DESTDIR)$(LIB_DIR)/parrot/dynext" $(PMCS)
+	$(CP) src/common/pipplib.pbc $(PHP_EXT) $(DESTDIR)$(LIB_DIR)/parrot/library
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+
+
 test:     all test-pct
 
 test-all: all test-php test-phc test-antlr3 test-pct test-pmc
@@ -273,3 +297,9 @@ clean-test:
 
 realclean: clean
 	$(RM_F) Makefile
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/punie/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/punie/config/makefiles/root.in
+++ parrot-svn/languages/punie/config/makefiles/root.in
@@ -1,15 +1,23 @@
-# $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 # Setup some commands
-LN_S     = @lns@
-PERL     = @perl@
-RM_F     = @rm_f@
-PARROT   = ../../parrot@exe@
+TMPL          = punie
+LN_S          = @lns@
+PERL          = @perl@
+RM_F          = @rm_f@
+CP            = @cp@
+MKPATH        = @mkpath@
+POD2MAN       = pod2man
+PARROT        = ../../parrot@exe@
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
 BUILD_DIR     = @build_dir@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
 RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
 PGE_DIR       = ../../compilers/pge
 NQP_DIR       = ../../compilers/nqp
-CP       = @cp@
 #CONDITIONED_LINE(darwin):
 #CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
 #CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
@@ -17,9 +25,13 @@ CP       = @cp@
 PARROT_LIBRARY = ../../runtime/parrot/library
 PGE_LIBRARY   = ../../runtime/parrot/library/PGE
 
+DOCS = MAINTAINER README overview.pod
+
 # the default target
 all: punie.pbc
 
+all: punie.pbc punie@exe@ installable_punie@exe@
+
 SOURCES = punie.pir \
   src/parser/grammar.pg \
   src/parser/actions.pm \
@@ -36,8 +48,12 @@ help:
 	@echo ""
 	@echo "Following targets are available for the user:"
 	@echo ""
-	@echo "  all:               punie.pbc"
+	@echo "  build:             punie.pbc"
 	@echo "                     This is the default."
+	@echo "  all:               punie.pbc punie@exe@"
+	@echo "  installable:       Create self-hosting bins and libs."
+	@echo "  install:           Install the installable targets and docs."
+	@echo ""
 	@echo "Testing:"
 	@echo "  test:              Run the test suite."
 	@echo "  testclean:         Clean up test results."
@@ -56,7 +72,26 @@ test: all
 
 # regenerate the Makefile
 Makefile: config/makefiles/root.in
-	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=punie
+	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=$(TMPL)
+
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	./installable_$(TMPL)@exe@ demo.p1
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(TMPL)@exe@
+	$(POD2MAN) punie.pir > $(DESTDIR)$(MANDIR)/man1/parrot-$(TMPL).1
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+
+$(TMPL)@exe@: $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc
+
+installable : installable_$(TMPL)@exe@
+	$(CP) installable_$(TMPL)@exe@ $(BUILD_DIR)
+
+installable_$(TMPL)@exe@ : $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc --install
 
 testclean:
 	$(RM_F) "t/*.p1" "t/*.out" "t/*.pir"
@@ -73,3 +108,9 @@ realclean: clean
 	$(RM_F) Makefile
 
 distclean: realclean
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/pynie/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/pynie/config/makefiles/root.in
+++ parrot-svn/languages/pynie/config/makefiles/root.in
@@ -1,19 +1,27 @@
-# $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 ## arguments we want to run parrot with
 PARROT_ARGS =
 
 ## configuration settings
+TMPL          = pynie
 BUILD_DIR     = @build_dir@
 LOAD_EXT      = @load_ext@
 O             = @o@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
 
 ## Setup some commands
 LN_S          = @lns@
 PERL          = @perl@
 RM_RF         = @rm_rf@
 CP            = @cp@
+MKPATH        = @mkpath@
+POD2MAN       = pod2man
 PARROT        = ../../parrot@exe@
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
@@ -28,16 +36,18 @@ PERL6GRAMMAR  = $(PGE_LIBRARY)/Perl6Gram
 NQP           = $(BUILD_DIR)/compilers/nqp/nqp.pbc
 PCT           = $(BUILD_DIR)/runtime/parrot/library/PCT.pbc
 
-PMC_DIR       = src/pmc
+DOCS = MAINTAINER README
 
-all: pynie.pbc
+build : pynie.pbc
+
+all: pynie.pbc pynie@exe@ installable_pynie@exe@
 
 SOURCES = pynie.pir \
   src/parser/Grammar.pg \
   src/parser/Actions.pm \
   src/builtins/io.pir \
   src/builtins/lists.pir \
-  src/builtins/oper.pir \
+  src/builtins/oper.pir
 
 # the default target
 pynie.pbc: $(PARROT) $(PERL6GRAMMAR) $(NQP) $(PCT) $(SOURCES)
@@ -56,8 +66,12 @@ help:
 	@echo ""
 	@echo "Following targets are available for the user:"
 	@echo ""
-	@echo "  all:               pynie.pbc"
+	@echo "  build:             pynie.pbc"
 	@echo "                     This is the default."
+	@echo "  all:               pynie.pbc pynie@exe@ installable"
+	@echo "  installable:       Create self-hosting bins and libs."
+	@echo "  install:           Install the installable targets and docs."
+	@echo ""
 	@echo "Testing:"
 	@echo "  test:              Run the test suite."
 	@echo "  testclean:         Clean up test results."
@@ -77,6 +91,25 @@ test: all
 # this target has nothing to do
 testclean:
 
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	./installable_$(TMPL)@exe@ t/00-parrot/03-op-logic.t
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(TMPL)@exe@
+	$(POD2MAN) pynie.pir > $(DESTDIR)$(MANDIR)/man1/parrot-$(TMPL).1
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+
+$(TMPL)@exe@: $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc
+
+installable : installable_$(TMPL)@exe@
+	$(CP) installable_$(TMPL)@exe@ $(BUILD_DIR)
+
+installable_$(TMPL)@exe@ : $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc --install
+
 CLEANUPS = \
   pynie.pbc \
   src/gen_grammar.pir \
@@ -89,3 +122,9 @@ realclean: clean
 	$(RM_RF) Makefile
 
 distclean: realclean
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/regex/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/regex/config/makefiles/root.in
+++ parrot-svn/languages/regex/config/makefiles/root.in
@@ -1,5 +1,5 @@
 # Copyright (C) 2005-2008, The Perl Foundation.
-# $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 # Makefile for languages/regex
 
@@ -80,3 +80,8 @@ realclean: clean
 
 distclean: realclean
 
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/scheme/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/scheme/config/makefiles/root.in
+++ parrot-svn/languages/scheme/config/makefiles/root.in
@@ -1,7 +1,8 @@
 # Copyright (C) 2005-2007, The Perl Foundation.
-# $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 # Makefile for languages/scheme
+TMPL          = scheme
 
 # Set up commands
 PERL          = @perl@
@@ -13,6 +14,10 @@ RECONFIGURE   = $(PERL) @build_dir@/tool
 
 # Set up directories
 BUILD_DIR     = @build_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
+#PERL_LIB     = @ perl_lib @
 
 # The default target
 default: build
@@ -34,12 +39,22 @@ help :
 
 # regenerate the Makefile
 Makefile: config/makefiles/root.in
-	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=scheme
+	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=$(TMPL)
 
 # Compilation:
 build:
 	$(PERL) -c schemec
 
+# perl libs where? need @ perl_lib @
+#	-$(MKPATH) $(DESTDIR)$(LIB_DIR)
+#	-$(MKPATH) $(DESTDIR)$(LIB_DIR)/Scheme
+#	$(CP) lib/Scheme.pm $(DESTDIR)$(LIB_DIR)/Scheme.pm
+#	$(CP) lib/Scheme/*.pm $(DESTDIR)$(LIB_DIR)/Scheme
+install : installable
+	$(CP) schemec $(DESTDIR)$(BIN_DIR)/parrot-schemec
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+
 # cleaning up
 
 clean:
@@ -60,3 +75,9 @@ over:
 # testing
 test:
 	cd .. && $(PERL) scheme/t/harness
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/squaak/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/squaak/config/makefiles/root.in
+++ parrot-svn/languages/squaak/config/makefiles/root.in
@@ -1,19 +1,27 @@
-## $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+## $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 ## arguments we want to run parrot with
 PARROT_ARGS =
 
 ## configuration settings
+TMPL          = squaak
 BUILD_DIR     = @build_dir@
 LOAD_EXT      = @load_ext@
 O             = @o@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
 
 ## Setup some commands
 LN_S          = @lns@
 PERL          = @perl@
 RM_RF         = @rm_rf@
 CP            = @cp@
+MKPATH        = @mkpath@
+POD2MAN       = pod2man
 PARROT        = ../../parrot@exe@
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
@@ -28,28 +36,36 @@ PERL6GRAMMAR  = $(PGE_LIBRARY)/Perl6Gram
 NQP           = $(BUILD_DIR)/compilers/nqp/nqp.pbc
 PCT           = $(BUILD_DIR)/runtime/parrot/library/PCT.pbc
 
-PMC_DIR       = src/pmc
+build: squaak.pbc
 
-all: squaak.pbc
-
-SQUAAK_GROUP = $(PMC_DIR)/squaak_group$(LOAD_EXT)
+all: build squaak@exe@ installable
 
 SOURCES = squaak.pir \
   src/gen_grammar.pir \
   src/gen_actions.pir \
   src/gen_builtins.pir \
-#  $(SQUAAK_GROUP)
 
 BUILTINS_PIR = \
   src/builtins/say.pir \
 
-# PMCS = squaak
-# PMC_SOURCES = $(PMC_DIR)/squaak.pmc
+DOCS = MAINTAINER README \
+  pod/tutorial_episode_1.pod \
+  pod/tutorial_episode_2.pod \
+  pod/tutorial_episode_3.pod \
+  pod/tutorial_episode_4.pod \
+  pod/tutorial_episode_5.pod \
+  pod/tutorial_episode_6.pod \
+  pod/tutorial_episode_7.pod \
+  pod/tutorial_episode_8.pod \
+  pod/tutorial_episode_9.pod
 
 # the default target
 squaak.pbc: $(PARROT) $(SOURCES)
 	$(PARROT) $(PARROT_ARGS) -o squaak.pbc squaak.pir
 
+squaak@exe@: $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc
+
 src/gen_grammar.pir: $(PERL6GRAMMAR) src/parser/grammar.pg
 	$(PARROT) $(PARROT_ARGS) $(PERL6GRAMMAR) \
 	    --output=src/gen_grammar.pir \
@@ -62,23 +78,37 @@ src/gen_actions.pir: $(NQP) $(PCT) src/p
 src/gen_builtins.pir: $(BUILTINS_PIR)
 	$(CAT) $(BUILTINS_PIR) >src/gen_builtins.pir
 
-$(SQUAAK_GROUP): $(PARROT) $(PMC_SOURCES)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) generate $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) compile $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) linklibs $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) copy --destination=$(PARROT_DYNEXT) $(PMCS)
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	./installable_$(TMPL)@exe@
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(TMPL)@exe@
+	$(POD2MAN) squaak.pir > $(DESTDIR)$(MANDIR)/man1/parrot-$(TMPL).1
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+
+installable : installable_$(TMPL)@exe@
+	$(CP) installable_$(TMPL)@exe@ $(BUILD_DIR)
+
+installable_$(TMPL)@exe@ : $(TMPL).pbc
+	$(PBC_TO_EXE) $(TMPL).pbc --install
 
 # regenerate the Makefile
 Makefile: config/makefiles/root.in
-	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=squaak
+	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=$(TMPL)
 
 # This is a listing of all targets, that are meant to be called by users
 help:
 	@echo ""
 	@echo "Following targets are available for the user:"
 	@echo ""
-	@echo "  all:               squaak.pbc"
+	@echo "  build:             squaak.pbc"
 	@echo "                     This is the default."
+	@echo "  all:               squaak.pbc squaak.exe installable"
+	@echo "  installable:       Create self-hosting bins and libs."
+	@echo "  install:           Install the installable targets and docs."
+	@echo ""
 	@echo "Testing:"
 	@echo "  test:              Run the test suite."
 	@echo "  testclean:         Clean up test results."
@@ -102,18 +132,7 @@ CLEANUPS = \
   squaak.pbc \
   src/gen_grammar.pir \
   src/gen_actions.pir \
-  src/gen_builtins.pir \
-  $(PMC_DIR)/*.h \
-  $(PMC_DIR)/*.c \
-  $(PMC_DIR)/*.dump \
-  $(PMC_DIR)/*$(O) \
-  $(PMC_DIR)/*$(LOAD_EXT) \
-  $(PMC_DIR)/*.exp \
-  $(PMC_DIR)/*.ilk \
-  $(PMC_DIR)/*.manifest \
-  $(PMC_DIR)/*.pdb \
-  $(PMC_DIR)/*.lib \
-
+  src/gen_builtins.pir
 
 clean:
 	$(RM_RF) $(CLEANUPS)
@@ -124,3 +143,8 @@ realclean: clean
 distclean: realclean
 
 
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/unlambda/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/unlambda/config/makefiles/root.in
+++ parrot-svn/languages/unlambda/config/makefiles/root.in
@@ -1,14 +1,22 @@
 # Copyright (C) 2008, The Perl Foundation.
-# $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 # Makefile for languages/unlambda
 
 # configuration settings
-BUILD_DIR       = @build_dir@
+TMPL	      = unlambda
+BUILD_DIR     = @build_dir@
+LOAD_EXT      = @load_ext@
+O             = @o@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
 
 # Set up commands
 PERL            = @perl@
 RM_F            = @rm_f@
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
 RECONFIGURE     = $(PERL) @build_dir@/tools/dev/reconfigure.pl
 #CONDITIONED_LINE(darwin):
 #CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
@@ -51,3 +59,9 @@ realclean: clean
 # testing
 test: build
 	$(PERL) t/harness
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/urm/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/urm/config/makefiles/root.in
+++ parrot-svn/languages/urm/config/makefiles/root.in
@@ -1,4 +1,4 @@
-# $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 # Makefile for languages/urm
 
@@ -12,23 +12,32 @@ RECONFIGURE   = $(PERL) @build_dir@/tool
 #CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
 #CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
 
-default: build
+default: all
 
 help :
 	@echo ""
 	@echo "Following targets are available for the user:"
 	@echo ""
+	@echo "  all:               This is the default."
 	@echo "  build:             Just check whether 'urmc' compiles"
-	@echo "                     This is the default."
+	@echo "  installable:       Create self-hosting bins and libs."
+	@echo "  install:           Install the installable targets and docs."
 	@echo ""
-	@echo "  test:              run the test suite,"
-	@echo ""
-	@echo "  clean:             clean up temporary files"
-	@echo ""
-	@echo "  realclean:         clean up generated files"
+	@echo "Testing:"
+	@echo "  test:              Run the test suite."
+	@echo "  test-installable:  Test self-hosting targets."
+	@echo "  testclean:         Clean up test results."
+	@echo ""
+	@echo "Cleaning:"
+	@echo "  clean:             Basic cleaning up."
+	@echo "  realclean:         Removes also files generated by 'Configure.pl'"
+	@echo "  distclean:         Removes also anything built, in theory"
 	@echo ""
+	@echo "Misc:"
 	@echo "  help:              print this help message"
 
+all: build
+
 # regenerate the Makefile
 Makefile: config/makefiles/root.in
 	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=urm
@@ -47,6 +56,14 @@ examples: build
 build: 
 	$(PERL) -c urmc
 
+# TODO: rename build_dir. basic run for missing libs
+test-installable : test
+
+install : build
+	$(CP) urmc $(DESTDIR)$(BIN_DIR)/parrot-urmc
+
+installable: build
+
 clean:
 	$(RM_F) \
 		core "*.pbc" "*~" "foo.p*" \
@@ -60,4 +77,11 @@ clean:
 
 realclean: clean
 	$(RM_F) Makefile
-	
+
+distclean: clean realclean
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/PIR/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/PIR/config/makefiles/root.in
+++ parrot-svn/languages/PIR/config/makefiles/root.in
@@ -1,4 +1,4 @@
-# $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 ## arguments we want to run parrot with
 PARROT_ARGS =
@@ -13,6 +13,8 @@ LN_S          = @lns@
 PERL          = @perl@
 RM_RF         = @rm_rf@
 CP            = @cp@
+MKPATH        = @mkpath@
+POD2MAN       = pod2man
 PARROT        = ../../parrot@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
@@ -102,7 +104,7 @@ src/pasm/gen_pasm_instr.pbc: src/pasm/ge
 
 src/pasm/gen_pasm_args.pbc: src/pasm/gen_pasm_args.pir
 	$(PARROT) --output-pbc -o src/pasm/gen_pasm_args.pbc src/pasm/gen_pasm_args.pir
-	
+
 src/pasm/gen_pasm_io.pbc: src/pasm/gen_pasm_io.pir
 	$(PARROT) --output-pbc -o src/pasm/gen_pasm_io.pbc src/pasm/gen_pasm_io.pir
 
@@ -111,7 +113,7 @@ src/pasm/gen_pasm_pmc.pbc: src/pasm/gen_
 
 src/pasm/gen_pasm_core.pbc: src/pasm/gen_pasm_core.pir
 	$(PARROT) --output-pbc -o src/pasm/gen_pasm_core.pbc src/pasm/gen_pasm_core.pir
-	
+
 # regenerate the Makefile
 Makefile: config/makefiles/root.in
 	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=PIR
@@ -177,3 +179,9 @@ realclean: clean
 	$(RM_RF) Makefile
 
 distclean: realclean
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/WMLScript/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/WMLScript/config/makefiles/root.in
+++ parrot-svn/languages/WMLScript/config/makefiles/root.in
@@ -1,6 +1,7 @@
 # Copyright (C) 2006-2007, The Perl Foundation.
-# $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
+TMPL    = WMLScript
 RM_F    = @rm_f@
 PERL    = @perl@
 PARROT  = ../../parrot@exe@
@@ -12,7 +13,14 @@ PMCDIR   = pmc
 OPSDIR   = ops
 O        = @o@
 LOAD_EXT = @load_ext@
+BUILD_DIR     = @build_dir@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
 PARROT_DYNEXT = @build_dir@/runtime/parrot/dynext
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
+RECONFIGURE   = $(PERL) @build_dir@/tools/dev/reconfigure.pl
 #CONDITIONED_LINE(darwin):
 #CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
 #CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
@@ -49,6 +57,9 @@ GEN_PIR = \
  src/opcode.pir \
  src/stdlibs.pir
 
+DOCS = \
+ MAINTAINER doc/running.pod doc/status.pod
+
 all: \
  pmc/wmls_group$(LOAD_EXT) \
  ops/wmls_ops$(LOAD_EXT) \
@@ -91,6 +102,44 @@ $(LIBPATH)/wmlsstring.pbc: $(LIBPATH)/wm
 $(LIBPATH)/wmlsconsole.pbc: $(LIBPATH)/wmlsconsole.pir
 	$(PARROT) --output=$(LIBPATH)/wmlsconsole.pbc $(LIBPATH)/wmlsconsole.pir
 
+wmls2pir@exe@: wmls2pir.pbc
+	$(PBC_TO_EXE) wmls2pir.pbc
+
+wmls2pbc@exe@: wmls2pbc.pbc
+	$(PBC_TO_EXE) wmls2pbc.pbc
+
+wmlsd@exe@: wmlsd.pbc
+	$(PBC_TO_EXE) wmlsd.pbc
+
+wmlsi@exe@: wmlsi.pbc
+	$(PBC_TO_EXE) wmlsi.pbc
+
+installable_wmls2pir@exe@: wmls2pir.pbc
+	$(PBC_TO_EXE) wmls2pir.pbc --install
+
+installable_wmls2pbc@exe@: wmls2pbc.pbc
+	$(PBC_TO_EXE) wmls2pbc.pbc --install
+
+installable_wmlsd@exe@: wmlsd.pbc
+	$(PBC_TO_EXE) wmlsd.pbc --install
+
+installable_wmlsi@exe@: wmlsi.pbc
+	$(PBC_TO_EXE) wmlsi.pbc --install
+
+install : installable
+	$(CP) installable_wmls2pir@exe@ $(DESTDIR)$(BIN_DIR)/parrot-wmls2pir@exe@
+	$(CP) installable_wmls2pbc@exe@ $(DESTDIR)$(BIN_DIR)/parrot-wmls2pbc@exe@
+	$(CP) installable_wmlsd@exe@ $(DESTDIR)$(BIN_DIR)/parrot-wmlsd@exe@
+	$(CP) installable_wmlsi@exe@ $(DESTDIR)$(BIN_DIR)/parrot-wmlsi@exe@
+	@cd $(PMCDIR) && $(PMCBUILD) copy "--destination=$(DESTDIR)$(LIB_DIR)/parrot/dynext" $(PMCS)
+	@cd $(OPSDIR) && $(OPSBUILD) copy "--destination=$(DESTDIR)$(LIB_DIR)/parrot/dynext" $(OPSLIB)
+	$(POD2MAN) pod/running.pod > $(DESTDIR)$(MANDIR)/man1/parrot-wmls.5
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+
+installable: installable_wmls2pir@exe@ installable_wmls2pbc@exe@ \
+             installable_wmlsd@exe@ installable_wmlsi@exe@
+
 help:
 	@echo ""
 	@echo "Following targets are available for the user:"
@@ -146,3 +195,8 @@ realclean: clean
 
 distclean: realclean
 
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/Zcode/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/Zcode/config/makefiles/root.in
+++ parrot-svn/languages/Zcode/config/makefiles/root.in
@@ -1,11 +1,14 @@
-# $Id: root.in 28657 2008-06-23 00:33:41Z coke $
+# $Id: root.in 30597 2008-08-27 18:31:51Z moritz $
 
 # Makefile for languages/Zcode
+TMPL	      = Zcode
 
 # Setup of some commands
+BUILD_DIR  = @build_dir@
 PARROT     = ../../parrot@exe@
 PERL       = @perl@
 RM_F       = @rm_f@
+RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
 #CONDITIONED_LINE(darwin):
 #CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
 #CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
@@ -27,9 +30,7 @@ help :
 	@echo "                     Requires an Inform compiler!"
 	@echo ""
 	@echo "  clean:             clean up temporary files (none presently)"
-	@echo ""
 	@echo "  realclean:         clean up generated files"
-	@echo ""
 	@echo "  maintclean:        clean up Z-code files"
 	@echo ""
 	@echo "  help:              print this help message"
@@ -54,6 +55,10 @@ examples: $(EXAMPLES)
 .inf.z3:
 	inform $< $@
 
+# regenerate the Makefile
+Makefile: config/makefiles/root.in
+	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=$(TMPL)
+
 clean:
 	@echo "No temp files to clean"
 
@@ -64,3 +69,9 @@ realclean: clean
 
 maintclean: realclean
 	$(RM_F) $(EXAMPLES) $(TEST_ZFILES)
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/tcl/config/makefiles/examples.in
===================================================================
--- parrot-svn.orig/languages/tcl/config/makefiles/examples.in
+++ parrot-svn/languages/tcl/config/makefiles/examples.in
@@ -1,16 +1,22 @@
 PARROT = ../../../parrot@exe@
-PARROT_ARRGS = --gc-debug
+PARROT_ARGS = --gc-debug
 
 default:
 	@echo "to run <foo>.tcl, type 'make <foo>'"
 	@echo "to run an interactive tclsh, type 'make tclsh'"
 
 %:%.tcl
-	$(PARROT) $(PARROT_ARRGS)  ../tcl.pbc $@.tcl
+	$(PARROT) $(PARROT_ARGS)  ../tcl.pbc $@.tcl
 
 tclsh:
-	$(PARROT) $(PARROT_ARRGS) ../tcl.pbc
+	$(PARROT) $(PARROT_ARGS) ../tcl.pbc
 
 # (for development testing)
 test:
-	$(PARROT) -tf $(PARROT_ARRGS) ../tcl.pbc foo.tcl
+	$(PARROT) -tf $(PARROT_ARGS) ../tcl.pbc foo.tcl
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/perl6/config/makefiles/utils.in
===================================================================
--- parrot-svn.orig/languages/perl6/config/makefiles/utils.in
+++ parrot-svn/languages/perl6/config/makefiles/utils.in
@@ -1,18 +1,25 @@
-# $Id: utils.in 25400 2008-02-01 07:32:20Z chromatic $
+# $Id: utils.in 30597 2008-08-27 18:31:51Z moritz $
 
 ## arguments we want to run parrot with
+TMPL        = perl6doc
 PARROT_ARGS =
 
 ## configuration settings
 BUILD_DIR     = @build_dir@
 LOAD_EXT      = @load_ext@
 O             = @o@
+BIN_DIR       = @bin_dir@
+LIB_DIR       = @lib_dir@
+DOC_DIR       = @doc_dir@
+MANDIR	      = @mandir@
 
 ## Setup some commands
 LN_S          = @lns@
 PERL          = @perl@
 RM_RF         = @rm_rf@
 CP            = @cp@
+MKPATH        = @mkpath@
+POD2MAN       = pod2man
 MAKE          = @make_c@
 PARROT        = ../../../../parrot@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
@@ -63,6 +70,9 @@ help:
 	@echo ""
 	@echo "  all:               perl6doc.pbc"
 	@echo "                     This is the default."
+	@echo "  installable:       Create self-hosting binaries."
+	@echo "  install:           Install the installable targets and docs."
+	@echo ""
 	@echo "Testing:"
 	@echo "  test:              Run the test suite."
 	@echo "  testclean:         Clean up test results."
@@ -76,6 +86,20 @@ help:
 	@echo "  help:              Print this help message."
 	@echo ""
 
+installable_perl6doc@exe@: perl6doc.pbc
+	$(PBC_TO_EXE) perl6doc.pbc --install
+
+install : installable
+	$(CP) installable_$(TMPL)@exe@ $(DESTDIR)$(BIN_DIR)/$(TMPL)@exe@
+
+installable : installable_$(TMPL)@exe@
+	$(CP) installable_$(TMPL)@exe@ $(BUILD_DIR)
+
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	./installable_$(TMPL)@exe@ -f 'test'
+
+
 test: all
 	$(PERL) t/harness t/01-sanity
 
@@ -97,3 +121,9 @@ realclean: clean
 	$(RM_RF) Makefile
 
 distclean: realclean
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/perl6/src/utils/perl6doc.pir
===================================================================
--- parrot-svn.orig/languages/perl6/src/utils/perl6doc.pir
+++ parrot-svn/languages/perl6/src/utils/perl6doc.pir
@@ -51,10 +51,8 @@ Creates the Perl 6 document reader by su
     ##  set the $usage attribute
     $P0 = new 'String'
     $P0 = <<'USAGE'
-Usage: perl6 [switches] [--] [programfile] [arguments]
+Usage: perl6doc [switches] [--] [podfile]
   -h, --help           display this help text
-  --target=[stage]     specify compilation stage to emit
-  -t, --trace=[flags]  enable trace flags
   -V, --version        display version information
 USAGE
     setattribute self, '$usage', $P0
Index: parrot-svn/languages/tcl/config/makefiles/root.in
===================================================================
--- parrot-svn.orig/languages/tcl/config/makefiles/root.in
+++ parrot-svn/languages/tcl/config/makefiles/root.in
@@ -1,10 +1,13 @@
+# $Id: root.in 30601 2008-08-27 20:21:39Z moritz $
+TMPL    = tcl
 RM_F    = @rm_f@
 PERL    = @perl@
-PARROT  = ../../parrot@exe@
+POD2MAN = pod2man
 
 BUILD_DIR   = @build_dir@
+PARROT      = $(BUILD_DIR)/parrot@exe@
+PBC_TO_EXE  = $(BUILD_DIR)/pbc_to_exe@exe@
 RECONFIGURE = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
-PBC_TO_EXE    = $(BUILD_DIR)/pbc_to_exe@exe@
 #CONDITIONED_LINE(darwin):
 #CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
 #CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@
@@ -12,20 +15,28 @@ PBC_TO_EXE    = $(BUILD_DIR)/pbc_to_exe@
 TCL_LIB   = library
 PMCBUILD  = $(PERL) @build_dir@/tools/build/dynpmc.pl
 OPSBUILD  = $(PERL) @build_dir@/tools/build/dynoplibs.pl
-DESTDIR   = @build_dir@/runtime/parrot/dynext
+PARROT_DYNEXT = @build_dir@/runtime/parrot/dynext
 O         = @o@
 PMCDIR    = src/pmc
 OPSDIR    = src/ops
 CLASSDIR  = src/class
 LOAD_EXT  = @load_ext@
+RM_F      = @rm_f@
+MKPATH    = @mkpath@
+POD2MAN   = pod2man
 COPY      = @cp@
 RENAME    = @mv@
+BIN_DIR   = @bin_dir@
+LIB_DIR   = @lib_dir@
+DOC_DIR   = @doc_dir@
+MANDIR	  = @mandir@
 
 CC_INC     = @cc_inc@
 CC_SHARED  = @cc_shared@
 CFLAGS     = $(CC_INC) @ccflags@ @cc_debug@ @ccwarn@ @cc_hasjit@ @cg_flag@ @gc_flag@ $(CC_SHARED)
 CC         = @cc@
 
+DOCS = LICENSE MAINTAINER README.pod TODO docs/hacks.pod docs/howto.pod docs/overview.pod
 
 TGE_DIR  = ../../compilers/tge
 PERL6GRAMMAR = ../../runtime/parrot/library/PGE/Perl6Grammar.pbc
@@ -59,12 +70,14 @@ src/grammar/expr/pge2past.pir \
 $(TCL_LIB)/parray.tcl \
 $(RUNTIME_PIR)
 
-all: tcl.pbc
+build: tcl.pbc
+
+all: tcl.pbc Makefile installable
 
 tcl.pbc: $(PARROT) pmcs ops runtime/tcllib.pbc src/tclsh.pir
 	$(PARROT) --output=tcl.pbc src/tclsh.pir
 
-.SUFFIXES : .pir .pg .tg .tcl
+.SUFFIXES : .exe .pbc .pir .pg .tg .tcl
 
 .tg.pir :
 	$(PARROT) $(TGE_DIR)/tgc.pir --output=$@ $<
@@ -86,7 +99,7 @@ pmcs:
 	@cd $(PMCDIR) && $(PMCBUILD) generate $(PMCS)
 	@cd $(PMCDIR) && $(PMCBUILD) compile $(PMCS)
 	@cd $(PMCDIR) && $(PMCBUILD) linklibs $(PMCS)
-	@cd $(PMCDIR) && $(PMCBUILD) copy "--destination=$(DESTDIR)" $(PMCS)
+	@cd $(PMCDIR) && $(PMCBUILD) copy "--destination=$(PARROT_DYNEXT)" $(PMCS)
 
 # THIS WAS COPIED FROM THE ROOT MAKEFILE
 # Passing an empty argument in @ARGV to cc_flags.pl to indicate where extra -Is
@@ -101,7 +114,7 @@ ops: src/binary$(O)
 	@cd $(OPSDIR) && $(OPSBUILD) generate tcl
 	@cd $(OPSDIR) && $(OPSBUILD) compile  tcl
 	@cd $(OPSDIR) && $(OPSBUILD) linklibs tcl ../binary$(O)
-	@cd $(OPSDIR) && $(OPSBUILD) copy "--destination=$(DESTDIR)" tcl
+	@cd $(OPSDIR) && $(OPSBUILD) copy "--destination=$(PARROT_DYNEXT)" tcl
 
 runtime/builtins.pir: $(DEPS) tools/gen_builtins.pl
 	$(PERL) tools/gen_builtins.pl > runtime/builtins.pir
@@ -118,6 +131,25 @@ tclsh@exe@: tcl.pbc $(PBC_TO_EXE)
 $(PBC_TO_EXE):
 	$(MAKE) $(BUILD_DIR) ./pbc_to_exe@exe@
 
+installable : installable_tclsh@exe@
+
+installable_tclsh@exe@: tcl.pbc
+	$(PBC_TO_EXE) tcl.pbc --install
+	$(RENAME) installable_tcl@exe@ installable_tclsh@exe@
+
+# TODO: rename build_dir. basic run for missing libs
+test-installable : installable
+	./installable_tclsh@exe@ tcl_misc_28.tcl
+
+install : installable
+	$(COPY) installable_tclsh@exe@ $(DESTDIR)$(BIN_DIR)/parrot-tclsh@exe@
+	@cd $(OPSDIR) && $(OPSBUILD) copy "--destination=$(DESTDIR)$(LIB_DIR)/parrot/dynext" tcl
+	@cd $(PMCDIR) && $(PMCBUILD) copy "--destination=$(DESTDIR)$(LIB_DIR)/parrot/dynext" $(PMCS)
+	$(COPY) runtime/tcllib.pbc $(DESTDIR)$(LIB_DIR)/parrot/library
+	$(POD2MAN) README.pod > $(DESTDIR)$(MANDIR)/man1/parrot-tclsh.1
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+	$(COPY) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(TMPL)
+
 test: tcl.pbc
 	prove -r t
 
@@ -311,7 +343,9 @@ src/grammar/expr/pge2past.pir \
 "$(OPSDIR)/*.lib" \
 "$(OPSDIR)/*.pdb" \
 "$(TCL_LIB)/*.pir" \
-lib/*.pre_c
+lib/*.pre_c \
+installable_tclsh@exe@ \
+tcl@exe@ tclsh@exe@
 
 # that last line should be cleaned up for x-platform.
 
@@ -327,3 +361,9 @@ distclean: realclean
 Makefile: config/makefiles/root.in
 	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=tcl
 
+
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/compilers/ncigen/config/makefiles/ncigen.in
===================================================================
--- parrot-svn.orig/compilers/ncigen/config/makefiles/ncigen.in
+++ parrot-svn/compilers/ncigen/config/makefiles/ncigen.in
@@ -14,6 +14,7 @@ PERL          = @perl@
 RM_RF         = @rm_rf@
 CP            = @cp@
 PARROT        = ../../parrot@exe@
+PBC_TO_EXE    = ../../pbc_to_exe@exe@
 CAT           = $(PERL) -MExtUtils::Command -e cat
 BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
 RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
@@ -25,26 +26,18 @@ PERL6GRAMMAR  = $(PGE_LIBRARY)/Perl6Gram
 NQP           = $(BUILD_DIR)/compilers/nqp/nqp.pbc
 PCT           = $(BUILD_DIR)/runtime/parrot/library/PCT.pbc
 
-PMC_DIR       = src/pmc
-
 all: c99.pbc
 
-C_GROUP = $(PMC_DIR)/c_group$(LOAD_EXT)
-
 SOURCES = c99.pir \
   src/gen_grammar.pir \
   src/gen_actions.pir \
   src/gen_builtins.pir \
   src/c99AST.pir \
-  src/NCIPIR.pir \
-#  $(C_GROUP)
+  src/NCIPIR.pir
 
 BUILTINS_PIR = \
   src/builtins/say.pir \
 
-# PMCS = c
-# PMC_SOURCES = $(PMC_DIR)/c.pmc
-
 # the default target
 c99.pbc: $(PARROT) $(SOURCES)
 	$(PARROT) $(PARROT_ARGS) -o c99.pbc c99.pir
@@ -61,18 +54,12 @@ src/gen_actions.pir: $(NQP) $(PCT) src/p
 src/gen_builtins.pir: $(BUILTINS_PIR)
 	$(CAT) $(BUILTINS_PIR) >src/gen_builtins.pir
 
-$(C_GROUP): $(PARROT) $(PMC_SOURCES)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) generate $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) compile $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) linklibs $(PMCS)
-	cd $(PMC_DIR) && $(BUILD_DYNPMC) copy --destination=$(PARROT_DYNEXT) $(PMCS)
-
 # This is a listing of all targets, that are meant to be called by users
 help:
 	@echo ""
 	@echo "Following targets are available for the user:"
 	@echo ""
-	@echo "  all:               c.pbc"
+	@echo "  all:               c99.pbc"
 	@echo "                     This is the default."
 	@echo "Testing:"
 	@echo "  test:              Run the test suite."
@@ -97,18 +84,7 @@ CLEANUPS = \
   c99.pbc \
   src/gen_grammar.pir \
   src/gen_actions.pir \
-  src/gen_builtins.pir \
-  $(PMC_DIR)/*.h \
-  $(PMC_DIR)/*.c \
-  $(PMC_DIR)/*.dump \
-  $(PMC_DIR)/*$(O) \
-  $(PMC_DIR)/*$(LOAD_EXT) \
-  $(PMC_DIR)/*.exp \
-  $(PMC_DIR)/*.ilk \
-  $(PMC_DIR)/*.manifest \
-  $(PMC_DIR)/*.pdb \
-  $(PMC_DIR)/*.lib \
-
+  src/gen_builtins.pir
 
 clean:
 	$(RM_RF) $(CLEANUPS)
@@ -118,4 +94,8 @@ realclean: clean
 
 distclean: realclean
 
-
+#
+# Local variables:
+# mode: makefile
+# ex: ft=make
+# End:
Index: parrot-svn/languages/pipp/src/common/pipp.pir
===================================================================
--- parrot-svn.orig/languages/pipp/src/common/pipp.pir
+++ parrot-svn/languages/pipp/src/common/pipp.pir
@@ -73,7 +73,6 @@ Bernhard Schmalhofer - L<Bernhard.Schmal
 
     load_bytecode 'config.pbc'
 
-    load_bytecode 'config.pbc'
     load_bytecode 'PGE.pbc'
     load_bytecode 'PGE/Text.pbc'
     load_bytecode 'PGE/Util.pbc'
@@ -84,17 +83,21 @@ Bernhard Schmalhofer - L<Bernhard.Schmal
     # determine location of libs from the Parrot config
     .local pmc cfg
     cfg  = _config()
-    .local string lib_dir, pbc_fn
-    lib_dir = cfg['build_dir']
-    lib_dir .= '/languages/pipp/src/common'
+    .local string installed, lib_dir, pbc_fn
+    lib_dir = ''
+    installed = cfg['installed']
+    if installed goto inst
 
-    pbc_fn = concat lib_dir, '/pipplib.pbc'
+    lib_dir = cfg['build_dir']
+    lib_dir .= '/languages/pipp/src/common/'
+inst:
+    pbc_fn = concat lib_dir, 'pipplib.pbc'
     load_bytecode pbc_fn
-    pbc_fn = concat lib_dir, '/php_ctype.pbc'
+    pbc_fn = concat lib_dir, 'php_ctype.pbc'
     load_bytecode pbc_fn
-    pbc_fn = concat lib_dir, '/php_gmp.pbc'
+    pbc_fn = concat lib_dir, 'php_gmp.pbc'
     load_bytecode pbc_fn
-    pbc_fn = concat lib_dir, '/php_pcre.pbc'
+    pbc_fn = concat lib_dir, 'php_pcre.pbc'
     load_bytecode pbc_fn
 
     load_bytecode 'CGI/QueryHash.pbc'
Index: parrot-svn/languages/tcl/src/tclsh.pir
===================================================================
--- parrot-svn.orig/languages/tcl/src/tclsh.pir
+++ parrot-svn/languages/tcl/src/tclsh.pir
@@ -11,6 +11,12 @@
 .include 'languages/tcl/src/returncodes.pasm'
 .include 'languages/tcl/src/macros.pir'
 
+.sub '__onload' :load :init
+
+
+
+.end
+
 .macro set_tcl_argv()
   argc = argv # update
   .local pmc tcl_argv
@@ -32,7 +38,19 @@
 .sub _main :main
   .param pmc argv
 
-  load_bytecode 'languages/tcl/runtime/tcllib.pbc'
+  # determine location of libs from the Parrot config
+  .local pmc cfg
+  cfg  = _config()
+  .local string installed, lib_dir, pbc_fn
+  lib_dir = ''
+  installed = cfg['installed']
+  if installed goto inst
+
+  lib_dir = cfg['build_dir']
+  lib_dir .= 'languages/tcl/runtime/'
+inst:
+  pbc_fn = concat lib_dir, 'tcllib.pbc'
+  load_bytecode pbc_fn
 
   .local pmc retval
   .local string mode,contents,filename
Index: parrot-svn/languages/forth/forth.pir
===================================================================
--- parrot-svn.orig/languages/forth/forth.pir
+++ parrot-svn/languages/forth/forth.pir
@@ -5,10 +5,25 @@
 .include 'languages/forth/words.pir'
 
 .sub ' init' :load
+
+    # determine location of libs from the Parrot config
+    .local pmc cfg
+    cfg  = _config()
+    .local string installed, lib_dir, pbc_fn
+    lib_dir = 'forth_'
+    installed = cfg['installed']
+    if installed goto inst
+
+    lib_dir = cfg['build_dir']
+    lib_dir .= 'languages/forth/'
+inst:
     # load the libraries we depend on
-    load_bytecode 'languages/forth/tokenstream.pbc'
-    load_bytecode 'languages/forth/variablestack.pbc'
-    load_bytecode 'languages/forth/virtualstack.pbc'
+    pbc_fn = concat lib_dir, 'tokenstream.pbc'
+    load_bytecode pbc_fn
+    pbc_fn = concat lib_dir, 'variablestack.pbc'
+    load_bytecode pbc_fn
+    pbc_fn = concat lib_dir, 'virtualstack.pbc'
+    load_bytecode pbc_fn
 
     # initialize the rstack
     .local pmc stack
