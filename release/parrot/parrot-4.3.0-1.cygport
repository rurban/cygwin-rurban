# -*- sh -*-
DESCRIPTION="Parrot Virtual Machine"
HOMEPAGE="http://www.parrot.org/"
# releases/supported or releases/devel
SRC_URI="ftp://ftp.parrot.org/pub/parrot/releases/supported/${PV}/${PN}-${PV}.tar.bz2"
LICENSE="Artistic2"
DIFF_EXCLUDES="parrot.pc myconfig config_lib.pir Makefile TAGS"
DLLVER=$(echo $PV|sed -e's,\.,_,g')
cygwin2=$(uname -r|grep "1.7.")
DOCDIR="/usr/share/doc"
PKG_NAMES="${PN} ${PN}-devel ${PN}-docs"
PKG_HINTS="${PKG_NAMES}"
# opengl now via X11, not native
DISPLAY=localhost:0
PKG_CONFIG_PATH=.:/usr/lib/pkgconfig:/usr/share/pkgconfig

parrot_exists_check() {
  #/usr/local/lib/parrot /usr/lib/parrot
  inst="/usr/bin/parrot_config.exe /usr/lib/libparrot.dll.a /usr/local/lib/libparrot.dll.a"
  for d in $inst; do
    if [ -e $d ]; then
      # With the local cygwin patches until 0.8.1 it did work, but this was not
      # accepted upstream, so we have to live with this limitation.
      # echo "Testing with $d is brave and might not work"
      echo "Building and testing with $d is not yet supported! Remove or rename first."
    fi
  done
  for d in $inst; do if [ -e $d ]; then exit; fi; done
}

src_compile() {
  cd ${B}

  test -e Configure.pl || lndirs
  test -e config_lib.pir && make realclean

  # unsupported
  # --srcdir=/usr/lib/parrot/${PV}/src
  perl Configure.pl --prefix=/usr --optimize --mandir=/usr/share/man --with-llvm --verbose
  # patch libffi-4
  sed -i -e's,-lreadline -lintl,-lreadline -lintl /usr/bin/cygffi-4.dll,' \
	 -e's,-fstack-protector -L/usr/local/lib,-fstack-protector -L/usr/local/lib /usr/bin/cygffi-4.dll,' \
	config_lib.pir
  # only cygwin-1.5 -Ddoc_dir=/usr/share/doc/${P} needs to be patched for cygwin. 
  if [ -z "$cygwin2" ]; then
    sed -e"s,/usr/share/doc/parrot/${PV}\",/usr/share/doc/${P}\"," -i config_lib.pir
  fi

  parrot_exists_check
  cygmake all 
  cygmake installable
  cygmake -C editor pir.vim
  cygmake docs
  cygmake html

  for pir in runtime/parrot/library/*.pir
  do 
      pbc=$(echo "$pir"|sed 's,.pir$,.pbc,')
      test -e $pbc || make $pbc
  done

  cat >>myconfig <<EOF
  Locally applied patches:
    minor make install fixes
EOF
}

src_check () {
  cd ${B}
  parrot_exists_check
  cygtest
}

src_install () {
  cd ${B}
  parrot_exists_check
  man1=${D}/usr/share/man/man1
  mkdir -p $man1

  # already in core now
  make install DESTDIR=${D}
  make install-dev DESTDIR=${D}
  make install-doc DESTDIR=${D}

  # now fix the wrong build_dir in the pbc_to_exe files
  sed -e"s,\"${B}\",\"/usr\"," \
      < config_lib.pir > ${D}/usr/lib/${PN}/${PV}/include/config_lib.pir
  # said who? gentoo or freebsd
  insinto /usr/lib/${PN}
  doins parrotbug

  insinto /usr/lib/parrot/${PV}
  doins myconfig

  # necessary for mod_parrot-0.3
  #insinto /usr/lib/${PN}/${PV}/src/
  #doins "${B}/src/install_config.o" "${B}/src/null_config.o" "${B}/src/parrot_config.o"

  #pod2html DEPRECATED.pod > DEPRECATED.html
  #dodoc ABI_CHANGES ChangeLog CREDITS README_cygwin.pod DONORS.pod TODO DEPRECATED.pod

  # editor support (make vim-install installs into ~/.vim/)
  insinto /usr/share/emacs/site-lisp
  doins ${B}/editor/*.el
  pod2text ${B}/editor/README.pod > ${D}/usr/share/emacs/site-lisp/parrot.README
  # put this into ~/.vim/ or to the global vim dirs?
  insinto /usr/share/vim/vimfiles/syntax
  doins ${B}/editor/pir_vim.in ${B}/editor/indent_pir.vim ${B}/editor/pasm.vim ${B}/editor/pmc.vim
  mkdir -p ${D}/usr/share/vim/vimfiles/ftplugin
  cp ${B}/editor/filetype_parrot.vim ${D}/usr/share/vim/vimfiles/ftplugin/parrot.vim
  mkdir -p ${D}/etc/defaults/.vim
  cp ${B}/editor/mk_skeleton.pir ${D}/etc/defaults/.vim/

  # man(1) for the main binaries
  man1=${D}/usr/share/man/man1
  for b in frontend/*/main.c; do
    dir=`dirname $b`
    pod2man $b > $man1/`basename $dir`.1
  done
  for b in docs/binaries/*.pod; do 
    pod2man $b > $man1/`basename $b .pod`.1
  done

  cd $man1
  for f in *.1; do
    b=$(basename $f .1)
    if [ -e ${D}/usr/bin/$b.exe ]; then
      test -s $f || rm $f
      gzip $f
    else
      rm $f
    fi
  done

  cd ${B}
  mkdir -p ${D}/usr/share/doc/parrot/${PV}/
  cp -r ${B}/docs/html ${D}/usr/share/doc/parrot/${PV}/
  #insinto /usr/share/doc/parrot/${PV}/docs
  #doins ${B}/docs/html

  #for p in ${PKG_NAMES}; do
  #  tar tfj $p-$PV.tar.bz2 | perl -lne'print "  $_" unless m{/$}' > $p-$PV.lst
  #done
}

# parrot
PKG_CONTENTS[0]=" \
--exclude=usr/include \
--exclude=usr/share/doc/parrot/${PV}/languages \
--exclude=usr/share/doc/parrot/${PV}/PBC_COMPAT \
--exclude=usr/share/doc/parrot/${PV}/html \
etc/defaults \
usr/bin \
usr/share \
usr/lib/parrot/parrotbug \
usr/lib/parrot/${PV}/myconfig \
usr/lib/parrot/${PV}/VERSION \
usr/lib/parrot/${PV}/dynext \
usr/lib/parrot/${PV}/library \
usr/lib/parrot/${PV}/languages \
usr/lib/parrot/${PV}/include/config_lib.pir \
usr/lib/parrot/${PV}/include/*.pasm \
usr/lib/parrot/${PV}/include/config.fpmc \
"

# parrot-devel
PKG_CONTENTS[1]=" \
--exclude=usr/lib/parrot/${PV}/dynext \
--exclude=usr/lib/parrot/${PV}/languages \
--exclude=usr/lib/parrot/${PV}/library \
--exclude=usr/lib/parrot/${PV}/myconfig \
--exclude=usr/lib/parrot/parrotbug \
--exclude=usr/lib/parrot/${PV}/VERSION \
--exclude=usr/lib/parrot/${PV}/include/config_lib.pir \
--exclude=usr/lib/parrot/${PV}/include/*.pasm \
--exclude=usr/lib/parrot/${PV}/include/config.fpmc \
--exclude=usr/share/doc/parrot/${PV}/html \
usr/include \
usr/lib \
usr/share/doc/parrot/${PV}/PBC_COMPAT \
usr/src/parrot \
"

# parrot-docs
PKG_CONTENTS[2]=" \
usr/share/doc/parrot/${PV}/html"
