--- origsrc/rakudo-2009-04/Configure.pl	2009-04-05 16:27:53.000000000 +0200
+++ src/rakudo-2009-04/Configure.pl	2009-04-25 19:10:43.765625000 +0200
@@ -81,6 +81,16 @@ sub read_parrot_config {
             last if %config;
         }
     }
+    # installed logic:
+    my $installed = $config{build_dir} ne $config{prefix};
+    $config{parrotlib_dir} = $installed ? $config{libdir}.$config{versiondir}
+                                        : $config{build_dir}.'/runtime/parrot';
+    $config{parrotbin_dir} = $installed ? $config{bindir}
+                                        : $config{build_dir};
+    $config{compilers_dir} = $installed ? $config{parrotlib_dir}.'/languages'
+                                        : $config{parrotlib_dir}.'/compilers';
+    $config{perl5lib_dir}  = $installed ? $config{parrotlib_dir}.'/tools'
+                                        : $config{parrotlib_dir};
     return %config;
 }
 
@@ -91,7 +101,7 @@ sub create_makefile {
 
     my $maketext = slurp( 'build/Makefile.in' );
 
-    $config{'win32_libparrot_copy'} = $^O eq 'MSWin32' ? 'copy $(BUILD_DIR)\libparrot.dll .' : '';
+    $config{'win32_libparrot_copy'} = $^O eq 'MSWin32' ? 'copy $(BUILD_DIR)\libparrot.dll .' : '@echo ""';
     $maketext =~ s/@(\w+)@/$config{$1}/g;
     if ($^O eq 'MSWin32') {
         $maketext =~ s{/}{\\}g;
--- origsrc/rakudo-2009-04/build/Makefile.in	2009-04-23 07:09:10.000000000 +0200
+++ src/rakudo-2009-04/build/Makefile.in	2009-04-25 11:47:52.640625000 +0200
@@ -12,25 +12,35 @@ EXE           = @exe@
 MAKE          = @make_c@
 PERL          = @perl@
 RM_F          = @rm_f@
+MKPATH        = @mkpath@
+CP            = @cp@
 HAS_ICU       = @has_icu@
 
 # Various paths
-PARROT_DYNEXT = $(BUILD_DIR)/runtime/parrot/dynext
-PERL6GRAMMAR  = $(BUILD_DIR)/runtime/parrot/library/PGE/Perl6Grammar.pbc
-NQP           = $(BUILD_DIR)/compilers/nqp/nqp.pbc
-PCT           = $(BUILD_DIR)/runtime/parrot/library/PCT.pbc
+LIB_DIR       = @parrotlib_dir@
+BIN_DIR       = @parrotbin_dir@
+COMPILERS_DIR = @compilers_dir@
+PERL5LIB_DIR  = @perl5lib_dir@
+MANDIR        = @mandir@
+DOC_DIR       = @doc_dir@
+
+PARROT_DYNEXT = $(LIB_DIR)/dynext
+PERL6GRAMMAR  = $(LIB_DIR)/library/PGE/Perl6Grammar.pbc
+NQP           = $(COMPILERS_DIR)/nqp/nqp.pbc
+PCT           = $(LIB_DIR)/library/PCT.pbc
 PMC_DIR       = src/pmc
 OPSDIR        = src/ops
 OPSLIB        = perl6
 OPS_FILE      = src/ops/perl6.ops
 
 # Setup some commands
-PARROT        = $(BUILD_DIR)/parrot$(EXE)
+PARROT        = $(BIN_DIR)/parrot$(EXE)
 CAT           = $(PERL) -MExtUtils::Command -e cat
-BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
-BUILD_DYNOPS  = $(PERL) $(BUILD_DIR)/tools/build/dynoplibs.pl
-RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
-PBC_TO_EXE    = $(BUILD_DIR)/pbc_to_exe$(EXE)
+BUILD_DYNPMC  = $(PERL) $(LIB_DIR)/tools/build/dynpmc.pl
+BUILD_DYNOPS  = $(PERL) $(LIB_DIR)/tools/build/dynoplibs.pl
+RECONFIGURE   = $(PERL) $(LIB_DIR)/tools/dev/reconfigure.pl
+PBC_TO_EXE    = $(BIN_DIR)/pbc_to_exe$(EXE)
+POD2MAN       = @pod2man@
 
 SOURCES = perl6.pir \
   src/gen_grammar.pir \
@@ -134,6 +144,8 @@ PMC_SOURCES = $(PMC_DIR)/perl6str.pmc $(
 
 PERL6_GROUP = $(PMC_DIR)/perl6_group$(LOAD_EXT)
 
+DOCS = README CREDITS LICENSE docs/*
+
 CLEANUPS = \
   perl6.pbc \
   perl6.c \
@@ -227,7 +239,7 @@ src/ops/perl6_ops$(LOAD_EXT) : $(PARROT)
 	@cd $(OPSDIR) && $(BUILD_DYNOPS) copy "--destination=$(PARROT_DYNEXT)" $(OPSLIB)
 
 $(PMC_DIR)/objectref.pmc : $(PMC_DIR)/objectref_pmc.template build/gen_objectref_pmc.pl
-	$(PERL) -I$(BUILD_DIR)/lib build/gen_objectref_pmc.pl $(PMC_DIR)/objectref_pmc.template \
+	$(PERL) -I$(PERL5LIB_DIR)/lib build/gen_objectref_pmc.pl $(PMC_DIR)/objectref_pmc.template \
 		$(PMC_DIR)/objectref.pmc
 
 
@@ -297,6 +309,30 @@ realclean: clean
 
 testclean:
 
+# install
+installable_perl6$(EXE): perl6.pbc
+	$(PBC_TO_EXE) perl6.pbc --install
+
+installable : installable_perl6@exe@ $(PERL6_GROUP) perl6.pbc
+	$(MKPATH) $(COMPILERS_DIR)/perl6
+	$(CP) perl6.pbc $(COMPILERS_DIR)/perl6/perl6.pbc
+	@cd $(PMC_DIR) && $(BUILD_DYNPMC) copy "--destination=$(PARROT_DYNEXT)" $(PMCS)
+	@cd $(OPSDIR)  && $(BUILD_DYNOPS) copy "--destination=$(PARROT_DYNEXT)" $(OPSLIB)
+
+install : installable
+	$(MKPATH) $(DESTDIR)$(BIN_DIR)
+	$(CP) installable_perl6@exe@ $(DESTDIR)$(BIN_DIR)/rakudo@exe@
+	cd $(DESTDIR)$(BIN_DIR) && ln -s rakudo@exe@ parrot-perl6 && ln -s rakudo@exe@ perl6
+	$(MKPATH) $(DESTDIR)$(COMPILERS_DIR)/perl6
+	$(CP) perl6.pbc $(DESTDIR)$(COMPILERS_DIR)/perl6/perl6.pbc
+	$(MKPATH) $(DESTDIR)$(LIB_DIR)/dynext
+	@cd $(PMC_DIR) && $(BUILD_DYNPMC) copy "--destination=$(DESTDIR)$(LIB_DIR)/dynext" $(PMCS)
+	@cd $(OPSDIR)  && $(BUILD_DYNOPS) copy "--destination=$(DESTDIR)$(LIB_DIR)/dynext" $(OPSLIB)
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/rakudo
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/rakudo
+	$(MKPATH) $(DESTDIR)$(MANDIR)/man1
+	$(POD2MAN) docs/running.pod > $(DESTDIR)$(MANDIR)/man1/perl6.1
+	$(POD2MAN) docs/running.pod > $(DESTDIR)$(MANDIR)/man1/rakudo.1
 
 ##  miscellaneous targets
 # a listing of all targets meant to be called by users
--- origsrc/rakudo-2009-04/build/gen_objectref_pmc.pl	2009-04-05 16:27:53.000000000 +0200
+++ src/rakudo-2009-04/build/gen_objectref_pmc.pl	2009-04-25 19:12:52.625000000 +0200
@@ -38,6 +38,8 @@ unless (-e $template) {
 my $template_contents = slurp($template);
 
 # Read v-tables list and get list of functions from it.
+$PConfig{build_dir} = $PConfig{libdir}.$PConfig{versiondir}
+  if $PConfig{build_dir} ne $PConfig{prefix};
 my $vtable_list = slurp($PConfig{build_dir}.'/src/vtable.tbl');
 my @all_vtables = extract_matches($vtable_list, '(\w+)\\(');
 
