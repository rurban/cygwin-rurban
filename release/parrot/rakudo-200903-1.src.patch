--- origsrc/rakudo-2009-03/Configure.pl	2009-03-20 14:21:53.000000000 +0100
+++ src/rakudo-2009-03/Configure.pl	2009-04-10 09:27:15.031250000 +0200
@@ -98,6 +98,16 @@ sub read_parrot_config {
             last if %config;
         }
     }
+    # installed logic:
+    my $installed = $config{build_dir} ne $config{prefix};
+    $config{parrotlib_dir} = $installed ? $config{lib_dir}.$config{versiondir}
+                                        : $config{build_dir}.'/runtime/parrot';
+    $config{parrotbin_dir} = $installed ? $config{bin_dir}
+                                        : $config{build_dir};
+    $config{compilers_dir} = $installed ? $config{parrotlib_dir}.'/languages'
+                                        : $config{parrotlib_dir}.'/compilers';
+    $config{perl5lib_dir}  = $installed ? $config{parrotlib_dir}.'/tools'
+                                        : $config{parrotlib_dir};
     return %config;
 }
 
@@ -108,7 +118,7 @@ sub create_makefile {
 
     my $maketext = slurp( 'build/Makefile.in' );
 
-    $config{'win32_libparrot_copy'} = $^O eq 'MSWin32' ? 'copy $(BUILD_DIR)\libparrot.dll .' : '';
+    $config{'win32_libparrot_copy'} = $^O eq 'MSWin32' ? 'copy $(BUILD_DIR)\libparrot.dll .' : '@echo ""';
     $maketext =~ s/@(\w+)@/$config{$1}/g;
     if ($^O eq 'MSWin32') {
         $maketext =~ s{/}{\\}g;
--- origsrc/rakudo-2009-03/build/Makefile.in	2009-03-20 14:21:53.000000000 +0100
+++ src/rakudo-2009-03/build/Makefile.in	2009-04-11 10:54:15.062500000 +0200
@@ -5,19 +5,27 @@
 PARROT_ARGS =
 
 # values from parrot_config
-BUILD_DIR     = @build_dir@
 LOAD_EXT      = @load_ext@
 O             = @o@
 EXE           = @exe@
 MAKE          = @make_c@
 PERL          = @perl@
 RM_F          = @rm_f@
+MKPATH        = @mkpath@
+CP            = @cp@
 
 # Various paths
-PARROT_DYNEXT = $(BUILD_DIR)/runtime/parrot/dynext
-PERL6GRAMMAR  = $(BUILD_DIR)/runtime/parrot/library/PGE/Perl6Grammar.pbc
-NQP           = $(BUILD_DIR)/compilers/nqp/nqp.pbc
-PCT           = $(BUILD_DIR)/runtime/parrot/library/PCT.pbc
+LIB_DIR       = @parrotlib_dir@
+BIN_DIR       = @parrotbin_dir@
+COMPILERS_DIR = @compilers_dir@
+PERL5LIB_DIR  = @perl5lib_dir@
+MANDIR        = @mandir@
+DOC_DIR       = @doc_dir@
+
+PARROT_DYNEXT = $(LIB_DIR)/dynext
+PERL6GRAMMAR  = $(LIB_DIR)/library/PGE/Perl6Grammar.pbc
+NQP           = $(COMPILERS_DIR)/nqp/nqp.pbc
+PCT           = $(LIB_DIR)/library/PCT.pbc
 PMC_DIR       = src/pmc
 OPSDIR        = src/ops
 OPSLIB        = perl6
@@ -26,12 +34,13 @@ OPS_FILE      = src/ops/perl6.ops
 # Set up extensions
 
 # Setup some commands
-PARROT        = $(BUILD_DIR)/parrot$(EXE)
+PARROT        = $(BIN_DIR)/parrot$(EXE)
 CAT           = $(PERL) -MExtUtils::Command -e cat
-BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
-BUILD_DYNOPS  = $(PERL) $(BUILD_DIR)/tools/build/dynoplibs.pl
-RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
-PBC_TO_EXE    = $(BUILD_DIR)/pbc_to_exe$(EXE)
+BUILD_DYNPMC  = $(PERL) $(LIB_DIR)/tools/build/dynpmc.pl
+BUILD_DYNOPS  = $(PERL) $(LIB_DIR)/tools/build/dynoplibs.pl
+RECONFIGURE   = $(PERL) $(LIB_DIR)/tools/dev/reconfigure.pl
+PBC_TO_EXE    = $(BIN_DIR)/pbc_to_exe$(EXE)
+POD2MAN       = @pod2man@
 
 SOURCES = perl6.pir \
   src/gen_grammar.pir \
@@ -128,6 +137,8 @@ PMC_SOURCES = $(PMC_DIR)/perl6str.pmc $(
 
 PERL6_GROUP = $(PMC_DIR)/perl6_group$(LOAD_EXT)
 
+DOCS = README CREDITS LICENSE docs/*
+
 CLEANUPS = \
   perl6.pbc \
   perl6.c \
@@ -201,7 +212,7 @@ Test.pir: Test.pm perl6.pbc
 	$(PARROT) $(PARROT_ARGS) perl6.pbc --target=pir --output=Test.pir Test.pm
 
 $(PMC_DIR)/objectref.pmc : $(PMC_DIR)/objectref_pmc.template build/gen_objectref_pmc.pl
-	$(PERL) -I$(BUILD_DIR)/lib build/gen_objectref_pmc.pl $(PMC_DIR)/objectref_pmc.template \
+	$(PERL) -I$(PERL5LIB_DIR)/lib build/gen_objectref_pmc.pl $(PMC_DIR)/objectref_pmc.template \
 		$(PMC_DIR)/objectref.pmc
 
 src/gen_grammar.pir: $(PARROT) $(PERL6GRAMMAR) src/parser/grammar.pg src/parser/grammar-oper.pg
@@ -253,7 +264,7 @@ t/localtest.data:
 test    : coretest
 
 codetest:
-	$(MAKE) $(BUILD_DIR) codetest
+	$(MAKE) @build_dir@ codetest
 
 coretest: perl6$(EXE)
 #	prove t/pmc
@@ -286,6 +297,30 @@ sometests: all
 t/*.t t/*/*.t t/*/*/*.t: all Test.pir
 	@$(HARNESS_WITH_FUDGE) --verbosity=1 $@
 
+# install
+installable_perl6$(EXE): perl6.pbc
+	$(PBC_TO_EXE) perl6.pbc --install
+
+installable : installable_perl6@exe@ $(PERL6_GROUP) perl6.pbc
+	$(MKPATH) $(COMPILERS_DIR)/perl6
+	$(CP) perl6.pbc $(COMPILERS_DIR)/perl6/perl6.pbc
+	@cd $(PMC_DIR) && $(BUILD_DYNPMC) copy "--destination=$(PARROT_DYNEXT)" $(PMCS)
+	@cd $(OPSDIR)  && $(BUILD_DYNOPS) copy "--destination=$(PARROT_DYNEXT)" $(OPSLIB)
+
+install : installable
+	$(MKPATH) $(DESTDIR)$(BIN_DIR)
+	$(CP) installable_perl6@exe@ $(DESTDIR)$(BIN_DIR)/rakudo@exe@
+	cd $(DESTDIR)$(BIN_DIR) && ln -s rakudo@exe@ parrot-perl6 && ln -s rakudo@exe@ perl6
+	$(MKPATH) $(DESTDIR)$(COMPILERS_DIR)/perl6
+	$(CP) perl6.pbc $(DESTDIR)$(COMPILERS_DIR)/perl6/perl6.pbc
+	$(MKPATH) $(DESTDIR)$(LIB_DIR)/dynext
+	@cd $(PMC_DIR) && $(BUILD_DYNPMC) copy "--destination=$(DESTDIR)$(LIB_DIR)/dynext" $(PMCS)
+	@cd $(OPSDIR)  && $(BUILD_DYNOPS) copy "--destination=$(DESTDIR)$(LIB_DIR)/dynext" $(OPSLIB)
+	$(MKPATH) $(DESTDIR)$(DOC_DIR)/rakudo
+	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/rakudo
+	$(MKPATH) $(DESTDIR)$(MANDIR)/man1
+	$(POD2MAN) docs/running.pod > $(DESTDIR)$(MANDIR)/man1/perl6.1
+	$(POD2MAN) docs/running.pod > $(DESTDIR)$(MANDIR)/man1/rakudo.1
 
 ##  cleaning
 clean:
--- origsrc/rakudo-2009-03/build/gen_objectref_pmc.pl	2009-03-20 14:21:53.000000000 +0100
+++ src/rakudo-2009-03/build/gen_objectref_pmc.pl	2009-04-10 07:57:51.031250000 +0200
@@ -38,6 +38,8 @@ unless (-e $template) {
 my $template_contents = slurp($template);
 
 # Read v-tables list and get list of functions from it.
+$PConfig{build_dir} = $PConfig{lib_dir}.$PConfig{versiondir}
+  if $PConfig{build_dir} ne $PConfig{prefix};
 my $vtable_list = slurp($PConfig{build_dir}.'/src/vtable.tbl');
 my @all_vtables = extract_matches($vtable_list, '(\w+)\\(');
 
