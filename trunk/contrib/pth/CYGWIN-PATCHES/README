GNU pth - GNU portable threads
------------------------------------------
Pth is a very portable POSIX/ANSI-C based library for Unix platforms which
provides non-preemptive priority-based scheduling for multiple threads of
execution (aka ``multithreading'') inside event-driven applications. All
threads run in the same address space of the server application, but each
thread has it's own individual program-counter, run-time stack, signal mask
and errno variable.

The thread scheduling itself is done in a cooperative way, i.e., the
threads are managed by a priority- and event-based non-preemptive
scheduler. The intention is that this way one can achieve better
portability and run-time performance than with preemptive scheduling.
The event facility allows threads to wait until various types of events
occur, including pending I/O on filedescriptors, asynchronous signals,
elapsed timers, pending I/O on message ports, thread and process
termination, and even customized callback functions.

Additionally Pth provides an optional emulation API for POSIX.1c threads
("Pthreads") which can be used for backward compatibility to existing
multithreaded applications. 

------------------------------------------

Runtime requirements:
  cygwin-1.5.x

Build requirements:
  cygwin-1.5.x
  cygport
  gcc-core
  perl

Canonical homepage:
  http://www.gnu.org/software/pth/

Canonical download:
  ftp://ftp.gnu.org/gnu/pth/pth-2.0.1.tar.gz

------------------------------------------

Build instructions:
  unpack pth-VER-REL-src.tar.bz2
    if you use setup to install this src package, it will be
	 unpacked under /usr/src automatically
  cd /usr/src
  cygport pth-<VER>-<CYGREL>.cygport almostall

This will create:
  /usr/src/pth-<VER>-<CYGREL>.tar.bz2
  /usr/src/pth-<VER>-<CYGREL>-src.tar.bz2
Or use 'cygport pth-<VER>-<CYGREL>.cygport prep' to get a patched source directory 

------------------------------------------

Files included in the package:

  /usr/bin/cygpth-20.dll
  /usr/bin/pth-config
  /usr/include/pth.h
  /usr/lib/libpth.a
  /usr/lib/libpth.dll.a
  /usr/lib/libpth.la
  /usr/share/aclocal/pth.m4
  /usr/share/doc/Cygwin/pth-2.0.6.README
  /usr/share/doc/pth-2.0.6/ANNOUNCE
  /usr/share/doc/pth-2.0.6/AUTHORS
  /usr/share/doc/pth-2.0.6/COPYING
  /usr/share/doc/pth-2.0.6/ChangeLog
  /usr/share/doc/pth-2.0.6/HACKING
  /usr/share/doc/pth-2.0.6/HISTORY
  /usr/share/doc/pth-2.0.6/INSTALL
  /usr/share/doc/pth-2.0.6/NEWS
  /usr/share/doc/pth-2.0.6/PORTING
  /usr/share/doc/pth-2.0.6/README
  /usr/share/doc/pth-2.0.6/SUPPORT
  /usr/share/doc/pth-2.0.6/TESTS
  /usr/share/doc/pth-2.0.6/THANKS
  /usr/share/doc/pth-2.0.6/USERS
  /usr/share/man/man1/pth-config.1.gz
  /usr/share/man/man3/pth.3.gz

  /usr/share/doc/pth-2.0.1/pthread.ps
  /usr/share/doc/pth-2.0.1/rse-pmt.ps

------------------------------------------

Port Notes:

----------- version 2.0.6-1 --------------
* build support changed from GBS to cygport
* maintainer changed from Gerrit P. Haase <gerrit@familiehaase.de>
  to Reini Urban <rurban@x-ray.at>

----------- version 2.0.1-1 --------------
Initial release.

>>> Testing pth-2.0.6-1

=== TESTING GLOBAL LIBRARY API ===

Fetching library version
version = 0x200206

=== TESTING BASIC OPERATION ===

Initializing Pth system (spawns scheduler and main thread)
Killing Pth system for testing purposes
Re-Initializing Pth system

=== TESTING BASIC THREAD OPERATION ===

Creating attribute object
Spawning thread
Joining thread

=== TESTING NESTED THREAD OPERATION ===

Spawning thread 1
Spawning thread 2
Spawning thread 3
Spawning thread 4
Spawning thread 5
Spawning thread 6
Spawning thread 7
Spawning thread 8
Spawning thread 9
Joined thread 9
Joined thread 8
Joined thread 7
Joined thread 6
Joined thread 5
Joined thread 4
Joined thread 3
Joined thread 2
Joined thread 1

OK - ALL TESTS SUCCESSFULLY PASSED.

------------------------------------------

Cygwin port maintained by: Reini Urban <rurban@x-ray.at>
Initial Maintainer: Gerrit P. Haase <gerrit@familiehaase.de>
