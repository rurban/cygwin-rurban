Index: parrot-svn/docs/pdds/draft/pdd30_install.pod
===================================================================
--- parrot-svn.orig/docs/pdds/draft/pdd30_install.pod
+++ parrot-svn/docs/pdds/draft/pdd30_install.pod
@@ -1,5 +1,5 @@
 # Copyright (C) 2008, The Perl Foundation.
-# $Id: pdd30_install.pod 30255 2008-08-23 12:15:46Z rurban $
+# $Id: pdd30_install.pod 30255 2008-08-28 15:15:46Z rurban $
 
 =head1 NAME
 
@@ -8,10 +8,10 @@ docs/pdds/draft/pdd30_install.pod - Parr
 =head1 ABSTRACT
 
 This PDD defines Parrot's installation details. The goal is to provide binary
-packages, a working C<make install> for parrot, the installables, FHS compliant
-search paths for the installables and solving the problem of not accessing
-installed source-only files and the optimization of config bootstrapping
-if a frozen config_hash is already linked.
+packages, a working C<make install> for parrot, the so-called installables,
+FHS compliant search paths for the installables and solving the problem of
+not accessing installed source-only files and the optimization of config
+bootstrapping if a frozen config_hash is already linked.
 
 =head1 VERSION
 
@@ -27,19 +27,19 @@ $Revision: 30459 $
 =head1 DESCRIPTION
 
 Parrot installation mechanisms are more powerful than perl5's.
-MANIFEST contains also the end location, tools/dev/install_files.pl is driven
-by this definition.
-The three runtime paths for "include", "library" for load_bytecode and "dynext"
-for loadlib should end up in the $prefix/lib/parrot paths.
-See #56996-fhs-runtime.patch
+MANIFEST contains also the package and the final destination path,
+tools/dev/install_files.pl is driven by this definition.
+The three runtime paths for "include", "library" for load_bytecode
+and "dynext" for loadlib should end up in the $prefix/lib/parrot paths.
+{{ See #56996-fhs-runtime.patch }}
 
 Contrary to perl5, parrot and its language implementions on top of parrot may
 be installed as self-hosting single-file executables, with the help of merged
-pbc's and pbc2exe --install.
+pbc's and pbc_to_exe --install.
 
 Bootstrapping the config hash should not read a config file when the hash is
-already contained in the pmc or executable. See #57418 [TODO] optimize
-_config to omit .include "library/config.pir" on installables.
+already contained in the pmc or executable. {{ See #57418 [TODO] optimize
+_config to omit .include "library/config.pir" on installables. }}
 
 The same problem is for every .include, .loadlib and .load_bytecode statement
 in installed files where the target is not installed. This could be solved with
@@ -63,15 +63,61 @@ have a similar packaging problem, which 
 B<build_dir> is the full path where parrot was built. It is defined in the
 config hash. When building from source build_dir is also the PARROT_RUNTIME prefix.
 
-B<DESTDIR> is the end location of the parrot tree in front of the prefix
-(/usr or /usr/local). This allows packaging by installing into a seperate
-install tree and do a tar cf there.
+B<DESTDIR> is the target path of the installed parrot tree for make install in
+front of the prefix (/usr or /usr/local). This allows packaging by installing
+into a temporary install tree and do a tar cf there.
 
 The B<config hash> is the return value of the global function C<_config()>,
 generated in F<config_lib.pasm>, and either defined in F<library/config.pir>, or
 as frozen pmc embedded in the test executable (F<config.fpmc>), the installable
 executable (F<install_config.fpmc>) or empty for miniparrot (F<null_config.fpmc>).
 
+=head2 Destination paths
+
+The destination paths for make install files is a string concat of
+
+* the $(DESTDIR) as defined per Makefile argument,
+* plus the respective Configure defined directoy (prefix, bin_dir, lib_dir, include_dir, mandir, doc_dir, ...)
+
+ where the directores are defined by default to follow the FHS convention
+ and optional Configure.pl arguments,
+ and the files as defined in one of the three MANIFEST files in the format
+ <filename> \t []lib,doc,include,bin - files from the [library] package go to prefix/lib_dir and either dynext, library or include,
+
+* plus the filename as defined by the three MANIFEST files.
+
+There's additional logic in the tools/dev/install_files.pl script.
+
+prefix defaults to "/usr/local" and packages define them as "/usr"
+lib_dir defaults to prefix + "/lib"
+ and libraries go to parrot/dynext for shared libs (flat)
+ parrot/library for pbc files
+ (structured according to the namespace)
+ parrot/include for pir and pasm files (flat)
+bin_dir to prefix + "/bin"
+doc_dir to prefix + "/share/doc/parrot"
+mandir to prefix + "/man", but it should be prefix + "/share/man"
+according to the FHS
+include_dir to prefix + "/include/parrot"
+pkgconfig_dir to prefix + "/lib/pkgconfig"
+
+What is missing is the end location of language pbc's and installable exe's.
+The convention by fedora and cygwin for parrot-language installables is
+ $(DESTDIR)@bin_dir@/parrot-$(LANG)@exe@
+
+B<Open problem:>
+For language pbc's a new dir like script_dir or lib_dir/parrot/bin would be required.
+They could also be copied $(DESTDIR)@lib_dir@/parrot/library where the other
+pbc's are, which would make the required to make HLL interoperatibility work.
+(See L<pdds/draft/pdd31_hll_interop>.
+So each language will need its root namespace reserved for it's <lang>.pbc.
+We could thing of symlinking it to runtime/parrot/library
+at make languages, so hll_interop can be tested.
+
+The language-specific group- and op- shared libs go to
+$(DESTDIR)@lib_dir@/parrot/dynext.
+
+
 =head1 IMPLEMENTATION
 
 =head2 make install
@@ -92,13 +138,13 @@ libparrot.so on most platforms. There's 
 make install actions for a language lang:
 
  copy installables to DESTDIR/bin_dir as parrot-lang
- optionally copy lang.pbc to DESTDIR/script_dir (/usr/lib/parrot/bin/ ?)
+ optionally copy lang.pbc to DESTDIR/script_dir (/usr/lib/parrot/bin/ ?) or DESTDIR/lib_dir/parrot/library/
  copy libraries to DESTDIR/lib_dir/parrot/dynext/
  optionally copy pbc's to DESTDIR/lib_dir/parrot/library/ (only php_ext)
  optionally copy include pasm and pirs to DESTDIR/lib_dir/parrot/include/ (not yet)
  copy docs to DESTDIR/doc_dir/
- generate a man(1) page and copy to DESTDIR/man_dir/
- optionally generate html and copy to DESTDIR/html_dir/lang/
+ generate a man(1) page and copy to DESTDIR/mandir/
+ optionally generate html and copy to DESTDIR/htmldir/lang/
 
 =head2 make installable -C languages/lang
 
@@ -131,8 +177,7 @@ extending the current automake-like fram
 
 Bootstrapping the config hash should not read a config file when the hash is
 already contained in the pmc or executable.
-.include "library/config.pir" and .load_bytecode "config.pbc" should be
-omitted on installables if possible.
+.load_bytecode "config.pbc" should be omitted on installables if possible.
 
 =head2 Accessing not-installed files
 
@@ -199,9 +244,9 @@ None.
 
 =head1 REFERENCES
 
-The mentioned patches against SVN HEAD are at
-http://code.google.com/p/cygwin-rurban/source/browse/trunk/release/parrot/patches
-The patches in the tickets are always too old.
+The mentioned patches are in the cygwin070patches branch.
+
+As single patches they are at http://code.google.com/p/cygwin-rurban/source/browse/trunk/release/parrot/patches.
 
 #nnnnn references tickets in http://rt.perl.org/rt3/Ticket/Display.html?id=nnnnn
 
